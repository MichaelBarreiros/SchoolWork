// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/16/2018 19:49:06"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab2demo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab2demo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg x0;
reg x1;
reg x2;
reg x3;
reg y0;
reg y1;
reg y2;
reg y3;
// wires                                               
wire a1;
wire a2;
wire b1;
wire b2;
wire c1;
wire c2;
wire d1;
wire d2;
wire e1;
wire e2;
wire f1;
wire f2;
wire g1;
wire g2;

// assign statements (if any)                          
lab2demo i1 (
// port map - connection between master ports and signals/registers   
	.a1(a1),
	.a2(a2),
	.b1(b1),
	.b2(b2),
	.c1(c1),
	.c2(c2),
	.d1(d1),
	.d2(d2),
	.e1(e1),
	.e2(e2),
	.f1(f1),
	.f2(f2),
	.g1(g1),
	.g2(g2),
	.x0(x0),
	.x1(x1),
	.x2(x2),
	.x3(x3),
	.y0(y0),
	.y1(y1),
	.y2(y2),
	.y3(y3)
);
initial 
begin 
#1000000 $finish;
end 

// x3
always
begin
	x3 = 1'b0;
	x3 = #500000 1'b1;
	#500000;
end 

// x2
always
begin
	x2 = 1'b0;
	x2 = #250000 1'b1;
	#250000;
end 

// x1
always
begin
	x1 = 1'b0;
	x1 = #125000 1'b1;
	#125000;
end 

// x0
always
begin
	x0 = 1'b0;
	x0 = #62500 1'b1;
	#62500;
end 

// y3
always
begin
	y3 = 1'b0;
	y3 = #500000 1'b1;
	#500000;
end 

// y2
always
begin
	y2 = 1'b0;
	y2 = #250000 1'b1;
	#250000;
end 

// y1
always
begin
	y1 = 1'b0;
	y1 = #125000 1'b1;
	#125000;
end 

// y0
always
begin
	y0 = 1'b0;
	y0 = #62500 1'b1;
	#62500;
end 
endmodule

