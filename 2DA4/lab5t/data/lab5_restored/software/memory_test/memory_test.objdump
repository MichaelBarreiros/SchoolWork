
memory_test.elf:     file format elf32-littlenios2
memory_test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000244

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f7bc memsz 0x0000f7bc flags r-x
    LOAD off    0x000107dc vaddr 0x0000f7dc paddr 0x000112c8 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012db4 vaddr 0x00012db4 paddr 0x00012db4 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f1d0  00000244  00000244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003c8  0000f414  0000f414  00010414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0000f7dc  000112c8  000107dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00012db4  00012db4  00012db4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00012f14  00012f14  000122c8  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000122c8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e70  00000000  00000000  000122f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022889  00000000  00000000  00013160  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008c32  00000000  00000000  000359e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b048  00000000  00000000  0003e61b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001fd4  00000000  00000000  00049664  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003739  00000000  00000000  0004b638  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017751  00000000  00000000  0004ed71  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000664c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001890  00000000  00000000  000664f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006ad12  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006ad15  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006ad21  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006ad22  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006ad23  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006ad2e  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006ad39  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  0006ad44  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000032  00000000  00000000  0006ad4f  2**0
                  CONTENTS, READONLY
 26 .jdi          000056b1  00000000  00000000  0006ad81  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0003775c  00000000  00000000  00070432  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000244 l    d  .text	00000000 .text
0000f414 l    d  .rodata	00000000 .rodata
0000f7dc l    d  .rwdata	00000000 .rwdata
00012db4 l    d  .bss	00000000 .bss
00012f14 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../memory_test_bsp//obj/HAL/src/crt0.o
0000028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000f522 l     O .rodata	00000010 zeroes.4404
0000295c l     F .text	000000bc __sbprintf
0000f532 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002b6c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0000469c l     F .text	00000008 __fp_unlock
000046b0 l     F .text	0000019c __sinit.part.1
0000484c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000f7dc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0000fc20 l     O .rwdata	00000020 lc_ctype_charset
0000fc00 l     O .rwdata	00000020 lc_message_charset
0000fc40 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f564 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007164 l     F .text	000000fc __sprint_r.part.0
0000f698 l     O .rodata	00000010 blanks.4348
0000f688 l     O .rodata	00000010 zeroes.4349
000086f0 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000cd74 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000ce80 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000ceac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000cf98 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d078 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d164 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d338 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000112b8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000d584 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000d6b8 l     F .text	00000034 alt_dev_reg
00010228 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000d990 l     F .text	0000020c altera_avalon_jtag_uart_irq
0000db9c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e348 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e7bc l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000e8fc l     F .text	0000003c alt_get_errno
0000e938 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00012de8 g     O .bss	00000004 alt_instruction_exception_handler
00006c74 g     F .text	00000074 _mprec_log10
00006d60 g     F .text	0000008c __any_on
00009148 g     F .text	00000054 _isatty_r
0000f570 g     O .rodata	00000028 __mprec_tinytens
0000d274 g     F .text	0000007c alt_main
00012e14 g     O .bss	00000100 alt_irq
0000919c g     F .text	00000060 _lseek_r
000112c8 g       *ABS*	00000000 __flash_rwdata_start
0000b8a0 g     F .text	00000088 .hidden __eqdf2
00012f14 g       *ABS*	00000000 __alt_heap_start
0000070c g     F .text	0000003c printf
00009a74 g     F .text	0000009c _wcrtomb_r
00006f8c g     F .text	0000005c __sseek
000049ec g     F .text	00000010 __sinit
0000991c g     F .text	00000140 __swbuf_r
00004ff8 g     F .text	0000007c _setlocale_r
00004854 g     F .text	00000068 __sfmoreglue
0000d314 g     F .text	00000024 __malloc_unlock
000091fc g     F .text	0000015c memmove
000049d4 g     F .text	00000018 _cleanup
00005df0 g     F .text	000000a8 _Balloc
0000b928 g     F .text	000000dc .hidden __gtdf2
0000ecf4 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00008c30 g     F .text	0000005c _fstat_r
00012dcc g     O .bss	00000004 errno
00006f08 g     F .text	00000008 __seofread
00012dd4 g     O .bss	00000004 alt_argv
00019288 g       *ABS*	00000000 _gp
000100a8 g     O .rwdata	00000180 alt_fd_list
0000ed18 g     F .text	00000090 alt_find_dev
00005b80 g     F .text	00000148 memcpy
000046a4 g     F .text	0000000c _cleanup_r
0000cb8c g     F .text	000000dc .hidden __floatsidf
0000e880 g     F .text	0000007c alt_io_redirect
0000ba04 g     F .text	000000f4 .hidden __ltdf2
0000f414 g       *ABS*	00000000 __DTOR_END__
0000efe4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00006dec g     F .text	00000074 __fpclassifyd
00006bd0 g     F .text	000000a4 __ratio
000086d4 g     F .text	0000001c __vfiprintf_internal
0000dd94 g     F .text	0000021c altera_avalon_jtag_uart_read
000006dc g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00000620 g     F .text	00000064 .hidden __udivsi3
0000cfd4 g     F .text	000000a4 isatty
0000f5c0 g     O .rodata	000000c8 __mprec_tens
00005074 g     F .text	0000000c __locale_charset
0000ef54 g     F .text	00000090 alt_icache_flush
00012dc8 g     O .bss	00000004 __malloc_top_pad
00011290 g     O .rwdata	00000004 __mb_cur_max
000050a4 g     F .text	0000000c _localeconv_r
00008c8c g     F .text	000004bc __sfvwrite_r
000061fc g     F .text	0000003c __i2b
00006e60 g     F .text	00000054 _sbrk_r
00009358 g     F .text	00000060 _read_r
000112b0 g     O .rwdata	00000004 alt_max_fd
00008924 g     F .text	000000f0 _fclose_r
0000466c g     F .text	00000030 fflush
00012dc4 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a70c g     F .text	000008ac .hidden __adddf3
00006978 g     F .text	0000010c __b2d
0000a1d4 g     F .text	00000538 .hidden __umoddi3
0000d1a0 g     F .text	000000d4 lseek
00011288 g     O .rwdata	00000004 _global_impure_ptr
000093b8 g     F .text	00000564 _realloc_r
00012f14 g       *ABS*	00000000 __bss_end
0000e6cc g     F .text	000000f0 alt_iic_isr_register
0000ebec g     F .text	00000108 alt_tick
00009c5c g     F .text	00000578 .hidden __udivdi3
00008b8c g     F .text	00000024 _fputwc_r
0000f598 g     O .rodata	00000028 __mprec_bigtens
00005fe0 g     F .text	00000104 __s2b
0000cc68 g     F .text	000000a8 .hidden __floatunsidf
000066b8 g     F .text	00000060 __mcmp
00004a0c g     F .text	00000018 __fp_lock_all
0000e680 g     F .text	0000004c alt_ic_irq_enabled
0000eb50 g     F .text	0000009c alt_alarm_stop
00012ddc g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
00010080 g     O .rwdata	00000028 alt_dev_null
0000e300 g     F .text	00000048 alt_dcache_flush_all
000060e4 g     F .text	00000068 __hi0bits
0000cb0c g     F .text	00000080 .hidden __fixdfsi
000112c8 g       *ABS*	00000000 __ram_rwdata_end
000112a8 g     O .rwdata	00000008 alt_dev_list
0000d5c0 g     F .text	000000f8 write
0000f7dc g       *ABS*	00000000 __ram_rodata_end
0000cee8 g     F .text	000000b0 fstat
0000ba04 g     F .text	000000f4 .hidden __ledf2
00006430 g     F .text	00000140 __pow5mult
00007278 g     F .text	0000145c ___vfiprintf_internal_r
00012dbc g     O .bss	00000004 __nlocale_changed
00000684 g     F .text	00000058 .hidden __umodsi3
00012f14 g       *ABS*	00000000 end
0000d8d0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0000f414 g       *ABS*	00000000 __CTOR_LIST__
00020000 g       *ABS*	00000000 __alt_stack_pointer
0000cd10 g     F .text	00000064 .hidden __clzsi2
0000dfb0 g     F .text	00000224 altera_avalon_jtag_uart_write
000049fc g     F .text	00000004 __sfp_lock_acquire
00005a9c g     F .text	000000e4 memchr
00000748 g     F .text	000021f8 ___vfprintf_internal_r
00004b60 g     F .text	00000310 _free_r
00005080 g     F .text	00000010 __locale_mb_cur_max
0000f260 g     F .text	00000180 __call_exitprocs
00012db8 g     O .bss	00000004 __mlocale_changed
00011294 g     O .rwdata	00000004 __malloc_sbrk_base
00000244 g     F .text	0000004c _start
00012de0 g     O .bss	00000004 _alt_tick_rate
00006570 g     F .text	00000148 __lshift
00012de4 g     O .bss	00000004 _alt_nticks
0000d374 g     F .text	000000fc read
0000d724 g     F .text	00000048 alt_sys_init
0000f148 g     F .text	00000118 __register_exitproc
00006238 g     F .text	000001f8 __multiply
0000dc3c g     F .text	00000068 altera_avalon_jtag_uart_close
0000f7dc g       *ABS*	00000000 __ram_rwdata_start
0000f414 g       *ABS*	00000000 __ram_rodata_start
00012dec g     O .bss	00000028 __malloc_current_mallinfo
00006a84 g     F .text	0000014c __d2b
0000d76c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000eeb0 g     F .text	000000a4 alt_get_fd
0000880c g     F .text	00000054 _close_r
0000f0cc g     F .text	0000007c memcmp
0000d82c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00012f14 g       *ABS*	00000000 __alt_stack_base
0000d87c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00002a18 g     F .text	00000154 __swsetup_r
0000afb8 g     F .text	000008e8 .hidden __divdf3
000048bc g     F .text	00000118 __sfp
00006ce8 g     F .text	00000078 __copybits
0000fc78 g     O .rwdata	00000408 __malloc_av_
00004a08 g     F .text	00000004 __sinit_lock_release
0000baf8 g     F .text	00000718 .hidden __muldf3
00006eb4 g     F .text	00000054 __sread
0000eda8 g     F .text	00000108 alt_find_file
0000e384 g     F .text	000000a4 alt_dev_llist_insert
0000d2f0 g     F .text	00000024 __malloc_lock
0000d4d4 g     F .text	000000b0 sbrk
00004610 g     F .text	0000005c _fflush_r
00008860 g     F .text	000000c4 _calloc_r
00012db4 g       *ABS*	00000000 __bss_start
00005cc8 g     F .text	00000128 memset
00000290 g     F .text	00000298 main
00012dd8 g     O .bss	00000004 alt_envp
00012dc0 g     O .bss	00000004 __malloc_max_total_mem
0000d7cc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009a5c g     F .text	00000018 __swbuf
00006fe8 g     F .text	00000008 __sclose
00020000 g       *ABS*	00000000 __alt_heap_limit
00008a14 g     F .text	00000014 fclose
00002d6c g     F .text	00001688 _dtoa_r
00005290 g     F .text	0000080c _malloc_r
00009bd0 g     F .text	00000030 __ascii_wctomb
000112b4 g     O .rwdata	00000004 alt_errno
00004e70 g     F .text	000000c4 _fwalk
00000528 g     F .text	00000084 .hidden __divsi3
00004a3c g     F .text	00000124 _malloc_trim_r
0000f414 g       *ABS*	00000000 __CTOR_END__
00006ff0 g     F .text	000000dc strcmp
0000f414 g       *ABS*	00000000 __flash_rodata_start
0000f414 g       *ABS*	00000000 __DTOR_LIST__
0000b8a0 g     F .text	00000088 .hidden __nedf2
0000d6ec g     F .text	00000038 alt_irq_init
0000d470 g     F .text	00000064 alt_release_fd
0000f6a8 g     O .rodata	00000100 .hidden __clz_tab
00012db4 g     O .bss	00000004 _PathLocale
0000f080 g     F .text	00000014 atexit
000087ac g     F .text	00000060 _write_r
000050b0 g     F .text	00000018 setlocale
0001128c g     O .rwdata	00000004 _impure_ptr
00012dd0 g     O .bss	00000004 alt_argc
000043f4 g     F .text	0000021c __sflush_r
0000e488 g     F .text	00000060 _do_dtors
0000509c g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006914 g     F .text	00000064 __ulp
00004a24 g     F .text	00000018 __fp_unlock_all
000112a0 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
000050c8 g     F .text	0000000c localeconv
0000e51c g     F .text	00000050 alt_ic_isr_register
000112c8 g       *ABS*	00000000 _edata
00012f14 g       *ABS*	00000000 _end
00008a28 g     F .text	00000164 __fputwc
00000244 g       *ABS*	00000000 __ram_exceptions_end
0000dca4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000e5f4 g     F .text	0000008c alt_ic_irq_disable
00006f10 g     F .text	0000007c __swrite
00011298 g     O .rwdata	00000004 __malloc_trim_threshold
00005090 g     F .text	0000000c __locale_msgcharset
0000f094 g     F .text	00000038 exit
00004f34 g     F .text	000000c4 _fwalk_reent
00006718 g     F .text	000001fc __mdiff
000005ac g     F .text	00000074 .hidden __modsi3
00020000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004a00 g     F .text	00000004 __sfp_lock_release
0000f3e0 g     F .text	00000034 _exit
0000e1d4 g     F .text	0000012c alt_alarm_start
000050d4 g     F .text	000001bc __smakebuf_r
000070cc g     F .text	00000098 strlen
0000e9fc g     F .text	00000154 open
0000b928 g     F .text	000000dc .hidden __gedf2
0001129c g     O .rwdata	00000004 __wctomb
00007260 g     F .text	00000018 __sprint_r
0000e4e8 g     F .text	00000034 alt_icache_flush_all
000112bc g     O .rwdata	00000004 alt_priority_mask
0000e56c g     F .text	00000088 alt_ic_irq_enable
00002940 g     F .text	0000001c __vfprintf_internal
00009c00 g     F .text	0000005c _wctomb_r
0000c210 g     F .text	000008fc .hidden __subdf3
0000614c g     F .text	000000b0 __lo0bits
000112c0 g     O .rwdata	00000008 alt_alarm_list
0000e428 g     F .text	00000060 _do_ctors
00009b10 g     F .text	000000c0 wcrtomb
0000cdb0 g     F .text	000000d0 close
0000d0e0 g     F .text	00000084 alt_load
00008bb0 g     F .text	00000080 fputwc
00004a04 g     F .text	00000004 __sinit_lock_acquire
00005ec0 g     F .text	00000120 __multadd
00005e98 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08409114 	ori	at,at,580
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	108b8504 	addi	r2,r2,11796
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	108b8504 	addi	r2,r2,11796
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 1e4:	000531fa 	rdctl	r2,exception
 1e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 1ec:	e0bffd17 	ldw	r2,-12(fp)
 1f0:	10801f0c 	andi	r2,r2,124
 1f4:	1004d0ba 	srli	r2,r2,2
 1f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 1fc:	0005333a 	rdctl	r2,badaddr
 200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 204:	d0a6d817 	ldw	r2,-25760(gp)
 208:	10000726 	beq	r2,zero,228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 20c:	d0a6d817 	ldw	r2,-25760(gp)
 210:	e0fffd17 	ldw	r3,-12(fp)
 214:	e1bffe17 	ldw	r6,-8(fp)
 218:	e17fff17 	ldw	r5,-4(fp)
 21c:	1809883a 	mov	r4,r3
 220:	103ee83a 	callr	r2
 224:	00000206 	br	230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 22c:	0005883a 	mov	r2,zero
}
 230:	e037883a 	mov	sp,fp
 234:	dfc00117 	ldw	ra,4(sp)
 238:	df000017 	ldw	fp,0(sp)
 23c:	dec00204 	addi	sp,sp,8
 240:	f800283a 	ret

Disassembly of section .text:

00000244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
     244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
     248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
     24c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
     250:	00bffd16 	blt	zero,r2,248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     254:	06c000b4 	movhi	sp,2
    ori sp, sp, %lo(__alt_stack_pointer)
     258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     25c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     260:	d6a4a214 	ori	gp,gp,37512
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     264:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     268:	108b6d14 	ori	r2,r2,11700

    movhi r3, %hi(__bss_end)
     26c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     270:	18cbc514 	ori	r3,r3,12052

    beq r2, r3, 1f
     274:	10c00326 	beq	r2,r3,284 <_start+0x40>

0:
    stw zero, (r2)
     278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     27c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     280:	10fffd36 	bltu	r2,r3,278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     284:	000d0e00 	call	d0e0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     288:	000d2740 	call	d274 <alt_main>

0000028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     28c:	003fff06 	br	28c <__alt_data_end+0xfffe028c>

00000290 <main>:

#define MAXNUM_WORDS   262144
	//the SRAM is 512K, ie. 512*1024byte, ie. 524288byte. each words has 16bits, so MAX_words: 262144
	//if want to test 32K, change this number accordingly.
int main()
{
     290:	defff604 	addi	sp,sp,-40
     294:	dfc00915 	stw	ra,36(sp)
     298:	df000815 	stw	fp,32(sp)
     29c:	dc000715 	stw	r16,28(sp)
     2a0:	df000804 	addi	fp,sp,32
  //for char the range is (-128---127)
  //for unsigned short (2 byte): range:  0--65535
  //for int(4 byte): range: 0---4,294,967,295  (?? 2 power of 32  ?)

   int i;
   int char_err_num=0, short_err_num=0, int_err_num=0;
     2a4:	e03ff915 	stw	zero,-28(fp)
     2a8:	e03ffa15 	stw	zero,-24(fp)
     2ac:	e03ffb15 	stw	zero,-20(fp)
  *   to debug. because  we can use printf to check. if use chars that are not   *
  *   printable, run time error may occur if try to use printf to check          *
  * *****************************************************************************/


   charsize=sizeof(aChar);
     2b0:	00800044 	movi	r2,1
     2b4:	e0bffc15 	stw	r2,-16(fp)
   shortsize=sizeof(aShort);
     2b8:	00800084 	movi	r2,2
     2bc:	e0bffd15 	stw	r2,-12(fp)
   intsize=sizeof(aInt);
     2c0:	00800104 	movi	r2,4
     2c4:	e0bffe15 	stw	r2,-8(fp)
   printf("the sizeof char, short, int are: %d, %d, %d\n", charsize, shortsize, intsize);
     2c8:	e1fffe17 	ldw	r7,-8(fp)
     2cc:	e1bffd17 	ldw	r6,-12(fp)
     2d0:	e17ffc17 	ldw	r5,-16(fp)
     2d4:	01000074 	movhi	r4,1
     2d8:	213d0504 	addi	r4,r4,-3052
     2dc:	000070c0 	call	70c <printf>



//===============version, do not use pointers==================================
    //----------------TEST CHAR-----------------------------------
        for (i=0; i<MAXNUM_WORDS*2; i++) {
     2e0:	e03ff815 	stw	zero,-32(fp)
     2e4:	00001106 	br	32c <main+0x9c>
            *(char*)(BASE+i)=i%128; // to be safe, use 128 rather than 256
     2e8:	e0fff817 	ldw	r3,-32(fp)
     2ec:	00810034 	movhi	r2,1024
     2f0:	1885883a 	add	r2,r3,r2
     2f4:	1009883a 	mov	r4,r2
     2f8:	e0fff817 	ldw	r3,-32(fp)
     2fc:	00a00034 	movhi	r2,32768
     300:	10801fc4 	addi	r2,r2,127
     304:	1884703a 	and	r2,r3,r2
     308:	1000040e 	bge	r2,zero,31c <main+0x8c>
     30c:	10bfffc4 	addi	r2,r2,-1
     310:	00ffe004 	movi	r3,-128
     314:	10c4b03a 	or	r2,r2,r3
     318:	10800044 	addi	r2,r2,1
     31c:	20800005 	stb	r2,0(r4)



//===============version, do not use pointers==================================
    //----------------TEST CHAR-----------------------------------
        for (i=0; i<MAXNUM_WORDS*2; i++) {
     320:	e0bff817 	ldw	r2,-32(fp)
     324:	10800044 	addi	r2,r2,1
     328:	e0bff815 	stw	r2,-32(fp)
     32c:	e0fff817 	ldw	r3,-32(fp)
     330:	00800234 	movhi	r2,8
     334:	18bfec16 	blt	r3,r2,2e8 <__alt_data_end+0xfffe02e8>
                                    // since by default, the char type may be the UNSIGNED CHAR,
                                    // which is ranged from 0--127.
					// or *(char*)(BASE+i)=(char)i;
        }

        for (i=0; i<MAXNUM_WORDS*2; i++) {
     338:	e03ff815 	stw	zero,-32(fp)
     33c:	00001706 	br	39c <main+0x10c>
            if (* (char*)(BASE+i)!=i%128){  // or .....(char)i,   if not i%128
     340:	e0fff817 	ldw	r3,-32(fp)
     344:	00810034 	movhi	r2,1024
     348:	1885883a 	add	r2,r3,r2
     34c:	10800003 	ldbu	r2,0(r2)
     350:	10c03fcc 	andi	r3,r2,255
     354:	18c0201c 	xori	r3,r3,128
     358:	18ffe004 	addi	r3,r3,-128
     35c:	e13ff817 	ldw	r4,-32(fp)
     360:	00a00034 	movhi	r2,32768
     364:	10801fc4 	addi	r2,r2,127
     368:	2084703a 	and	r2,r4,r2
     36c:	1000040e 	bge	r2,zero,380 <main+0xf0>
     370:	10bfffc4 	addi	r2,r2,-1
     374:	013fe004 	movi	r4,-128
     378:	1104b03a 	or	r2,r2,r4
     37c:	10800044 	addi	r2,r2,1
     380:	18800326 	beq	r3,r2,390 <main+0x100>
                char_err_num++;
     384:	e0bff917 	ldw	r2,-28(fp)
     388:	10800044 	addi	r2,r2,1
     38c:	e0bff915 	stw	r2,-28(fp)
                                    // since by default, the char type may be the UNSIGNED CHAR,
                                    // which is ranged from 0--127.
					// or *(char*)(BASE+i)=(char)i;
        }

        for (i=0; i<MAXNUM_WORDS*2; i++) {
     390:	e0bff817 	ldw	r2,-32(fp)
     394:	10800044 	addi	r2,r2,1
     398:	e0bff815 	stw	r2,-32(fp)
     39c:	e0fff817 	ldw	r3,-32(fp)
     3a0:	00800234 	movhi	r2,8
     3a4:	18bfe616 	blt	r3,r2,340 <__alt_data_end+0xfffe0340>
            if (* (char*)(BASE+i)!=i%128){  // or .....(char)i,   if not i%128
                char_err_num++;
            }
        }
        printf("Testing  Char: the total numbers of error is : %i\n" ,char_err_num);
     3a8:	e17ff917 	ldw	r5,-28(fp)
     3ac:	01000074 	movhi	r4,1
     3b0:	213d1104 	addi	r4,r4,-3004
     3b4:	000070c0 	call	70c <printf>

    //----------------TEST SHORT-----------------------------------
        for (i=0; i<MAXNUM_WORDS; i++) {
     3b8:	e03ff815 	stw	zero,-32(fp)
     3bc:	00000d06 	br	3f4 <main+0x164>
            *(short*)(BASE+i*2)=i%32767; // short, uses two bytes
     3c0:	e0fff817 	ldw	r3,-32(fp)
     3c4:	00808034 	movhi	r2,512
     3c8:	1885883a 	add	r2,r3,r2
     3cc:	1085883a 	add	r2,r2,r2
     3d0:	1021883a 	mov	r16,r2
     3d4:	e0bff817 	ldw	r2,-32(fp)
     3d8:	015fffc4 	movi	r5,32767
     3dc:	1009883a 	mov	r4,r2
     3e0:	00005ac0 	call	5ac <__modsi3>
     3e4:	8080000d 	sth	r2,0(r16)
            }
        }
        printf("Testing  Char: the total numbers of error is : %i\n" ,char_err_num);

    //----------------TEST SHORT-----------------------------------
        for (i=0; i<MAXNUM_WORDS; i++) {
     3e8:	e0bff817 	ldw	r2,-32(fp)
     3ec:	10800044 	addi	r2,r2,1
     3f0:	e0bff815 	stw	r2,-32(fp)
     3f4:	e0fff817 	ldw	r3,-32(fp)
     3f8:	00800134 	movhi	r2,4
     3fc:	18bff016 	blt	r3,r2,3c0 <__alt_data_end+0xfffe03c0>
            *(short*)(BASE+i*2)=i%32767; // short, uses two bytes
        }
        for (i=0; i<MAXNUM_WORDS; i++) {
     400:	e03ff815 	stw	zero,-32(fp)
     404:	00001306 	br	454 <main+0x1c4>
           // printf( " the written one: %d     should be----: %d   address   %x\n",*(short*)(BASE+i), i+15, BASE+i);
            if (* (short*)(BASE+i*2)!=i%32767){
     408:	e0fff817 	ldw	r3,-32(fp)
     40c:	00808034 	movhi	r2,512
     410:	1885883a 	add	r2,r3,r2
     414:	1085883a 	add	r2,r2,r2
     418:	1080000b 	ldhu	r2,0(r2)
     41c:	143fffcc 	andi	r16,r2,65535
     420:	8420001c 	xori	r16,r16,32768
     424:	84200004 	addi	r16,r16,-32768
     428:	e0bff817 	ldw	r2,-32(fp)
     42c:	015fffc4 	movi	r5,32767
     430:	1009883a 	mov	r4,r2
     434:	00005ac0 	call	5ac <__modsi3>
     438:	80800326 	beq	r16,r2,448 <main+0x1b8>
                short_err_num++;
     43c:	e0bffa17 	ldw	r2,-24(fp)
     440:	10800044 	addi	r2,r2,1
     444:	e0bffa15 	stw	r2,-24(fp)

    //----------------TEST SHORT-----------------------------------
        for (i=0; i<MAXNUM_WORDS; i++) {
            *(short*)(BASE+i*2)=i%32767; // short, uses two bytes
        }
        for (i=0; i<MAXNUM_WORDS; i++) {
     448:	e0bff817 	ldw	r2,-32(fp)
     44c:	10800044 	addi	r2,r2,1
     450:	e0bff815 	stw	r2,-32(fp)
     454:	e0fff817 	ldw	r3,-32(fp)
     458:	00800134 	movhi	r2,4
     45c:	18bfea16 	blt	r3,r2,408 <__alt_data_end+0xfffe0408>
           // printf( " the written one: %d     should be----: %d   address   %x\n",*(short*)(BASE+i), i+15, BASE+i);
            if (* (short*)(BASE+i*2)!=i%32767){
                short_err_num++;
            }
        }
        printf("Testing Short: the total numbers of error is : %i\n" ,short_err_num);
     460:	e17ffa17 	ldw	r5,-24(fp)
     464:	01000074 	movhi	r4,1
     468:	213d1e04 	addi	r4,r4,-2952
     46c:	000070c0 	call	70c <printf>

    //----------------TEST INT    -----------------------------------
        for (i=0; i<MAXNUM_WORDS/2; i++) {
     470:	e03ff815 	stw	zero,-32(fp)
     474:	00000b06 	br	4a4 <main+0x214>
            *(int*)(BASE+i*4)=i; // int, use 4 bytes
     478:	e0fff817 	ldw	r3,-32(fp)
     47c:	00804034 	movhi	r2,256
     480:	1885883a 	add	r2,r3,r2
     484:	1085883a 	add	r2,r2,r2
     488:	1085883a 	add	r2,r2,r2
     48c:	1007883a 	mov	r3,r2
     490:	e0bff817 	ldw	r2,-32(fp)
     494:	18800015 	stw	r2,0(r3)
            }
        }
        printf("Testing Short: the total numbers of error is : %i\n" ,short_err_num);

    //----------------TEST INT    -----------------------------------
        for (i=0; i<MAXNUM_WORDS/2; i++) {
     498:	e0bff817 	ldw	r2,-32(fp)
     49c:	10800044 	addi	r2,r2,1
     4a0:	e0bff815 	stw	r2,-32(fp)
     4a4:	e0fff817 	ldw	r3,-32(fp)
     4a8:	008000b4 	movhi	r2,2
     4ac:	18bff216 	blt	r3,r2,478 <__alt_data_end+0xfffe0478>
            *(int*)(BASE+i*4)=i; // int, use 4 bytes
        }
        for (i=0; i<MAXNUM_WORDS/2; i++) {
     4b0:	e03ff815 	stw	zero,-32(fp)
     4b4:	00000e06 	br	4f0 <main+0x260>
            if (* (int*)(BASE+i*4)!=i){
     4b8:	e0fff817 	ldw	r3,-32(fp)
     4bc:	00804034 	movhi	r2,256
     4c0:	1885883a 	add	r2,r3,r2
     4c4:	1085883a 	add	r2,r2,r2
     4c8:	1085883a 	add	r2,r2,r2
     4cc:	10c00017 	ldw	r3,0(r2)
     4d0:	e0bff817 	ldw	r2,-32(fp)
     4d4:	18800326 	beq	r3,r2,4e4 <main+0x254>
                int_err_num++;
     4d8:	e0bffb17 	ldw	r2,-20(fp)
     4dc:	10800044 	addi	r2,r2,1
     4e0:	e0bffb15 	stw	r2,-20(fp)

    //----------------TEST INT    -----------------------------------
        for (i=0; i<MAXNUM_WORDS/2; i++) {
            *(int*)(BASE+i*4)=i; // int, use 4 bytes
        }
        for (i=0; i<MAXNUM_WORDS/2; i++) {
     4e4:	e0bff817 	ldw	r2,-32(fp)
     4e8:	10800044 	addi	r2,r2,1
     4ec:	e0bff815 	stw	r2,-32(fp)
     4f0:	e0fff817 	ldw	r3,-32(fp)
     4f4:	008000b4 	movhi	r2,2
     4f8:	18bfef16 	blt	r3,r2,4b8 <__alt_data_end+0xfffe04b8>
            if (* (int*)(BASE+i*4)!=i){
                int_err_num++;
            }
        }
        printf("Testing INT  : the total numbers of error is : %i\n" ,int_err_num);
     4fc:	e17ffb17 	ldw	r5,-20(fp)
     500:	01000074 	movhi	r4,1
     504:	213d2b04 	addi	r4,r4,-2900
     508:	000070c0 	call	70c <printf>



  return 0;
     50c:	0005883a 	mov	r2,zero
}
     510:	e6ffff04 	addi	sp,fp,-4
     514:	dfc00217 	ldw	ra,8(sp)
     518:	df000117 	ldw	fp,4(sp)
     51c:	dc000017 	ldw	r16,0(sp)
     520:	dec00304 	addi	sp,sp,12
     524:	f800283a 	ret

00000528 <__divsi3>:
     528:	20001b16 	blt	r4,zero,598 <__divsi3+0x70>
     52c:	000f883a 	mov	r7,zero
     530:	28001616 	blt	r5,zero,58c <__divsi3+0x64>
     534:	200d883a 	mov	r6,r4
     538:	29001a2e 	bgeu	r5,r4,5a4 <__divsi3+0x7c>
     53c:	00800804 	movi	r2,32
     540:	00c00044 	movi	r3,1
     544:	00000106 	br	54c <__divsi3+0x24>
     548:	10000d26 	beq	r2,zero,580 <__divsi3+0x58>
     54c:	294b883a 	add	r5,r5,r5
     550:	10bfffc4 	addi	r2,r2,-1
     554:	18c7883a 	add	r3,r3,r3
     558:	293ffb36 	bltu	r5,r4,548 <__alt_data_end+0xfffe0548>
     55c:	0005883a 	mov	r2,zero
     560:	18000726 	beq	r3,zero,580 <__divsi3+0x58>
     564:	0005883a 	mov	r2,zero
     568:	31400236 	bltu	r6,r5,574 <__divsi3+0x4c>
     56c:	314dc83a 	sub	r6,r6,r5
     570:	10c4b03a 	or	r2,r2,r3
     574:	1806d07a 	srli	r3,r3,1
     578:	280ad07a 	srli	r5,r5,1
     57c:	183ffa1e 	bne	r3,zero,568 <__alt_data_end+0xfffe0568>
     580:	38000126 	beq	r7,zero,588 <__divsi3+0x60>
     584:	0085c83a 	sub	r2,zero,r2
     588:	f800283a 	ret
     58c:	014bc83a 	sub	r5,zero,r5
     590:	39c0005c 	xori	r7,r7,1
     594:	003fe706 	br	534 <__alt_data_end+0xfffe0534>
     598:	0109c83a 	sub	r4,zero,r4
     59c:	01c00044 	movi	r7,1
     5a0:	003fe306 	br	530 <__alt_data_end+0xfffe0530>
     5a4:	00c00044 	movi	r3,1
     5a8:	003fee06 	br	564 <__alt_data_end+0xfffe0564>

000005ac <__modsi3>:
     5ac:	20001716 	blt	r4,zero,60c <__modsi3+0x60>
     5b0:	000f883a 	mov	r7,zero
     5b4:	2005883a 	mov	r2,r4
     5b8:	28001216 	blt	r5,zero,604 <__modsi3+0x58>
     5bc:	2900162e 	bgeu	r5,r4,618 <__modsi3+0x6c>
     5c0:	01800804 	movi	r6,32
     5c4:	00c00044 	movi	r3,1
     5c8:	00000106 	br	5d0 <__modsi3+0x24>
     5cc:	30000a26 	beq	r6,zero,5f8 <__modsi3+0x4c>
     5d0:	294b883a 	add	r5,r5,r5
     5d4:	31bfffc4 	addi	r6,r6,-1
     5d8:	18c7883a 	add	r3,r3,r3
     5dc:	293ffb36 	bltu	r5,r4,5cc <__alt_data_end+0xfffe05cc>
     5e0:	18000526 	beq	r3,zero,5f8 <__modsi3+0x4c>
     5e4:	1806d07a 	srli	r3,r3,1
     5e8:	11400136 	bltu	r2,r5,5f0 <__modsi3+0x44>
     5ec:	1145c83a 	sub	r2,r2,r5
     5f0:	280ad07a 	srli	r5,r5,1
     5f4:	183ffb1e 	bne	r3,zero,5e4 <__alt_data_end+0xfffe05e4>
     5f8:	38000126 	beq	r7,zero,600 <__modsi3+0x54>
     5fc:	0085c83a 	sub	r2,zero,r2
     600:	f800283a 	ret
     604:	014bc83a 	sub	r5,zero,r5
     608:	003fec06 	br	5bc <__alt_data_end+0xfffe05bc>
     60c:	0109c83a 	sub	r4,zero,r4
     610:	01c00044 	movi	r7,1
     614:	003fe706 	br	5b4 <__alt_data_end+0xfffe05b4>
     618:	00c00044 	movi	r3,1
     61c:	003ff106 	br	5e4 <__alt_data_end+0xfffe05e4>

00000620 <__udivsi3>:
     620:	200d883a 	mov	r6,r4
     624:	2900152e 	bgeu	r5,r4,67c <__udivsi3+0x5c>
     628:	28001416 	blt	r5,zero,67c <__udivsi3+0x5c>
     62c:	00800804 	movi	r2,32
     630:	00c00044 	movi	r3,1
     634:	00000206 	br	640 <__udivsi3+0x20>
     638:	10000e26 	beq	r2,zero,674 <__udivsi3+0x54>
     63c:	28000516 	blt	r5,zero,654 <__udivsi3+0x34>
     640:	294b883a 	add	r5,r5,r5
     644:	10bfffc4 	addi	r2,r2,-1
     648:	18c7883a 	add	r3,r3,r3
     64c:	293ffa36 	bltu	r5,r4,638 <__alt_data_end+0xfffe0638>
     650:	18000826 	beq	r3,zero,674 <__udivsi3+0x54>
     654:	0005883a 	mov	r2,zero
     658:	31400236 	bltu	r6,r5,664 <__udivsi3+0x44>
     65c:	314dc83a 	sub	r6,r6,r5
     660:	10c4b03a 	or	r2,r2,r3
     664:	1806d07a 	srli	r3,r3,1
     668:	280ad07a 	srli	r5,r5,1
     66c:	183ffa1e 	bne	r3,zero,658 <__alt_data_end+0xfffe0658>
     670:	f800283a 	ret
     674:	0005883a 	mov	r2,zero
     678:	f800283a 	ret
     67c:	00c00044 	movi	r3,1
     680:	003ff406 	br	654 <__alt_data_end+0xfffe0654>

00000684 <__umodsi3>:
     684:	2005883a 	mov	r2,r4
     688:	2900122e 	bgeu	r5,r4,6d4 <__umodsi3+0x50>
     68c:	28001116 	blt	r5,zero,6d4 <__umodsi3+0x50>
     690:	01800804 	movi	r6,32
     694:	00c00044 	movi	r3,1
     698:	00000206 	br	6a4 <__umodsi3+0x20>
     69c:	30000c26 	beq	r6,zero,6d0 <__umodsi3+0x4c>
     6a0:	28000516 	blt	r5,zero,6b8 <__umodsi3+0x34>
     6a4:	294b883a 	add	r5,r5,r5
     6a8:	31bfffc4 	addi	r6,r6,-1
     6ac:	18c7883a 	add	r3,r3,r3
     6b0:	293ffa36 	bltu	r5,r4,69c <__alt_data_end+0xfffe069c>
     6b4:	18000626 	beq	r3,zero,6d0 <__umodsi3+0x4c>
     6b8:	1806d07a 	srli	r3,r3,1
     6bc:	11400136 	bltu	r2,r5,6c4 <__umodsi3+0x40>
     6c0:	1145c83a 	sub	r2,r2,r5
     6c4:	280ad07a 	srli	r5,r5,1
     6c8:	183ffb1e 	bne	r3,zero,6b8 <__alt_data_end+0xfffe06b8>
     6cc:	f800283a 	ret
     6d0:	f800283a 	ret
     6d4:	00c00044 	movi	r3,1
     6d8:	003ff706 	br	6b8 <__alt_data_end+0xfffe06b8>

000006dc <_printf_r>:
     6dc:	defffd04 	addi	sp,sp,-12
     6e0:	2805883a 	mov	r2,r5
     6e4:	dfc00015 	stw	ra,0(sp)
     6e8:	d9800115 	stw	r6,4(sp)
     6ec:	d9c00215 	stw	r7,8(sp)
     6f0:	21400217 	ldw	r5,8(r4)
     6f4:	d9c00104 	addi	r7,sp,4
     6f8:	100d883a 	mov	r6,r2
     6fc:	00007480 	call	748 <___vfprintf_internal_r>
     700:	dfc00017 	ldw	ra,0(sp)
     704:	dec00304 	addi	sp,sp,12
     708:	f800283a 	ret

0000070c <printf>:
     70c:	defffc04 	addi	sp,sp,-16
     710:	dfc00015 	stw	ra,0(sp)
     714:	d9400115 	stw	r5,4(sp)
     718:	d9800215 	stw	r6,8(sp)
     71c:	d9c00315 	stw	r7,12(sp)
     720:	00800074 	movhi	r2,1
     724:	1084a304 	addi	r2,r2,4748
     728:	10800017 	ldw	r2,0(r2)
     72c:	200b883a 	mov	r5,r4
     730:	d9800104 	addi	r6,sp,4
     734:	11000217 	ldw	r4,8(r2)
     738:	00029400 	call	2940 <__vfprintf_internal>
     73c:	dfc00017 	ldw	ra,0(sp)
     740:	dec00404 	addi	sp,sp,16
     744:	f800283a 	ret

00000748 <___vfprintf_internal_r>:
     748:	deffb804 	addi	sp,sp,-288
     74c:	dfc04715 	stw	ra,284(sp)
     750:	ddc04515 	stw	r23,276(sp)
     754:	dd404315 	stw	r21,268(sp)
     758:	d9002c15 	stw	r4,176(sp)
     75c:	282f883a 	mov	r23,r5
     760:	302b883a 	mov	r21,r6
     764:	d9c02d15 	stw	r7,180(sp)
     768:	df004615 	stw	fp,280(sp)
     76c:	dd804415 	stw	r22,272(sp)
     770:	dd004215 	stw	r20,264(sp)
     774:	dcc04115 	stw	r19,260(sp)
     778:	dc804015 	stw	r18,256(sp)
     77c:	dc403f15 	stw	r17,252(sp)
     780:	dc003e15 	stw	r16,248(sp)
     784:	00050a40 	call	50a4 <_localeconv_r>
     788:	10800017 	ldw	r2,0(r2)
     78c:	1009883a 	mov	r4,r2
     790:	d8803415 	stw	r2,208(sp)
     794:	00070cc0 	call	70cc <strlen>
     798:	d8803715 	stw	r2,220(sp)
     79c:	d8802c17 	ldw	r2,176(sp)
     7a0:	10000226 	beq	r2,zero,7ac <___vfprintf_internal_r+0x64>
     7a4:	10800e17 	ldw	r2,56(r2)
     7a8:	1000f926 	beq	r2,zero,b90 <___vfprintf_internal_r+0x448>
     7ac:	b880030b 	ldhu	r2,12(r23)
     7b0:	10c8000c 	andi	r3,r2,8192
     7b4:	1800061e 	bne	r3,zero,7d0 <___vfprintf_internal_r+0x88>
     7b8:	b9001917 	ldw	r4,100(r23)
     7bc:	00f7ffc4 	movi	r3,-8193
     7c0:	10880014 	ori	r2,r2,8192
     7c4:	20c6703a 	and	r3,r4,r3
     7c8:	b880030d 	sth	r2,12(r23)
     7cc:	b8c01915 	stw	r3,100(r23)
     7d0:	10c0020c 	andi	r3,r2,8
     7d4:	1800c126 	beq	r3,zero,adc <___vfprintf_internal_r+0x394>
     7d8:	b8c00417 	ldw	r3,16(r23)
     7dc:	1800bf26 	beq	r3,zero,adc <___vfprintf_internal_r+0x394>
     7e0:	1080068c 	andi	r2,r2,26
     7e4:	00c00284 	movi	r3,10
     7e8:	10c0c426 	beq	r2,r3,afc <___vfprintf_internal_r+0x3b4>
     7ec:	d8c00404 	addi	r3,sp,16
     7f0:	05000074 	movhi	r20,1
     7f4:	d9001e04 	addi	r4,sp,120
     7f8:	a53d4884 	addi	r20,r20,-2782
     7fc:	d8c01e15 	stw	r3,120(sp)
     800:	d8002015 	stw	zero,128(sp)
     804:	d8001f15 	stw	zero,124(sp)
     808:	d8003315 	stw	zero,204(sp)
     80c:	d8003615 	stw	zero,216(sp)
     810:	d8003815 	stw	zero,224(sp)
     814:	1811883a 	mov	r8,r3
     818:	d8003915 	stw	zero,228(sp)
     81c:	d8003a15 	stw	zero,232(sp)
     820:	d8002f15 	stw	zero,188(sp)
     824:	d9002815 	stw	r4,160(sp)
     828:	a8800007 	ldb	r2,0(r21)
     82c:	10027b26 	beq	r2,zero,121c <___vfprintf_internal_r+0xad4>
     830:	00c00944 	movi	r3,37
     834:	a821883a 	mov	r16,r21
     838:	10c0021e 	bne	r2,r3,844 <___vfprintf_internal_r+0xfc>
     83c:	00001406 	br	890 <___vfprintf_internal_r+0x148>
     840:	10c00326 	beq	r2,r3,850 <___vfprintf_internal_r+0x108>
     844:	84000044 	addi	r16,r16,1
     848:	80800007 	ldb	r2,0(r16)
     84c:	103ffc1e 	bne	r2,zero,840 <__alt_data_end+0xfffe0840>
     850:	8563c83a 	sub	r17,r16,r21
     854:	88000e26 	beq	r17,zero,890 <___vfprintf_internal_r+0x148>
     858:	d8c02017 	ldw	r3,128(sp)
     85c:	d8801f17 	ldw	r2,124(sp)
     860:	45400015 	stw	r21,0(r8)
     864:	1c47883a 	add	r3,r3,r17
     868:	10800044 	addi	r2,r2,1
     86c:	d8c02015 	stw	r3,128(sp)
     870:	44400115 	stw	r17,4(r8)
     874:	d8801f15 	stw	r2,124(sp)
     878:	00c001c4 	movi	r3,7
     87c:	1880a716 	blt	r3,r2,b1c <___vfprintf_internal_r+0x3d4>
     880:	42000204 	addi	r8,r8,8
     884:	d9402f17 	ldw	r5,188(sp)
     888:	2c4b883a 	add	r5,r5,r17
     88c:	d9402f15 	stw	r5,188(sp)
     890:	80800007 	ldb	r2,0(r16)
     894:	1000a826 	beq	r2,zero,b38 <___vfprintf_internal_r+0x3f0>
     898:	84400047 	ldb	r17,1(r16)
     89c:	00bfffc4 	movi	r2,-1
     8a0:	85400044 	addi	r21,r16,1
     8a4:	d8002785 	stb	zero,158(sp)
     8a8:	0007883a 	mov	r3,zero
     8ac:	000f883a 	mov	r7,zero
     8b0:	d8802915 	stw	r2,164(sp)
     8b4:	d8003115 	stw	zero,196(sp)
     8b8:	0025883a 	mov	r18,zero
     8bc:	01401604 	movi	r5,88
     8c0:	01800244 	movi	r6,9
     8c4:	02800a84 	movi	r10,42
     8c8:	02401b04 	movi	r9,108
     8cc:	ad400044 	addi	r21,r21,1
     8d0:	88bff804 	addi	r2,r17,-32
     8d4:	28830436 	bltu	r5,r2,14e8 <___vfprintf_internal_r+0xda0>
     8d8:	100490ba 	slli	r2,r2,2
     8dc:	01000034 	movhi	r4,0
     8e0:	21023c04 	addi	r4,r4,2288
     8e4:	1105883a 	add	r2,r2,r4
     8e8:	10800017 	ldw	r2,0(r2)
     8ec:	1000683a 	jmp	r2
     8f0:	00001408 	cmpgei	zero,zero,80
     8f4:	000014e8 	cmpgeui	zero,zero,83
     8f8:	000014e8 	cmpgeui	zero,zero,83
     8fc:	00001428 	cmpgeui	zero,zero,80
     900:	000014e8 	cmpgeui	zero,zero,83
     904:	000014e8 	cmpgeui	zero,zero,83
     908:	000014e8 	cmpgeui	zero,zero,83
     90c:	000014e8 	cmpgeui	zero,zero,83
     910:	000014e8 	cmpgeui	zero,zero,83
     914:	000014e8 	cmpgeui	zero,zero,83
     918:	00000b9c 	xori	zero,zero,46
     91c:	00001344 	movi	zero,77
     920:	000014e8 	cmpgeui	zero,zero,83
     924:	00000a64 	muli	zero,zero,41
     928:	00000bc4 	movi	zero,47
     92c:	000014e8 	cmpgeui	zero,zero,83
     930:	00000c04 	movi	zero,48
     934:	00000c10 	cmplti	zero,zero,48
     938:	00000c10 	cmplti	zero,zero,48
     93c:	00000c10 	cmplti	zero,zero,48
     940:	00000c10 	cmplti	zero,zero,48
     944:	00000c10 	cmplti	zero,zero,48
     948:	00000c10 	cmplti	zero,zero,48
     94c:	00000c10 	cmplti	zero,zero,48
     950:	00000c10 	cmplti	zero,zero,48
     954:	00000c10 	cmplti	zero,zero,48
     958:	000014e8 	cmpgeui	zero,zero,83
     95c:	000014e8 	cmpgeui	zero,zero,83
     960:	000014e8 	cmpgeui	zero,zero,83
     964:	000014e8 	cmpgeui	zero,zero,83
     968:	000014e8 	cmpgeui	zero,zero,83
     96c:	000014e8 	cmpgeui	zero,zero,83
     970:	000014e8 	cmpgeui	zero,zero,83
     974:	000014e8 	cmpgeui	zero,zero,83
     978:	000014e8 	cmpgeui	zero,zero,83
     97c:	000014e8 	cmpgeui	zero,zero,83
     980:	00000c44 	movi	zero,49
     984:	00000d00 	call	d0 <__flash_exceptions_start+0xb0>
     988:	000014e8 	cmpgeui	zero,zero,83
     98c:	00000d00 	call	d0 <__flash_exceptions_start+0xb0>
     990:	000014e8 	cmpgeui	zero,zero,83
     994:	000014e8 	cmpgeui	zero,zero,83
     998:	000014e8 	cmpgeui	zero,zero,83
     99c:	000014e8 	cmpgeui	zero,zero,83
     9a0:	00000da0 	cmpeqi	zero,zero,54
     9a4:	000014e8 	cmpgeui	zero,zero,83
     9a8:	000014e8 	cmpgeui	zero,zero,83
     9ac:	00000dac 	andhi	zero,zero,54
     9b0:	000014e8 	cmpgeui	zero,zero,83
     9b4:	000014e8 	cmpgeui	zero,zero,83
     9b8:	000014e8 	cmpgeui	zero,zero,83
     9bc:	000014e8 	cmpgeui	zero,zero,83
     9c0:	000014e8 	cmpgeui	zero,zero,83
     9c4:	00001224 	muli	zero,zero,72
     9c8:	000014e8 	cmpgeui	zero,zero,83
     9cc:	000014e8 	cmpgeui	zero,zero,83
     9d0:	00001284 	movi	zero,74
     9d4:	000014e8 	cmpgeui	zero,zero,83
     9d8:	000014e8 	cmpgeui	zero,zero,83
     9dc:	000014e8 	cmpgeui	zero,zero,83
     9e0:	000014e8 	cmpgeui	zero,zero,83
     9e4:	000014e8 	cmpgeui	zero,zero,83
     9e8:	000014e8 	cmpgeui	zero,zero,83
     9ec:	000014e8 	cmpgeui	zero,zero,83
     9f0:	000014e8 	cmpgeui	zero,zero,83
     9f4:	000014e8 	cmpgeui	zero,zero,83
     9f8:	000014e8 	cmpgeui	zero,zero,83
     9fc:	00001494 	movui	zero,82
     a00:	00001434 	movhi	zero,80
     a04:	00000d00 	call	d0 <__flash_exceptions_start+0xb0>
     a08:	00000d00 	call	d0 <__flash_exceptions_start+0xb0>
     a0c:	00000d00 	call	d0 <__flash_exceptions_start+0xb0>
     a10:	00001444 	movi	zero,81
     a14:	00001434 	movhi	zero,80
     a18:	000014e8 	cmpgeui	zero,zero,83
     a1c:	000014e8 	cmpgeui	zero,zero,83
     a20:	00001450 	cmplti	zero,zero,81
     a24:	000014e8 	cmpgeui	zero,zero,83
     a28:	00001460 	cmpeqi	zero,zero,81
     a2c:	00001334 	movhi	zero,76
     a30:	00000a70 	cmpltui	zero,zero,41
     a34:	00001354 	movui	zero,77
     a38:	000014e8 	cmpgeui	zero,zero,83
     a3c:	00001360 	cmpeqi	zero,zero,77
     a40:	000014e8 	cmpgeui	zero,zero,83
     a44:	000013bc 	xorhi	zero,zero,78
     a48:	000014e8 	cmpgeui	zero,zero,83
     a4c:	000014e8 	cmpgeui	zero,zero,83
     a50:	000013cc 	andi	zero,zero,79
     a54:	d9003117 	ldw	r4,196(sp)
     a58:	d8802d15 	stw	r2,180(sp)
     a5c:	0109c83a 	sub	r4,zero,r4
     a60:	d9003115 	stw	r4,196(sp)
     a64:	94800114 	ori	r18,r18,4
     a68:	ac400007 	ldb	r17,0(r21)
     a6c:	003f9706 	br	8cc <__alt_data_end+0xfffe08cc>
     a70:	00800c04 	movi	r2,48
     a74:	d9002d17 	ldw	r4,180(sp)
     a78:	d9402917 	ldw	r5,164(sp)
     a7c:	d8802705 	stb	r2,156(sp)
     a80:	00801e04 	movi	r2,120
     a84:	d8802745 	stb	r2,157(sp)
     a88:	d8002785 	stb	zero,158(sp)
     a8c:	20c00104 	addi	r3,r4,4
     a90:	24c00017 	ldw	r19,0(r4)
     a94:	002d883a 	mov	r22,zero
     a98:	90800094 	ori	r2,r18,2
     a9c:	28029a16 	blt	r5,zero,1508 <___vfprintf_internal_r+0xdc0>
     aa0:	00bfdfc4 	movi	r2,-129
     aa4:	90a4703a 	and	r18,r18,r2
     aa8:	d8c02d15 	stw	r3,180(sp)
     aac:	94800094 	ori	r18,r18,2
     ab0:	9802871e 	bne	r19,zero,14d0 <___vfprintf_internal_r+0xd88>
     ab4:	00800074 	movhi	r2,1
     ab8:	10bd4104 	addi	r2,r2,-2812
     abc:	d8803915 	stw	r2,228(sp)
     ac0:	04401e04 	movi	r17,120
     ac4:	d8802917 	ldw	r2,164(sp)
     ac8:	0039883a 	mov	fp,zero
     acc:	1001e926 	beq	r2,zero,1274 <___vfprintf_internal_r+0xb2c>
     ad0:	0027883a 	mov	r19,zero
     ad4:	002d883a 	mov	r22,zero
     ad8:	00020506 	br	12f0 <___vfprintf_internal_r+0xba8>
     adc:	d9002c17 	ldw	r4,176(sp)
     ae0:	b80b883a 	mov	r5,r23
     ae4:	0002a180 	call	2a18 <__swsetup_r>
     ae8:	1005ac1e 	bne	r2,zero,219c <___vfprintf_internal_r+0x1a54>
     aec:	b880030b 	ldhu	r2,12(r23)
     af0:	00c00284 	movi	r3,10
     af4:	1080068c 	andi	r2,r2,26
     af8:	10ff3c1e 	bne	r2,r3,7ec <__alt_data_end+0xfffe07ec>
     afc:	b880038f 	ldh	r2,14(r23)
     b00:	103f3a16 	blt	r2,zero,7ec <__alt_data_end+0xfffe07ec>
     b04:	d9c02d17 	ldw	r7,180(sp)
     b08:	d9002c17 	ldw	r4,176(sp)
     b0c:	a80d883a 	mov	r6,r21
     b10:	b80b883a 	mov	r5,r23
     b14:	000295c0 	call	295c <__sbprintf>
     b18:	00001106 	br	b60 <___vfprintf_internal_r+0x418>
     b1c:	d9002c17 	ldw	r4,176(sp)
     b20:	d9801e04 	addi	r6,sp,120
     b24:	b80b883a 	mov	r5,r23
     b28:	00072600 	call	7260 <__sprint_r>
     b2c:	1000081e 	bne	r2,zero,b50 <___vfprintf_internal_r+0x408>
     b30:	da000404 	addi	r8,sp,16
     b34:	003f5306 	br	884 <__alt_data_end+0xfffe0884>
     b38:	d8802017 	ldw	r2,128(sp)
     b3c:	10000426 	beq	r2,zero,b50 <___vfprintf_internal_r+0x408>
     b40:	d9002c17 	ldw	r4,176(sp)
     b44:	d9801e04 	addi	r6,sp,120
     b48:	b80b883a 	mov	r5,r23
     b4c:	00072600 	call	7260 <__sprint_r>
     b50:	b880030b 	ldhu	r2,12(r23)
     b54:	1080100c 	andi	r2,r2,64
     b58:	1005901e 	bne	r2,zero,219c <___vfprintf_internal_r+0x1a54>
     b5c:	d8802f17 	ldw	r2,188(sp)
     b60:	dfc04717 	ldw	ra,284(sp)
     b64:	df004617 	ldw	fp,280(sp)
     b68:	ddc04517 	ldw	r23,276(sp)
     b6c:	dd804417 	ldw	r22,272(sp)
     b70:	dd404317 	ldw	r21,268(sp)
     b74:	dd004217 	ldw	r20,264(sp)
     b78:	dcc04117 	ldw	r19,260(sp)
     b7c:	dc804017 	ldw	r18,256(sp)
     b80:	dc403f17 	ldw	r17,252(sp)
     b84:	dc003e17 	ldw	r16,248(sp)
     b88:	dec04804 	addi	sp,sp,288
     b8c:	f800283a 	ret
     b90:	d9002c17 	ldw	r4,176(sp)
     b94:	00049ec0 	call	49ec <__sinit>
     b98:	003f0406 	br	7ac <__alt_data_end+0xfffe07ac>
     b9c:	d8802d17 	ldw	r2,180(sp)
     ba0:	d9002d17 	ldw	r4,180(sp)
     ba4:	10800017 	ldw	r2,0(r2)
     ba8:	d8803115 	stw	r2,196(sp)
     bac:	20800104 	addi	r2,r4,4
     bb0:	d9003117 	ldw	r4,196(sp)
     bb4:	203fa716 	blt	r4,zero,a54 <__alt_data_end+0xfffe0a54>
     bb8:	d8802d15 	stw	r2,180(sp)
     bbc:	ac400007 	ldb	r17,0(r21)
     bc0:	003f4206 	br	8cc <__alt_data_end+0xfffe08cc>
     bc4:	ac400007 	ldb	r17,0(r21)
     bc8:	aac00044 	addi	r11,r21,1
     bcc:	8a872826 	beq	r17,r10,2870 <___vfprintf_internal_r+0x2128>
     bd0:	88bff404 	addi	r2,r17,-48
     bd4:	0009883a 	mov	r4,zero
     bd8:	30867d36 	bltu	r6,r2,25d0 <___vfprintf_internal_r+0x1e88>
     bdc:	5c400007 	ldb	r17,0(r11)
     be0:	210002a4 	muli	r4,r4,10
     be4:	5d400044 	addi	r21,r11,1
     be8:	a817883a 	mov	r11,r21
     bec:	2089883a 	add	r4,r4,r2
     bf0:	88bff404 	addi	r2,r17,-48
     bf4:	30bff92e 	bgeu	r6,r2,bdc <__alt_data_end+0xfffe0bdc>
     bf8:	2005c916 	blt	r4,zero,2320 <___vfprintf_internal_r+0x1bd8>
     bfc:	d9002915 	stw	r4,164(sp)
     c00:	003f3306 	br	8d0 <__alt_data_end+0xfffe08d0>
     c04:	94802014 	ori	r18,r18,128
     c08:	ac400007 	ldb	r17,0(r21)
     c0c:	003f2f06 	br	8cc <__alt_data_end+0xfffe08cc>
     c10:	a809883a 	mov	r4,r21
     c14:	d8003115 	stw	zero,196(sp)
     c18:	88bff404 	addi	r2,r17,-48
     c1c:	0017883a 	mov	r11,zero
     c20:	24400007 	ldb	r17,0(r4)
     c24:	5ac002a4 	muli	r11,r11,10
     c28:	ad400044 	addi	r21,r21,1
     c2c:	a809883a 	mov	r4,r21
     c30:	12d7883a 	add	r11,r2,r11
     c34:	88bff404 	addi	r2,r17,-48
     c38:	30bff92e 	bgeu	r6,r2,c20 <__alt_data_end+0xfffe0c20>
     c3c:	dac03115 	stw	r11,196(sp)
     c40:	003f2306 	br	8d0 <__alt_data_end+0xfffe08d0>
     c44:	18c03fcc 	andi	r3,r3,255
     c48:	18072b1e 	bne	r3,zero,28f8 <___vfprintf_internal_r+0x21b0>
     c4c:	94800414 	ori	r18,r18,16
     c50:	9080080c 	andi	r2,r18,32
     c54:	10037b26 	beq	r2,zero,1a44 <___vfprintf_internal_r+0x12fc>
     c58:	d9402d17 	ldw	r5,180(sp)
     c5c:	28800117 	ldw	r2,4(r5)
     c60:	2cc00017 	ldw	r19,0(r5)
     c64:	29400204 	addi	r5,r5,8
     c68:	d9402d15 	stw	r5,180(sp)
     c6c:	102d883a 	mov	r22,r2
     c70:	10044b16 	blt	r2,zero,1da0 <___vfprintf_internal_r+0x1658>
     c74:	d9402917 	ldw	r5,164(sp)
     c78:	df002783 	ldbu	fp,158(sp)
     c7c:	2803bc16 	blt	r5,zero,1b70 <___vfprintf_internal_r+0x1428>
     c80:	00ffdfc4 	movi	r3,-129
     c84:	9d84b03a 	or	r2,r19,r22
     c88:	90e4703a 	and	r18,r18,r3
     c8c:	10017726 	beq	r2,zero,126c <___vfprintf_internal_r+0xb24>
     c90:	b0038326 	beq	r22,zero,1aa0 <___vfprintf_internal_r+0x1358>
     c94:	dc402a15 	stw	r17,168(sp)
     c98:	dc001e04 	addi	r16,sp,120
     c9c:	b023883a 	mov	r17,r22
     ca0:	402d883a 	mov	r22,r8
     ca4:	9809883a 	mov	r4,r19
     ca8:	880b883a 	mov	r5,r17
     cac:	01800284 	movi	r6,10
     cb0:	000f883a 	mov	r7,zero
     cb4:	000a1d40 	call	a1d4 <__umoddi3>
     cb8:	10800c04 	addi	r2,r2,48
     cbc:	843fffc4 	addi	r16,r16,-1
     cc0:	9809883a 	mov	r4,r19
     cc4:	880b883a 	mov	r5,r17
     cc8:	80800005 	stb	r2,0(r16)
     ccc:	01800284 	movi	r6,10
     cd0:	000f883a 	mov	r7,zero
     cd4:	0009c5c0 	call	9c5c <__udivdi3>
     cd8:	1027883a 	mov	r19,r2
     cdc:	10c4b03a 	or	r2,r2,r3
     ce0:	1823883a 	mov	r17,r3
     ce4:	103fef1e 	bne	r2,zero,ca4 <__alt_data_end+0xfffe0ca4>
     ce8:	d8c02817 	ldw	r3,160(sp)
     cec:	dc402a17 	ldw	r17,168(sp)
     cf0:	b011883a 	mov	r8,r22
     cf4:	1c07c83a 	sub	r3,r3,r16
     cf8:	d8c02e15 	stw	r3,184(sp)
     cfc:	00005906 	br	e64 <___vfprintf_internal_r+0x71c>
     d00:	18c03fcc 	andi	r3,r3,255
     d04:	1806fa1e 	bne	r3,zero,28f0 <___vfprintf_internal_r+0x21a8>
     d08:	9080020c 	andi	r2,r18,8
     d0c:	10048a26 	beq	r2,zero,1f38 <___vfprintf_internal_r+0x17f0>
     d10:	d8c02d17 	ldw	r3,180(sp)
     d14:	d9002d17 	ldw	r4,180(sp)
     d18:	d9402d17 	ldw	r5,180(sp)
     d1c:	18c00017 	ldw	r3,0(r3)
     d20:	21000117 	ldw	r4,4(r4)
     d24:	29400204 	addi	r5,r5,8
     d28:	d8c03615 	stw	r3,216(sp)
     d2c:	d9003815 	stw	r4,224(sp)
     d30:	d9402d15 	stw	r5,180(sp)
     d34:	d9003617 	ldw	r4,216(sp)
     d38:	d9403817 	ldw	r5,224(sp)
     d3c:	da003d15 	stw	r8,244(sp)
     d40:	04000044 	movi	r16,1
     d44:	0006dec0 	call	6dec <__fpclassifyd>
     d48:	da003d17 	ldw	r8,244(sp)
     d4c:	14041f1e 	bne	r2,r16,1dcc <___vfprintf_internal_r+0x1684>
     d50:	d9003617 	ldw	r4,216(sp)
     d54:	d9403817 	ldw	r5,224(sp)
     d58:	000d883a 	mov	r6,zero
     d5c:	000f883a 	mov	r7,zero
     d60:	000ba040 	call	ba04 <__ledf2>
     d64:	da003d17 	ldw	r8,244(sp)
     d68:	1005be16 	blt	r2,zero,2464 <___vfprintf_internal_r+0x1d1c>
     d6c:	df002783 	ldbu	fp,158(sp)
     d70:	008011c4 	movi	r2,71
     d74:	1445330e 	bge	r2,r17,2244 <___vfprintf_internal_r+0x1afc>
     d78:	04000074 	movhi	r16,1
     d7c:	843d3904 	addi	r16,r16,-2844
     d80:	00c000c4 	movi	r3,3
     d84:	00bfdfc4 	movi	r2,-129
     d88:	d8c02a15 	stw	r3,168(sp)
     d8c:	90a4703a 	and	r18,r18,r2
     d90:	d8c02e15 	stw	r3,184(sp)
     d94:	d8002915 	stw	zero,164(sp)
     d98:	d8003215 	stw	zero,200(sp)
     d9c:	00003706 	br	e7c <___vfprintf_internal_r+0x734>
     da0:	94800214 	ori	r18,r18,8
     da4:	ac400007 	ldb	r17,0(r21)
     da8:	003ec806 	br	8cc <__alt_data_end+0xfffe08cc>
     dac:	18c03fcc 	andi	r3,r3,255
     db0:	1806db1e 	bne	r3,zero,2920 <___vfprintf_internal_r+0x21d8>
     db4:	94800414 	ori	r18,r18,16
     db8:	9080080c 	andi	r2,r18,32
     dbc:	1002d826 	beq	r2,zero,1920 <___vfprintf_internal_r+0x11d8>
     dc0:	d9402d17 	ldw	r5,180(sp)
     dc4:	d8c02917 	ldw	r3,164(sp)
     dc8:	d8002785 	stb	zero,158(sp)
     dcc:	28800204 	addi	r2,r5,8
     dd0:	2cc00017 	ldw	r19,0(r5)
     dd4:	2d800117 	ldw	r22,4(r5)
     dd8:	18048f16 	blt	r3,zero,2018 <___vfprintf_internal_r+0x18d0>
     ddc:	013fdfc4 	movi	r4,-129
     de0:	9d86b03a 	or	r3,r19,r22
     de4:	d8802d15 	stw	r2,180(sp)
     de8:	9124703a 	and	r18,r18,r4
     dec:	1802d91e 	bne	r3,zero,1954 <___vfprintf_internal_r+0x120c>
     df0:	d8c02917 	ldw	r3,164(sp)
     df4:	0039883a 	mov	fp,zero
     df8:	1805c326 	beq	r3,zero,2508 <___vfprintf_internal_r+0x1dc0>
     dfc:	0027883a 	mov	r19,zero
     e00:	002d883a 	mov	r22,zero
     e04:	dc001e04 	addi	r16,sp,120
     e08:	9806d0fa 	srli	r3,r19,3
     e0c:	b008977a 	slli	r4,r22,29
     e10:	b02cd0fa 	srli	r22,r22,3
     e14:	9cc001cc 	andi	r19,r19,7
     e18:	98800c04 	addi	r2,r19,48
     e1c:	843fffc4 	addi	r16,r16,-1
     e20:	20e6b03a 	or	r19,r4,r3
     e24:	80800005 	stb	r2,0(r16)
     e28:	9d86b03a 	or	r3,r19,r22
     e2c:	183ff61e 	bne	r3,zero,e08 <__alt_data_end+0xfffe0e08>
     e30:	90c0004c 	andi	r3,r18,1
     e34:	18013b26 	beq	r3,zero,1324 <___vfprintf_internal_r+0xbdc>
     e38:	10803fcc 	andi	r2,r2,255
     e3c:	1080201c 	xori	r2,r2,128
     e40:	10bfe004 	addi	r2,r2,-128
     e44:	00c00c04 	movi	r3,48
     e48:	10c13626 	beq	r2,r3,1324 <___vfprintf_internal_r+0xbdc>
     e4c:	80ffffc5 	stb	r3,-1(r16)
     e50:	d8c02817 	ldw	r3,160(sp)
     e54:	80bfffc4 	addi	r2,r16,-1
     e58:	1021883a 	mov	r16,r2
     e5c:	1887c83a 	sub	r3,r3,r2
     e60:	d8c02e15 	stw	r3,184(sp)
     e64:	d8802e17 	ldw	r2,184(sp)
     e68:	d9002917 	ldw	r4,164(sp)
     e6c:	1100010e 	bge	r2,r4,e74 <___vfprintf_internal_r+0x72c>
     e70:	2005883a 	mov	r2,r4
     e74:	d8802a15 	stw	r2,168(sp)
     e78:	d8003215 	stw	zero,200(sp)
     e7c:	e7003fcc 	andi	fp,fp,255
     e80:	e700201c 	xori	fp,fp,128
     e84:	e73fe004 	addi	fp,fp,-128
     e88:	e0000326 	beq	fp,zero,e98 <___vfprintf_internal_r+0x750>
     e8c:	d8c02a17 	ldw	r3,168(sp)
     e90:	18c00044 	addi	r3,r3,1
     e94:	d8c02a15 	stw	r3,168(sp)
     e98:	90c0008c 	andi	r3,r18,2
     e9c:	d8c02b15 	stw	r3,172(sp)
     ea0:	18000326 	beq	r3,zero,eb0 <___vfprintf_internal_r+0x768>
     ea4:	d8c02a17 	ldw	r3,168(sp)
     ea8:	18c00084 	addi	r3,r3,2
     eac:	d8c02a15 	stw	r3,168(sp)
     eb0:	90c0210c 	andi	r3,r18,132
     eb4:	d8c03015 	stw	r3,192(sp)
     eb8:	1801a31e 	bne	r3,zero,1548 <___vfprintf_internal_r+0xe00>
     ebc:	d9003117 	ldw	r4,196(sp)
     ec0:	d8c02a17 	ldw	r3,168(sp)
     ec4:	20e7c83a 	sub	r19,r4,r3
     ec8:	04c19f0e 	bge	zero,r19,1548 <___vfprintf_internal_r+0xe00>
     ecc:	02400404 	movi	r9,16
     ed0:	d8c02017 	ldw	r3,128(sp)
     ed4:	d8801f17 	ldw	r2,124(sp)
     ed8:	4cc50d0e 	bge	r9,r19,2310 <___vfprintf_internal_r+0x1bc8>
     edc:	01400074 	movhi	r5,1
     ee0:	297d4c84 	addi	r5,r5,-2766
     ee4:	dc403b15 	stw	r17,236(sp)
     ee8:	d9403515 	stw	r5,212(sp)
     eec:	9823883a 	mov	r17,r19
     ef0:	482d883a 	mov	r22,r9
     ef4:	9027883a 	mov	r19,r18
     ef8:	070001c4 	movi	fp,7
     efc:	8025883a 	mov	r18,r16
     f00:	dc002c17 	ldw	r16,176(sp)
     f04:	00000306 	br	f14 <___vfprintf_internal_r+0x7cc>
     f08:	8c7ffc04 	addi	r17,r17,-16
     f0c:	42000204 	addi	r8,r8,8
     f10:	b440130e 	bge	r22,r17,f60 <___vfprintf_internal_r+0x818>
     f14:	01000074 	movhi	r4,1
     f18:	18c00404 	addi	r3,r3,16
     f1c:	10800044 	addi	r2,r2,1
     f20:	213d4c84 	addi	r4,r4,-2766
     f24:	41000015 	stw	r4,0(r8)
     f28:	45800115 	stw	r22,4(r8)
     f2c:	d8c02015 	stw	r3,128(sp)
     f30:	d8801f15 	stw	r2,124(sp)
     f34:	e0bff40e 	bge	fp,r2,f08 <__alt_data_end+0xfffe0f08>
     f38:	d9801e04 	addi	r6,sp,120
     f3c:	b80b883a 	mov	r5,r23
     f40:	8009883a 	mov	r4,r16
     f44:	00072600 	call	7260 <__sprint_r>
     f48:	103f011e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
     f4c:	8c7ffc04 	addi	r17,r17,-16
     f50:	d8c02017 	ldw	r3,128(sp)
     f54:	d8801f17 	ldw	r2,124(sp)
     f58:	da000404 	addi	r8,sp,16
     f5c:	b47fed16 	blt	r22,r17,f14 <__alt_data_end+0xfffe0f14>
     f60:	9021883a 	mov	r16,r18
     f64:	9825883a 	mov	r18,r19
     f68:	8827883a 	mov	r19,r17
     f6c:	dc403b17 	ldw	r17,236(sp)
     f70:	d9403517 	ldw	r5,212(sp)
     f74:	98c7883a 	add	r3,r19,r3
     f78:	10800044 	addi	r2,r2,1
     f7c:	41400015 	stw	r5,0(r8)
     f80:	44c00115 	stw	r19,4(r8)
     f84:	d8c02015 	stw	r3,128(sp)
     f88:	d8801f15 	stw	r2,124(sp)
     f8c:	010001c4 	movi	r4,7
     f90:	2082a316 	blt	r4,r2,1a20 <___vfprintf_internal_r+0x12d8>
     f94:	df002787 	ldb	fp,158(sp)
     f98:	42000204 	addi	r8,r8,8
     f9c:	e0000c26 	beq	fp,zero,fd0 <___vfprintf_internal_r+0x888>
     fa0:	d8801f17 	ldw	r2,124(sp)
     fa4:	d9002784 	addi	r4,sp,158
     fa8:	18c00044 	addi	r3,r3,1
     fac:	10800044 	addi	r2,r2,1
     fb0:	41000015 	stw	r4,0(r8)
     fb4:	01000044 	movi	r4,1
     fb8:	41000115 	stw	r4,4(r8)
     fbc:	d8c02015 	stw	r3,128(sp)
     fc0:	d8801f15 	stw	r2,124(sp)
     fc4:	010001c4 	movi	r4,7
     fc8:	20823c16 	blt	r4,r2,18bc <___vfprintf_internal_r+0x1174>
     fcc:	42000204 	addi	r8,r8,8
     fd0:	d8802b17 	ldw	r2,172(sp)
     fd4:	10000c26 	beq	r2,zero,1008 <___vfprintf_internal_r+0x8c0>
     fd8:	d8801f17 	ldw	r2,124(sp)
     fdc:	d9002704 	addi	r4,sp,156
     fe0:	18c00084 	addi	r3,r3,2
     fe4:	10800044 	addi	r2,r2,1
     fe8:	41000015 	stw	r4,0(r8)
     fec:	01000084 	movi	r4,2
     ff0:	41000115 	stw	r4,4(r8)
     ff4:	d8c02015 	stw	r3,128(sp)
     ff8:	d8801f15 	stw	r2,124(sp)
     ffc:	010001c4 	movi	r4,7
    1000:	20823616 	blt	r4,r2,18dc <___vfprintf_internal_r+0x1194>
    1004:	42000204 	addi	r8,r8,8
    1008:	d9003017 	ldw	r4,192(sp)
    100c:	00802004 	movi	r2,128
    1010:	20819926 	beq	r4,r2,1678 <___vfprintf_internal_r+0xf30>
    1014:	d9402917 	ldw	r5,164(sp)
    1018:	d8802e17 	ldw	r2,184(sp)
    101c:	28adc83a 	sub	r22,r5,r2
    1020:	0580310e 	bge	zero,r22,10e8 <___vfprintf_internal_r+0x9a0>
    1024:	07000404 	movi	fp,16
    1028:	d8801f17 	ldw	r2,124(sp)
    102c:	e584140e 	bge	fp,r22,2080 <___vfprintf_internal_r+0x1938>
    1030:	01400074 	movhi	r5,1
    1034:	297d4884 	addi	r5,r5,-2782
    1038:	dc402915 	stw	r17,164(sp)
    103c:	d9402b15 	stw	r5,172(sp)
    1040:	b023883a 	mov	r17,r22
    1044:	04c001c4 	movi	r19,7
    1048:	a82d883a 	mov	r22,r21
    104c:	902b883a 	mov	r21,r18
    1050:	8025883a 	mov	r18,r16
    1054:	dc002c17 	ldw	r16,176(sp)
    1058:	00000306 	br	1068 <___vfprintf_internal_r+0x920>
    105c:	8c7ffc04 	addi	r17,r17,-16
    1060:	42000204 	addi	r8,r8,8
    1064:	e440110e 	bge	fp,r17,10ac <___vfprintf_internal_r+0x964>
    1068:	18c00404 	addi	r3,r3,16
    106c:	10800044 	addi	r2,r2,1
    1070:	45000015 	stw	r20,0(r8)
    1074:	47000115 	stw	fp,4(r8)
    1078:	d8c02015 	stw	r3,128(sp)
    107c:	d8801f15 	stw	r2,124(sp)
    1080:	98bff60e 	bge	r19,r2,105c <__alt_data_end+0xfffe105c>
    1084:	d9801e04 	addi	r6,sp,120
    1088:	b80b883a 	mov	r5,r23
    108c:	8009883a 	mov	r4,r16
    1090:	00072600 	call	7260 <__sprint_r>
    1094:	103eae1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1098:	8c7ffc04 	addi	r17,r17,-16
    109c:	d8c02017 	ldw	r3,128(sp)
    10a0:	d8801f17 	ldw	r2,124(sp)
    10a4:	da000404 	addi	r8,sp,16
    10a8:	e47fef16 	blt	fp,r17,1068 <__alt_data_end+0xfffe1068>
    10ac:	9021883a 	mov	r16,r18
    10b0:	a825883a 	mov	r18,r21
    10b4:	b02b883a 	mov	r21,r22
    10b8:	882d883a 	mov	r22,r17
    10bc:	dc402917 	ldw	r17,164(sp)
    10c0:	d9002b17 	ldw	r4,172(sp)
    10c4:	1d87883a 	add	r3,r3,r22
    10c8:	10800044 	addi	r2,r2,1
    10cc:	41000015 	stw	r4,0(r8)
    10d0:	45800115 	stw	r22,4(r8)
    10d4:	d8c02015 	stw	r3,128(sp)
    10d8:	d8801f15 	stw	r2,124(sp)
    10dc:	010001c4 	movi	r4,7
    10e0:	2081ee16 	blt	r4,r2,189c <___vfprintf_internal_r+0x1154>
    10e4:	42000204 	addi	r8,r8,8
    10e8:	9080400c 	andi	r2,r18,256
    10ec:	1001181e 	bne	r2,zero,1550 <___vfprintf_internal_r+0xe08>
    10f0:	d9402e17 	ldw	r5,184(sp)
    10f4:	d8801f17 	ldw	r2,124(sp)
    10f8:	44000015 	stw	r16,0(r8)
    10fc:	1947883a 	add	r3,r3,r5
    1100:	10800044 	addi	r2,r2,1
    1104:	41400115 	stw	r5,4(r8)
    1108:	d8c02015 	stw	r3,128(sp)
    110c:	d8801f15 	stw	r2,124(sp)
    1110:	010001c4 	movi	r4,7
    1114:	2081d316 	blt	r4,r2,1864 <___vfprintf_internal_r+0x111c>
    1118:	42000204 	addi	r8,r8,8
    111c:	9480010c 	andi	r18,r18,4
    1120:	90003226 	beq	r18,zero,11ec <___vfprintf_internal_r+0xaa4>
    1124:	d9403117 	ldw	r5,196(sp)
    1128:	d8802a17 	ldw	r2,168(sp)
    112c:	28a1c83a 	sub	r16,r5,r2
    1130:	04002e0e 	bge	zero,r16,11ec <___vfprintf_internal_r+0xaa4>
    1134:	04400404 	movi	r17,16
    1138:	d8801f17 	ldw	r2,124(sp)
    113c:	8c04a20e 	bge	r17,r16,23c8 <___vfprintf_internal_r+0x1c80>
    1140:	01400074 	movhi	r5,1
    1144:	297d4c84 	addi	r5,r5,-2766
    1148:	d9403515 	stw	r5,212(sp)
    114c:	048001c4 	movi	r18,7
    1150:	dcc02c17 	ldw	r19,176(sp)
    1154:	00000306 	br	1164 <___vfprintf_internal_r+0xa1c>
    1158:	843ffc04 	addi	r16,r16,-16
    115c:	42000204 	addi	r8,r8,8
    1160:	8c00130e 	bge	r17,r16,11b0 <___vfprintf_internal_r+0xa68>
    1164:	01000074 	movhi	r4,1
    1168:	18c00404 	addi	r3,r3,16
    116c:	10800044 	addi	r2,r2,1
    1170:	213d4c84 	addi	r4,r4,-2766
    1174:	41000015 	stw	r4,0(r8)
    1178:	44400115 	stw	r17,4(r8)
    117c:	d8c02015 	stw	r3,128(sp)
    1180:	d8801f15 	stw	r2,124(sp)
    1184:	90bff40e 	bge	r18,r2,1158 <__alt_data_end+0xfffe1158>
    1188:	d9801e04 	addi	r6,sp,120
    118c:	b80b883a 	mov	r5,r23
    1190:	9809883a 	mov	r4,r19
    1194:	00072600 	call	7260 <__sprint_r>
    1198:	103e6d1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    119c:	843ffc04 	addi	r16,r16,-16
    11a0:	d8c02017 	ldw	r3,128(sp)
    11a4:	d8801f17 	ldw	r2,124(sp)
    11a8:	da000404 	addi	r8,sp,16
    11ac:	8c3fed16 	blt	r17,r16,1164 <__alt_data_end+0xfffe1164>
    11b0:	d9403517 	ldw	r5,212(sp)
    11b4:	1c07883a 	add	r3,r3,r16
    11b8:	10800044 	addi	r2,r2,1
    11bc:	41400015 	stw	r5,0(r8)
    11c0:	44000115 	stw	r16,4(r8)
    11c4:	d8c02015 	stw	r3,128(sp)
    11c8:	d8801f15 	stw	r2,124(sp)
    11cc:	010001c4 	movi	r4,7
    11d0:	2080060e 	bge	r4,r2,11ec <___vfprintf_internal_r+0xaa4>
    11d4:	d9002c17 	ldw	r4,176(sp)
    11d8:	d9801e04 	addi	r6,sp,120
    11dc:	b80b883a 	mov	r5,r23
    11e0:	00072600 	call	7260 <__sprint_r>
    11e4:	103e5a1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    11e8:	d8c02017 	ldw	r3,128(sp)
    11ec:	d8803117 	ldw	r2,196(sp)
    11f0:	d9002a17 	ldw	r4,168(sp)
    11f4:	1100010e 	bge	r2,r4,11fc <___vfprintf_internal_r+0xab4>
    11f8:	2005883a 	mov	r2,r4
    11fc:	d9402f17 	ldw	r5,188(sp)
    1200:	288b883a 	add	r5,r5,r2
    1204:	d9402f15 	stw	r5,188(sp)
    1208:	18019e1e 	bne	r3,zero,1884 <___vfprintf_internal_r+0x113c>
    120c:	a8800007 	ldb	r2,0(r21)
    1210:	d8001f15 	stw	zero,124(sp)
    1214:	da000404 	addi	r8,sp,16
    1218:	103d851e 	bne	r2,zero,830 <__alt_data_end+0xfffe0830>
    121c:	a821883a 	mov	r16,r21
    1220:	003d9b06 	br	890 <__alt_data_end+0xfffe0890>
    1224:	18c03fcc 	andi	r3,r3,255
    1228:	1805c11e 	bne	r3,zero,2930 <___vfprintf_internal_r+0x21e8>
    122c:	94800414 	ori	r18,r18,16
    1230:	9080080c 	andi	r2,r18,32
    1234:	10020c26 	beq	r2,zero,1a68 <___vfprintf_internal_r+0x1320>
    1238:	d8802d17 	ldw	r2,180(sp)
    123c:	d9002917 	ldw	r4,164(sp)
    1240:	d8002785 	stb	zero,158(sp)
    1244:	10c00204 	addi	r3,r2,8
    1248:	14c00017 	ldw	r19,0(r2)
    124c:	15800117 	ldw	r22,4(r2)
    1250:	20040f16 	blt	r4,zero,2290 <___vfprintf_internal_r+0x1b48>
    1254:	013fdfc4 	movi	r4,-129
    1258:	9d84b03a 	or	r2,r19,r22
    125c:	d8c02d15 	stw	r3,180(sp)
    1260:	9124703a 	and	r18,r18,r4
    1264:	0039883a 	mov	fp,zero
    1268:	103e891e 	bne	r2,zero,c90 <__alt_data_end+0xfffe0c90>
    126c:	d9002917 	ldw	r4,164(sp)
    1270:	2002c11e 	bne	r4,zero,1d78 <___vfprintf_internal_r+0x1630>
    1274:	d8002915 	stw	zero,164(sp)
    1278:	d8002e15 	stw	zero,184(sp)
    127c:	dc001e04 	addi	r16,sp,120
    1280:	003ef806 	br	e64 <__alt_data_end+0xfffe0e64>
    1284:	18c03fcc 	andi	r3,r3,255
    1288:	18059d1e 	bne	r3,zero,2900 <___vfprintf_internal_r+0x21b8>
    128c:	01400074 	movhi	r5,1
    1290:	297d3c04 	addi	r5,r5,-2832
    1294:	d9403915 	stw	r5,228(sp)
    1298:	9080080c 	andi	r2,r18,32
    129c:	10005226 	beq	r2,zero,13e8 <___vfprintf_internal_r+0xca0>
    12a0:	d8802d17 	ldw	r2,180(sp)
    12a4:	14c00017 	ldw	r19,0(r2)
    12a8:	15800117 	ldw	r22,4(r2)
    12ac:	10800204 	addi	r2,r2,8
    12b0:	d8802d15 	stw	r2,180(sp)
    12b4:	9080004c 	andi	r2,r18,1
    12b8:	10019026 	beq	r2,zero,18fc <___vfprintf_internal_r+0x11b4>
    12bc:	9d84b03a 	or	r2,r19,r22
    12c0:	10036926 	beq	r2,zero,2068 <___vfprintf_internal_r+0x1920>
    12c4:	d8c02917 	ldw	r3,164(sp)
    12c8:	00800c04 	movi	r2,48
    12cc:	d8802705 	stb	r2,156(sp)
    12d0:	dc402745 	stb	r17,157(sp)
    12d4:	d8002785 	stb	zero,158(sp)
    12d8:	90800094 	ori	r2,r18,2
    12dc:	18045d16 	blt	r3,zero,2454 <___vfprintf_internal_r+0x1d0c>
    12e0:	00bfdfc4 	movi	r2,-129
    12e4:	90a4703a 	and	r18,r18,r2
    12e8:	94800094 	ori	r18,r18,2
    12ec:	0039883a 	mov	fp,zero
    12f0:	d9003917 	ldw	r4,228(sp)
    12f4:	dc001e04 	addi	r16,sp,120
    12f8:	988003cc 	andi	r2,r19,15
    12fc:	b006973a 	slli	r3,r22,28
    1300:	2085883a 	add	r2,r4,r2
    1304:	9826d13a 	srli	r19,r19,4
    1308:	10800003 	ldbu	r2,0(r2)
    130c:	b02cd13a 	srli	r22,r22,4
    1310:	843fffc4 	addi	r16,r16,-1
    1314:	1ce6b03a 	or	r19,r3,r19
    1318:	80800005 	stb	r2,0(r16)
    131c:	9d84b03a 	or	r2,r19,r22
    1320:	103ff51e 	bne	r2,zero,12f8 <__alt_data_end+0xfffe12f8>
    1324:	d8c02817 	ldw	r3,160(sp)
    1328:	1c07c83a 	sub	r3,r3,r16
    132c:	d8c02e15 	stw	r3,184(sp)
    1330:	003ecc06 	br	e64 <__alt_data_end+0xfffe0e64>
    1334:	18c03fcc 	andi	r3,r3,255
    1338:	183e9f26 	beq	r3,zero,db8 <__alt_data_end+0xfffe0db8>
    133c:	d9c02785 	stb	r7,158(sp)
    1340:	003e9d06 	br	db8 <__alt_data_end+0xfffe0db8>
    1344:	00c00044 	movi	r3,1
    1348:	01c00ac4 	movi	r7,43
    134c:	ac400007 	ldb	r17,0(r21)
    1350:	003d5e06 	br	8cc <__alt_data_end+0xfffe08cc>
    1354:	94800814 	ori	r18,r18,32
    1358:	ac400007 	ldb	r17,0(r21)
    135c:	003d5b06 	br	8cc <__alt_data_end+0xfffe08cc>
    1360:	d8c02d17 	ldw	r3,180(sp)
    1364:	d8002785 	stb	zero,158(sp)
    1368:	1c000017 	ldw	r16,0(r3)
    136c:	1cc00104 	addi	r19,r3,4
    1370:	80041926 	beq	r16,zero,23d8 <___vfprintf_internal_r+0x1c90>
    1374:	d9002917 	ldw	r4,164(sp)
    1378:	2003d016 	blt	r4,zero,22bc <___vfprintf_internal_r+0x1b74>
    137c:	200d883a 	mov	r6,r4
    1380:	000b883a 	mov	r5,zero
    1384:	8009883a 	mov	r4,r16
    1388:	da003d15 	stw	r8,244(sp)
    138c:	0005a9c0 	call	5a9c <memchr>
    1390:	da003d17 	ldw	r8,244(sp)
    1394:	10045426 	beq	r2,zero,24e8 <___vfprintf_internal_r+0x1da0>
    1398:	1405c83a 	sub	r2,r2,r16
    139c:	d8802e15 	stw	r2,184(sp)
    13a0:	1003cc16 	blt	r2,zero,22d4 <___vfprintf_internal_r+0x1b8c>
    13a4:	df002783 	ldbu	fp,158(sp)
    13a8:	d8802a15 	stw	r2,168(sp)
    13ac:	dcc02d15 	stw	r19,180(sp)
    13b0:	d8002915 	stw	zero,164(sp)
    13b4:	d8003215 	stw	zero,200(sp)
    13b8:	003eb006 	br	e7c <__alt_data_end+0xfffe0e7c>
    13bc:	18c03fcc 	andi	r3,r3,255
    13c0:	183f9b26 	beq	r3,zero,1230 <__alt_data_end+0xfffe1230>
    13c4:	d9c02785 	stb	r7,158(sp)
    13c8:	003f9906 	br	1230 <__alt_data_end+0xfffe1230>
    13cc:	18c03fcc 	andi	r3,r3,255
    13d0:	1805551e 	bne	r3,zero,2928 <___vfprintf_internal_r+0x21e0>
    13d4:	01400074 	movhi	r5,1
    13d8:	297d4104 	addi	r5,r5,-2812
    13dc:	d9403915 	stw	r5,228(sp)
    13e0:	9080080c 	andi	r2,r18,32
    13e4:	103fae1e 	bne	r2,zero,12a0 <__alt_data_end+0xfffe12a0>
    13e8:	9080040c 	andi	r2,r18,16
    13ec:	1002de26 	beq	r2,zero,1f68 <___vfprintf_internal_r+0x1820>
    13f0:	d8c02d17 	ldw	r3,180(sp)
    13f4:	002d883a 	mov	r22,zero
    13f8:	1cc00017 	ldw	r19,0(r3)
    13fc:	18c00104 	addi	r3,r3,4
    1400:	d8c02d15 	stw	r3,180(sp)
    1404:	003fab06 	br	12b4 <__alt_data_end+0xfffe12b4>
    1408:	38803fcc 	andi	r2,r7,255
    140c:	1080201c 	xori	r2,r2,128
    1410:	10bfe004 	addi	r2,r2,-128
    1414:	1002d21e 	bne	r2,zero,1f60 <___vfprintf_internal_r+0x1818>
    1418:	00c00044 	movi	r3,1
    141c:	01c00804 	movi	r7,32
    1420:	ac400007 	ldb	r17,0(r21)
    1424:	003d2906 	br	8cc <__alt_data_end+0xfffe08cc>
    1428:	94800054 	ori	r18,r18,1
    142c:	ac400007 	ldb	r17,0(r21)
    1430:	003d2606 	br	8cc <__alt_data_end+0xfffe08cc>
    1434:	18c03fcc 	andi	r3,r3,255
    1438:	183e0526 	beq	r3,zero,c50 <__alt_data_end+0xfffe0c50>
    143c:	d9c02785 	stb	r7,158(sp)
    1440:	003e0306 	br	c50 <__alt_data_end+0xfffe0c50>
    1444:	94801014 	ori	r18,r18,64
    1448:	ac400007 	ldb	r17,0(r21)
    144c:	003d1f06 	br	8cc <__alt_data_end+0xfffe08cc>
    1450:	ac400007 	ldb	r17,0(r21)
    1454:	8a438726 	beq	r17,r9,2274 <___vfprintf_internal_r+0x1b2c>
    1458:	94800414 	ori	r18,r18,16
    145c:	003d1b06 	br	8cc <__alt_data_end+0xfffe08cc>
    1460:	18c03fcc 	andi	r3,r3,255
    1464:	1805341e 	bne	r3,zero,2938 <___vfprintf_internal_r+0x21f0>
    1468:	9080080c 	andi	r2,r18,32
    146c:	1002cd26 	beq	r2,zero,1fa4 <___vfprintf_internal_r+0x185c>
    1470:	d9402d17 	ldw	r5,180(sp)
    1474:	d9002f17 	ldw	r4,188(sp)
    1478:	28800017 	ldw	r2,0(r5)
    147c:	2007d7fa 	srai	r3,r4,31
    1480:	29400104 	addi	r5,r5,4
    1484:	d9402d15 	stw	r5,180(sp)
    1488:	11000015 	stw	r4,0(r2)
    148c:	10c00115 	stw	r3,4(r2)
    1490:	003ce506 	br	828 <__alt_data_end+0xfffe0828>
    1494:	d8c02d17 	ldw	r3,180(sp)
    1498:	d9002d17 	ldw	r4,180(sp)
    149c:	d8002785 	stb	zero,158(sp)
    14a0:	18800017 	ldw	r2,0(r3)
    14a4:	21000104 	addi	r4,r4,4
    14a8:	00c00044 	movi	r3,1
    14ac:	d8c02a15 	stw	r3,168(sp)
    14b0:	d8801405 	stb	r2,80(sp)
    14b4:	d9002d15 	stw	r4,180(sp)
    14b8:	d8c02e15 	stw	r3,184(sp)
    14bc:	d8002915 	stw	zero,164(sp)
    14c0:	d8003215 	stw	zero,200(sp)
    14c4:	dc001404 	addi	r16,sp,80
    14c8:	0039883a 	mov	fp,zero
    14cc:	003e7206 	br	e98 <__alt_data_end+0xfffe0e98>
    14d0:	01000074 	movhi	r4,1
    14d4:	213d4104 	addi	r4,r4,-2812
    14d8:	0039883a 	mov	fp,zero
    14dc:	d9003915 	stw	r4,228(sp)
    14e0:	04401e04 	movi	r17,120
    14e4:	003f8206 	br	12f0 <__alt_data_end+0xfffe12f0>
    14e8:	18c03fcc 	andi	r3,r3,255
    14ec:	1805061e 	bne	r3,zero,2908 <___vfprintf_internal_r+0x21c0>
    14f0:	883d9126 	beq	r17,zero,b38 <__alt_data_end+0xfffe0b38>
    14f4:	00c00044 	movi	r3,1
    14f8:	d8c02a15 	stw	r3,168(sp)
    14fc:	dc401405 	stb	r17,80(sp)
    1500:	d8002785 	stb	zero,158(sp)
    1504:	003fec06 	br	14b8 <__alt_data_end+0xfffe14b8>
    1508:	01400074 	movhi	r5,1
    150c:	297d4104 	addi	r5,r5,-2812
    1510:	d9403915 	stw	r5,228(sp)
    1514:	d8c02d15 	stw	r3,180(sp)
    1518:	1025883a 	mov	r18,r2
    151c:	04401e04 	movi	r17,120
    1520:	9d84b03a 	or	r2,r19,r22
    1524:	1000fc1e 	bne	r2,zero,1918 <___vfprintf_internal_r+0x11d0>
    1528:	0039883a 	mov	fp,zero
    152c:	00800084 	movi	r2,2
    1530:	10803fcc 	andi	r2,r2,255
    1534:	00c00044 	movi	r3,1
    1538:	10c20f26 	beq	r2,r3,1d78 <___vfprintf_internal_r+0x1630>
    153c:	00c00084 	movi	r3,2
    1540:	10fd6326 	beq	r2,r3,ad0 <__alt_data_end+0xfffe0ad0>
    1544:	003e2d06 	br	dfc <__alt_data_end+0xfffe0dfc>
    1548:	d8c02017 	ldw	r3,128(sp)
    154c:	003e9306 	br	f9c <__alt_data_end+0xfffe0f9c>
    1550:	00801944 	movi	r2,101
    1554:	14407e0e 	bge	r2,r17,1750 <___vfprintf_internal_r+0x1008>
    1558:	d9003617 	ldw	r4,216(sp)
    155c:	d9403817 	ldw	r5,224(sp)
    1560:	000d883a 	mov	r6,zero
    1564:	000f883a 	mov	r7,zero
    1568:	d8c03c15 	stw	r3,240(sp)
    156c:	da003d15 	stw	r8,244(sp)
    1570:	000b8a00 	call	b8a0 <__eqdf2>
    1574:	d8c03c17 	ldw	r3,240(sp)
    1578:	da003d17 	ldw	r8,244(sp)
    157c:	1000f71e 	bne	r2,zero,195c <___vfprintf_internal_r+0x1214>
    1580:	d8801f17 	ldw	r2,124(sp)
    1584:	01000074 	movhi	r4,1
    1588:	213d4804 	addi	r4,r4,-2784
    158c:	18c00044 	addi	r3,r3,1
    1590:	10800044 	addi	r2,r2,1
    1594:	41000015 	stw	r4,0(r8)
    1598:	01000044 	movi	r4,1
    159c:	41000115 	stw	r4,4(r8)
    15a0:	d8c02015 	stw	r3,128(sp)
    15a4:	d8801f15 	stw	r2,124(sp)
    15a8:	010001c4 	movi	r4,7
    15ac:	2082b816 	blt	r4,r2,2090 <___vfprintf_internal_r+0x1948>
    15b0:	42000204 	addi	r8,r8,8
    15b4:	d8802617 	ldw	r2,152(sp)
    15b8:	d9403317 	ldw	r5,204(sp)
    15bc:	11400216 	blt	r2,r5,15c8 <___vfprintf_internal_r+0xe80>
    15c0:	9080004c 	andi	r2,r18,1
    15c4:	103ed526 	beq	r2,zero,111c <__alt_data_end+0xfffe111c>
    15c8:	d8803717 	ldw	r2,220(sp)
    15cc:	d9003417 	ldw	r4,208(sp)
    15d0:	d9403717 	ldw	r5,220(sp)
    15d4:	1887883a 	add	r3,r3,r2
    15d8:	d8801f17 	ldw	r2,124(sp)
    15dc:	41000015 	stw	r4,0(r8)
    15e0:	41400115 	stw	r5,4(r8)
    15e4:	10800044 	addi	r2,r2,1
    15e8:	d8c02015 	stw	r3,128(sp)
    15ec:	d8801f15 	stw	r2,124(sp)
    15f0:	010001c4 	movi	r4,7
    15f4:	20832916 	blt	r4,r2,229c <___vfprintf_internal_r+0x1b54>
    15f8:	42000204 	addi	r8,r8,8
    15fc:	d8803317 	ldw	r2,204(sp)
    1600:	143fffc4 	addi	r16,r2,-1
    1604:	043ec50e 	bge	zero,r16,111c <__alt_data_end+0xfffe111c>
    1608:	04400404 	movi	r17,16
    160c:	d8801f17 	ldw	r2,124(sp)
    1610:	8c00880e 	bge	r17,r16,1834 <___vfprintf_internal_r+0x10ec>
    1614:	01400074 	movhi	r5,1
    1618:	297d4884 	addi	r5,r5,-2782
    161c:	d9402b15 	stw	r5,172(sp)
    1620:	058001c4 	movi	r22,7
    1624:	dcc02c17 	ldw	r19,176(sp)
    1628:	00000306 	br	1638 <___vfprintf_internal_r+0xef0>
    162c:	42000204 	addi	r8,r8,8
    1630:	843ffc04 	addi	r16,r16,-16
    1634:	8c00820e 	bge	r17,r16,1840 <___vfprintf_internal_r+0x10f8>
    1638:	18c00404 	addi	r3,r3,16
    163c:	10800044 	addi	r2,r2,1
    1640:	45000015 	stw	r20,0(r8)
    1644:	44400115 	stw	r17,4(r8)
    1648:	d8c02015 	stw	r3,128(sp)
    164c:	d8801f15 	stw	r2,124(sp)
    1650:	b0bff60e 	bge	r22,r2,162c <__alt_data_end+0xfffe162c>
    1654:	d9801e04 	addi	r6,sp,120
    1658:	b80b883a 	mov	r5,r23
    165c:	9809883a 	mov	r4,r19
    1660:	00072600 	call	7260 <__sprint_r>
    1664:	103d3a1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1668:	d8c02017 	ldw	r3,128(sp)
    166c:	d8801f17 	ldw	r2,124(sp)
    1670:	da000404 	addi	r8,sp,16
    1674:	003fee06 	br	1630 <__alt_data_end+0xfffe1630>
    1678:	d9403117 	ldw	r5,196(sp)
    167c:	d8802a17 	ldw	r2,168(sp)
    1680:	28adc83a 	sub	r22,r5,r2
    1684:	05be630e 	bge	zero,r22,1014 <__alt_data_end+0xfffe1014>
    1688:	07000404 	movi	fp,16
    168c:	d8801f17 	ldw	r2,124(sp)
    1690:	e5838f0e 	bge	fp,r22,24d0 <___vfprintf_internal_r+0x1d88>
    1694:	01400074 	movhi	r5,1
    1698:	297d4884 	addi	r5,r5,-2782
    169c:	dc403015 	stw	r17,192(sp)
    16a0:	d9402b15 	stw	r5,172(sp)
    16a4:	b023883a 	mov	r17,r22
    16a8:	04c001c4 	movi	r19,7
    16ac:	a82d883a 	mov	r22,r21
    16b0:	902b883a 	mov	r21,r18
    16b4:	8025883a 	mov	r18,r16
    16b8:	dc002c17 	ldw	r16,176(sp)
    16bc:	00000306 	br	16cc <___vfprintf_internal_r+0xf84>
    16c0:	8c7ffc04 	addi	r17,r17,-16
    16c4:	42000204 	addi	r8,r8,8
    16c8:	e440110e 	bge	fp,r17,1710 <___vfprintf_internal_r+0xfc8>
    16cc:	18c00404 	addi	r3,r3,16
    16d0:	10800044 	addi	r2,r2,1
    16d4:	45000015 	stw	r20,0(r8)
    16d8:	47000115 	stw	fp,4(r8)
    16dc:	d8c02015 	stw	r3,128(sp)
    16e0:	d8801f15 	stw	r2,124(sp)
    16e4:	98bff60e 	bge	r19,r2,16c0 <__alt_data_end+0xfffe16c0>
    16e8:	d9801e04 	addi	r6,sp,120
    16ec:	b80b883a 	mov	r5,r23
    16f0:	8009883a 	mov	r4,r16
    16f4:	00072600 	call	7260 <__sprint_r>
    16f8:	103d151e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    16fc:	8c7ffc04 	addi	r17,r17,-16
    1700:	d8c02017 	ldw	r3,128(sp)
    1704:	d8801f17 	ldw	r2,124(sp)
    1708:	da000404 	addi	r8,sp,16
    170c:	e47fef16 	blt	fp,r17,16cc <__alt_data_end+0xfffe16cc>
    1710:	9021883a 	mov	r16,r18
    1714:	a825883a 	mov	r18,r21
    1718:	b02b883a 	mov	r21,r22
    171c:	882d883a 	mov	r22,r17
    1720:	dc403017 	ldw	r17,192(sp)
    1724:	d9002b17 	ldw	r4,172(sp)
    1728:	1d87883a 	add	r3,r3,r22
    172c:	10800044 	addi	r2,r2,1
    1730:	41000015 	stw	r4,0(r8)
    1734:	45800115 	stw	r22,4(r8)
    1738:	d8c02015 	stw	r3,128(sp)
    173c:	d8801f15 	stw	r2,124(sp)
    1740:	010001c4 	movi	r4,7
    1744:	20818e16 	blt	r4,r2,1d80 <___vfprintf_internal_r+0x1638>
    1748:	42000204 	addi	r8,r8,8
    174c:	003e3106 	br	1014 <__alt_data_end+0xfffe1014>
    1750:	d9403317 	ldw	r5,204(sp)
    1754:	00800044 	movi	r2,1
    1758:	18c00044 	addi	r3,r3,1
    175c:	1141530e 	bge	r2,r5,1cac <___vfprintf_internal_r+0x1564>
    1760:	dc401f17 	ldw	r17,124(sp)
    1764:	00800044 	movi	r2,1
    1768:	40800115 	stw	r2,4(r8)
    176c:	8c400044 	addi	r17,r17,1
    1770:	44000015 	stw	r16,0(r8)
    1774:	d8c02015 	stw	r3,128(sp)
    1778:	dc401f15 	stw	r17,124(sp)
    177c:	008001c4 	movi	r2,7
    1780:	14416b16 	blt	r2,r17,1d30 <___vfprintf_internal_r+0x15e8>
    1784:	42000204 	addi	r8,r8,8
    1788:	d8803717 	ldw	r2,220(sp)
    178c:	d9003417 	ldw	r4,208(sp)
    1790:	8c400044 	addi	r17,r17,1
    1794:	10c7883a 	add	r3,r2,r3
    1798:	40800115 	stw	r2,4(r8)
    179c:	41000015 	stw	r4,0(r8)
    17a0:	d8c02015 	stw	r3,128(sp)
    17a4:	dc401f15 	stw	r17,124(sp)
    17a8:	008001c4 	movi	r2,7
    17ac:	14416916 	blt	r2,r17,1d54 <___vfprintf_internal_r+0x160c>
    17b0:	45800204 	addi	r22,r8,8
    17b4:	d9003617 	ldw	r4,216(sp)
    17b8:	d9403817 	ldw	r5,224(sp)
    17bc:	000d883a 	mov	r6,zero
    17c0:	000f883a 	mov	r7,zero
    17c4:	d8c03c15 	stw	r3,240(sp)
    17c8:	000b8a00 	call	b8a0 <__eqdf2>
    17cc:	d8c03c17 	ldw	r3,240(sp)
    17d0:	1000bc26 	beq	r2,zero,1ac4 <___vfprintf_internal_r+0x137c>
    17d4:	d9403317 	ldw	r5,204(sp)
    17d8:	84000044 	addi	r16,r16,1
    17dc:	8c400044 	addi	r17,r17,1
    17e0:	28bfffc4 	addi	r2,r5,-1
    17e4:	1887883a 	add	r3,r3,r2
    17e8:	b0800115 	stw	r2,4(r22)
    17ec:	b4000015 	stw	r16,0(r22)
    17f0:	d8c02015 	stw	r3,128(sp)
    17f4:	dc401f15 	stw	r17,124(sp)
    17f8:	008001c4 	movi	r2,7
    17fc:	14414316 	blt	r2,r17,1d0c <___vfprintf_internal_r+0x15c4>
    1800:	b5800204 	addi	r22,r22,8
    1804:	d9003a17 	ldw	r4,232(sp)
    1808:	df0022c4 	addi	fp,sp,139
    180c:	8c400044 	addi	r17,r17,1
    1810:	20c7883a 	add	r3,r4,r3
    1814:	b7000015 	stw	fp,0(r22)
    1818:	b1000115 	stw	r4,4(r22)
    181c:	d8c02015 	stw	r3,128(sp)
    1820:	dc401f15 	stw	r17,124(sp)
    1824:	008001c4 	movi	r2,7
    1828:	14400e16 	blt	r2,r17,1864 <___vfprintf_internal_r+0x111c>
    182c:	b2000204 	addi	r8,r22,8
    1830:	003e3a06 	br	111c <__alt_data_end+0xfffe111c>
    1834:	01000074 	movhi	r4,1
    1838:	213d4884 	addi	r4,r4,-2782
    183c:	d9002b15 	stw	r4,172(sp)
    1840:	d9002b17 	ldw	r4,172(sp)
    1844:	1c07883a 	add	r3,r3,r16
    1848:	44000115 	stw	r16,4(r8)
    184c:	41000015 	stw	r4,0(r8)
    1850:	10800044 	addi	r2,r2,1
    1854:	d8c02015 	stw	r3,128(sp)
    1858:	d8801f15 	stw	r2,124(sp)
    185c:	010001c4 	movi	r4,7
    1860:	20be2d0e 	bge	r4,r2,1118 <__alt_data_end+0xfffe1118>
    1864:	d9002c17 	ldw	r4,176(sp)
    1868:	d9801e04 	addi	r6,sp,120
    186c:	b80b883a 	mov	r5,r23
    1870:	00072600 	call	7260 <__sprint_r>
    1874:	103cb61e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1878:	d8c02017 	ldw	r3,128(sp)
    187c:	da000404 	addi	r8,sp,16
    1880:	003e2606 	br	111c <__alt_data_end+0xfffe111c>
    1884:	d9002c17 	ldw	r4,176(sp)
    1888:	d9801e04 	addi	r6,sp,120
    188c:	b80b883a 	mov	r5,r23
    1890:	00072600 	call	7260 <__sprint_r>
    1894:	103e5d26 	beq	r2,zero,120c <__alt_data_end+0xfffe120c>
    1898:	003cad06 	br	b50 <__alt_data_end+0xfffe0b50>
    189c:	d9002c17 	ldw	r4,176(sp)
    18a0:	d9801e04 	addi	r6,sp,120
    18a4:	b80b883a 	mov	r5,r23
    18a8:	00072600 	call	7260 <__sprint_r>
    18ac:	103ca81e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    18b0:	d8c02017 	ldw	r3,128(sp)
    18b4:	da000404 	addi	r8,sp,16
    18b8:	003e0b06 	br	10e8 <__alt_data_end+0xfffe10e8>
    18bc:	d9002c17 	ldw	r4,176(sp)
    18c0:	d9801e04 	addi	r6,sp,120
    18c4:	b80b883a 	mov	r5,r23
    18c8:	00072600 	call	7260 <__sprint_r>
    18cc:	103ca01e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    18d0:	d8c02017 	ldw	r3,128(sp)
    18d4:	da000404 	addi	r8,sp,16
    18d8:	003dbd06 	br	fd0 <__alt_data_end+0xfffe0fd0>
    18dc:	d9002c17 	ldw	r4,176(sp)
    18e0:	d9801e04 	addi	r6,sp,120
    18e4:	b80b883a 	mov	r5,r23
    18e8:	00072600 	call	7260 <__sprint_r>
    18ec:	103c981e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    18f0:	d8c02017 	ldw	r3,128(sp)
    18f4:	da000404 	addi	r8,sp,16
    18f8:	003dc306 	br	1008 <__alt_data_end+0xfffe1008>
    18fc:	d8802917 	ldw	r2,164(sp)
    1900:	d8002785 	stb	zero,158(sp)
    1904:	103f0616 	blt	r2,zero,1520 <__alt_data_end+0xfffe1520>
    1908:	00ffdfc4 	movi	r3,-129
    190c:	9d84b03a 	or	r2,r19,r22
    1910:	90e4703a 	and	r18,r18,r3
    1914:	103c6b26 	beq	r2,zero,ac4 <__alt_data_end+0xfffe0ac4>
    1918:	0039883a 	mov	fp,zero
    191c:	003e7406 	br	12f0 <__alt_data_end+0xfffe12f0>
    1920:	9080040c 	andi	r2,r18,16
    1924:	1001b326 	beq	r2,zero,1ff4 <___vfprintf_internal_r+0x18ac>
    1928:	d9002d17 	ldw	r4,180(sp)
    192c:	d9402917 	ldw	r5,164(sp)
    1930:	d8002785 	stb	zero,158(sp)
    1934:	20800104 	addi	r2,r4,4
    1938:	24c00017 	ldw	r19,0(r4)
    193c:	002d883a 	mov	r22,zero
    1940:	2801b516 	blt	r5,zero,2018 <___vfprintf_internal_r+0x18d0>
    1944:	00ffdfc4 	movi	r3,-129
    1948:	d8802d15 	stw	r2,180(sp)
    194c:	90e4703a 	and	r18,r18,r3
    1950:	983d2726 	beq	r19,zero,df0 <__alt_data_end+0xfffe0df0>
    1954:	0039883a 	mov	fp,zero
    1958:	003d2a06 	br	e04 <__alt_data_end+0xfffe0e04>
    195c:	dc402617 	ldw	r17,152(sp)
    1960:	0441d30e 	bge	zero,r17,20b0 <___vfprintf_internal_r+0x1968>
    1964:	dc403217 	ldw	r17,200(sp)
    1968:	d8803317 	ldw	r2,204(sp)
    196c:	1440010e 	bge	r2,r17,1974 <___vfprintf_internal_r+0x122c>
    1970:	1023883a 	mov	r17,r2
    1974:	04400a0e 	bge	zero,r17,19a0 <___vfprintf_internal_r+0x1258>
    1978:	d8801f17 	ldw	r2,124(sp)
    197c:	1c47883a 	add	r3,r3,r17
    1980:	44000015 	stw	r16,0(r8)
    1984:	10800044 	addi	r2,r2,1
    1988:	44400115 	stw	r17,4(r8)
    198c:	d8c02015 	stw	r3,128(sp)
    1990:	d8801f15 	stw	r2,124(sp)
    1994:	010001c4 	movi	r4,7
    1998:	20826516 	blt	r4,r2,2330 <___vfprintf_internal_r+0x1be8>
    199c:	42000204 	addi	r8,r8,8
    19a0:	88026116 	blt	r17,zero,2328 <___vfprintf_internal_r+0x1be0>
    19a4:	d9003217 	ldw	r4,200(sp)
    19a8:	2463c83a 	sub	r17,r4,r17
    19ac:	04407b0e 	bge	zero,r17,1b9c <___vfprintf_internal_r+0x1454>
    19b0:	05800404 	movi	r22,16
    19b4:	d8801f17 	ldw	r2,124(sp)
    19b8:	b4419d0e 	bge	r22,r17,2030 <___vfprintf_internal_r+0x18e8>
    19bc:	01000074 	movhi	r4,1
    19c0:	213d4884 	addi	r4,r4,-2782
    19c4:	d9002b15 	stw	r4,172(sp)
    19c8:	070001c4 	movi	fp,7
    19cc:	dcc02c17 	ldw	r19,176(sp)
    19d0:	00000306 	br	19e0 <___vfprintf_internal_r+0x1298>
    19d4:	42000204 	addi	r8,r8,8
    19d8:	8c7ffc04 	addi	r17,r17,-16
    19dc:	b441970e 	bge	r22,r17,203c <___vfprintf_internal_r+0x18f4>
    19e0:	18c00404 	addi	r3,r3,16
    19e4:	10800044 	addi	r2,r2,1
    19e8:	45000015 	stw	r20,0(r8)
    19ec:	45800115 	stw	r22,4(r8)
    19f0:	d8c02015 	stw	r3,128(sp)
    19f4:	d8801f15 	stw	r2,124(sp)
    19f8:	e0bff60e 	bge	fp,r2,19d4 <__alt_data_end+0xfffe19d4>
    19fc:	d9801e04 	addi	r6,sp,120
    1a00:	b80b883a 	mov	r5,r23
    1a04:	9809883a 	mov	r4,r19
    1a08:	00072600 	call	7260 <__sprint_r>
    1a0c:	103c501e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1a10:	d8c02017 	ldw	r3,128(sp)
    1a14:	d8801f17 	ldw	r2,124(sp)
    1a18:	da000404 	addi	r8,sp,16
    1a1c:	003fee06 	br	19d8 <__alt_data_end+0xfffe19d8>
    1a20:	d9002c17 	ldw	r4,176(sp)
    1a24:	d9801e04 	addi	r6,sp,120
    1a28:	b80b883a 	mov	r5,r23
    1a2c:	00072600 	call	7260 <__sprint_r>
    1a30:	103c471e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1a34:	d8c02017 	ldw	r3,128(sp)
    1a38:	df002787 	ldb	fp,158(sp)
    1a3c:	da000404 	addi	r8,sp,16
    1a40:	003d5606 	br	f9c <__alt_data_end+0xfffe0f9c>
    1a44:	9080040c 	andi	r2,r18,16
    1a48:	10016126 	beq	r2,zero,1fd0 <___vfprintf_internal_r+0x1888>
    1a4c:	d8802d17 	ldw	r2,180(sp)
    1a50:	14c00017 	ldw	r19,0(r2)
    1a54:	10800104 	addi	r2,r2,4
    1a58:	d8802d15 	stw	r2,180(sp)
    1a5c:	982dd7fa 	srai	r22,r19,31
    1a60:	b005883a 	mov	r2,r22
    1a64:	003c8206 	br	c70 <__alt_data_end+0xfffe0c70>
    1a68:	9080040c 	andi	r2,r18,16
    1a6c:	10003526 	beq	r2,zero,1b44 <___vfprintf_internal_r+0x13fc>
    1a70:	d9402d17 	ldw	r5,180(sp)
    1a74:	d8c02917 	ldw	r3,164(sp)
    1a78:	d8002785 	stb	zero,158(sp)
    1a7c:	28800104 	addi	r2,r5,4
    1a80:	2cc00017 	ldw	r19,0(r5)
    1a84:	002d883a 	mov	r22,zero
    1a88:	18003716 	blt	r3,zero,1b68 <___vfprintf_internal_r+0x1420>
    1a8c:	00ffdfc4 	movi	r3,-129
    1a90:	d8802d15 	stw	r2,180(sp)
    1a94:	90e4703a 	and	r18,r18,r3
    1a98:	0039883a 	mov	fp,zero
    1a9c:	983df326 	beq	r19,zero,126c <__alt_data_end+0xfffe126c>
    1aa0:	00800244 	movi	r2,9
    1aa4:	14fc7b36 	bltu	r2,r19,c94 <__alt_data_end+0xfffe0c94>
    1aa8:	d8c02817 	ldw	r3,160(sp)
    1aac:	dc001dc4 	addi	r16,sp,119
    1ab0:	9cc00c04 	addi	r19,r19,48
    1ab4:	1c07c83a 	sub	r3,r3,r16
    1ab8:	dcc01dc5 	stb	r19,119(sp)
    1abc:	d8c02e15 	stw	r3,184(sp)
    1ac0:	003ce806 	br	e64 <__alt_data_end+0xfffe0e64>
    1ac4:	d8803317 	ldw	r2,204(sp)
    1ac8:	143fffc4 	addi	r16,r2,-1
    1acc:	043f4d0e 	bge	zero,r16,1804 <__alt_data_end+0xfffe1804>
    1ad0:	07000404 	movi	fp,16
    1ad4:	e400810e 	bge	fp,r16,1cdc <___vfprintf_internal_r+0x1594>
    1ad8:	01400074 	movhi	r5,1
    1adc:	297d4884 	addi	r5,r5,-2782
    1ae0:	d9402b15 	stw	r5,172(sp)
    1ae4:	01c001c4 	movi	r7,7
    1ae8:	dcc02c17 	ldw	r19,176(sp)
    1aec:	00000306 	br	1afc <___vfprintf_internal_r+0x13b4>
    1af0:	b5800204 	addi	r22,r22,8
    1af4:	843ffc04 	addi	r16,r16,-16
    1af8:	e4007b0e 	bge	fp,r16,1ce8 <___vfprintf_internal_r+0x15a0>
    1afc:	18c00404 	addi	r3,r3,16
    1b00:	8c400044 	addi	r17,r17,1
    1b04:	b5000015 	stw	r20,0(r22)
    1b08:	b7000115 	stw	fp,4(r22)
    1b0c:	d8c02015 	stw	r3,128(sp)
    1b10:	dc401f15 	stw	r17,124(sp)
    1b14:	3c7ff60e 	bge	r7,r17,1af0 <__alt_data_end+0xfffe1af0>
    1b18:	d9801e04 	addi	r6,sp,120
    1b1c:	b80b883a 	mov	r5,r23
    1b20:	9809883a 	mov	r4,r19
    1b24:	d9c03c15 	stw	r7,240(sp)
    1b28:	00072600 	call	7260 <__sprint_r>
    1b2c:	d9c03c17 	ldw	r7,240(sp)
    1b30:	103c071e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1b34:	d8c02017 	ldw	r3,128(sp)
    1b38:	dc401f17 	ldw	r17,124(sp)
    1b3c:	dd800404 	addi	r22,sp,16
    1b40:	003fec06 	br	1af4 <__alt_data_end+0xfffe1af4>
    1b44:	9080100c 	andi	r2,r18,64
    1b48:	d8002785 	stb	zero,158(sp)
    1b4c:	10010e26 	beq	r2,zero,1f88 <___vfprintf_internal_r+0x1840>
    1b50:	d9002d17 	ldw	r4,180(sp)
    1b54:	d9402917 	ldw	r5,164(sp)
    1b58:	002d883a 	mov	r22,zero
    1b5c:	20800104 	addi	r2,r4,4
    1b60:	24c0000b 	ldhu	r19,0(r4)
    1b64:	283fc90e 	bge	r5,zero,1a8c <__alt_data_end+0xfffe1a8c>
    1b68:	d8802d15 	stw	r2,180(sp)
    1b6c:	0039883a 	mov	fp,zero
    1b70:	9d84b03a 	or	r2,r19,r22
    1b74:	103c461e 	bne	r2,zero,c90 <__alt_data_end+0xfffe0c90>
    1b78:	00800044 	movi	r2,1
    1b7c:	003e6c06 	br	1530 <__alt_data_end+0xfffe1530>
    1b80:	d9002c17 	ldw	r4,176(sp)
    1b84:	d9801e04 	addi	r6,sp,120
    1b88:	b80b883a 	mov	r5,r23
    1b8c:	00072600 	call	7260 <__sprint_r>
    1b90:	103bef1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1b94:	d8c02017 	ldw	r3,128(sp)
    1b98:	da000404 	addi	r8,sp,16
    1b9c:	d9003217 	ldw	r4,200(sp)
    1ba0:	d8802617 	ldw	r2,152(sp)
    1ba4:	d9403317 	ldw	r5,204(sp)
    1ba8:	8123883a 	add	r17,r16,r4
    1bac:	11400216 	blt	r2,r5,1bb8 <___vfprintf_internal_r+0x1470>
    1bb0:	9100004c 	andi	r4,r18,1
    1bb4:	20000d26 	beq	r4,zero,1bec <___vfprintf_internal_r+0x14a4>
    1bb8:	d9003717 	ldw	r4,220(sp)
    1bbc:	d9403417 	ldw	r5,208(sp)
    1bc0:	1907883a 	add	r3,r3,r4
    1bc4:	d9001f17 	ldw	r4,124(sp)
    1bc8:	41400015 	stw	r5,0(r8)
    1bcc:	d9403717 	ldw	r5,220(sp)
    1bd0:	21000044 	addi	r4,r4,1
    1bd4:	d8c02015 	stw	r3,128(sp)
    1bd8:	41400115 	stw	r5,4(r8)
    1bdc:	d9001f15 	stw	r4,124(sp)
    1be0:	014001c4 	movi	r5,7
    1be4:	2901e816 	blt	r5,r4,2388 <___vfprintf_internal_r+0x1c40>
    1be8:	42000204 	addi	r8,r8,8
    1bec:	d9003317 	ldw	r4,204(sp)
    1bf0:	8121883a 	add	r16,r16,r4
    1bf4:	2085c83a 	sub	r2,r4,r2
    1bf8:	8461c83a 	sub	r16,r16,r17
    1bfc:	1400010e 	bge	r2,r16,1c04 <___vfprintf_internal_r+0x14bc>
    1c00:	1021883a 	mov	r16,r2
    1c04:	04000a0e 	bge	zero,r16,1c30 <___vfprintf_internal_r+0x14e8>
    1c08:	d9001f17 	ldw	r4,124(sp)
    1c0c:	1c07883a 	add	r3,r3,r16
    1c10:	44400015 	stw	r17,0(r8)
    1c14:	21000044 	addi	r4,r4,1
    1c18:	44000115 	stw	r16,4(r8)
    1c1c:	d8c02015 	stw	r3,128(sp)
    1c20:	d9001f15 	stw	r4,124(sp)
    1c24:	014001c4 	movi	r5,7
    1c28:	2901fb16 	blt	r5,r4,2418 <___vfprintf_internal_r+0x1cd0>
    1c2c:	42000204 	addi	r8,r8,8
    1c30:	8001f716 	blt	r16,zero,2410 <___vfprintf_internal_r+0x1cc8>
    1c34:	1421c83a 	sub	r16,r2,r16
    1c38:	043d380e 	bge	zero,r16,111c <__alt_data_end+0xfffe111c>
    1c3c:	04400404 	movi	r17,16
    1c40:	d8801f17 	ldw	r2,124(sp)
    1c44:	8c3efb0e 	bge	r17,r16,1834 <__alt_data_end+0xfffe1834>
    1c48:	01400074 	movhi	r5,1
    1c4c:	297d4884 	addi	r5,r5,-2782
    1c50:	d9402b15 	stw	r5,172(sp)
    1c54:	058001c4 	movi	r22,7
    1c58:	dcc02c17 	ldw	r19,176(sp)
    1c5c:	00000306 	br	1c6c <___vfprintf_internal_r+0x1524>
    1c60:	42000204 	addi	r8,r8,8
    1c64:	843ffc04 	addi	r16,r16,-16
    1c68:	8c3ef50e 	bge	r17,r16,1840 <__alt_data_end+0xfffe1840>
    1c6c:	18c00404 	addi	r3,r3,16
    1c70:	10800044 	addi	r2,r2,1
    1c74:	45000015 	stw	r20,0(r8)
    1c78:	44400115 	stw	r17,4(r8)
    1c7c:	d8c02015 	stw	r3,128(sp)
    1c80:	d8801f15 	stw	r2,124(sp)
    1c84:	b0bff60e 	bge	r22,r2,1c60 <__alt_data_end+0xfffe1c60>
    1c88:	d9801e04 	addi	r6,sp,120
    1c8c:	b80b883a 	mov	r5,r23
    1c90:	9809883a 	mov	r4,r19
    1c94:	00072600 	call	7260 <__sprint_r>
    1c98:	103bad1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1c9c:	d8c02017 	ldw	r3,128(sp)
    1ca0:	d8801f17 	ldw	r2,124(sp)
    1ca4:	da000404 	addi	r8,sp,16
    1ca8:	003fee06 	br	1c64 <__alt_data_end+0xfffe1c64>
    1cac:	9088703a 	and	r4,r18,r2
    1cb0:	203eab1e 	bne	r4,zero,1760 <__alt_data_end+0xfffe1760>
    1cb4:	dc401f17 	ldw	r17,124(sp)
    1cb8:	40800115 	stw	r2,4(r8)
    1cbc:	44000015 	stw	r16,0(r8)
    1cc0:	8c400044 	addi	r17,r17,1
    1cc4:	d8c02015 	stw	r3,128(sp)
    1cc8:	dc401f15 	stw	r17,124(sp)
    1ccc:	008001c4 	movi	r2,7
    1cd0:	14400e16 	blt	r2,r17,1d0c <___vfprintf_internal_r+0x15c4>
    1cd4:	45800204 	addi	r22,r8,8
    1cd8:	003eca06 	br	1804 <__alt_data_end+0xfffe1804>
    1cdc:	01000074 	movhi	r4,1
    1ce0:	213d4884 	addi	r4,r4,-2782
    1ce4:	d9002b15 	stw	r4,172(sp)
    1ce8:	d8802b17 	ldw	r2,172(sp)
    1cec:	1c07883a 	add	r3,r3,r16
    1cf0:	8c400044 	addi	r17,r17,1
    1cf4:	b0800015 	stw	r2,0(r22)
    1cf8:	b4000115 	stw	r16,4(r22)
    1cfc:	d8c02015 	stw	r3,128(sp)
    1d00:	dc401f15 	stw	r17,124(sp)
    1d04:	008001c4 	movi	r2,7
    1d08:	147ebd0e 	bge	r2,r17,1800 <__alt_data_end+0xfffe1800>
    1d0c:	d9002c17 	ldw	r4,176(sp)
    1d10:	d9801e04 	addi	r6,sp,120
    1d14:	b80b883a 	mov	r5,r23
    1d18:	00072600 	call	7260 <__sprint_r>
    1d1c:	103b8c1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1d20:	d8c02017 	ldw	r3,128(sp)
    1d24:	dc401f17 	ldw	r17,124(sp)
    1d28:	dd800404 	addi	r22,sp,16
    1d2c:	003eb506 	br	1804 <__alt_data_end+0xfffe1804>
    1d30:	d9002c17 	ldw	r4,176(sp)
    1d34:	d9801e04 	addi	r6,sp,120
    1d38:	b80b883a 	mov	r5,r23
    1d3c:	00072600 	call	7260 <__sprint_r>
    1d40:	103b831e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1d44:	d8c02017 	ldw	r3,128(sp)
    1d48:	dc401f17 	ldw	r17,124(sp)
    1d4c:	da000404 	addi	r8,sp,16
    1d50:	003e8d06 	br	1788 <__alt_data_end+0xfffe1788>
    1d54:	d9002c17 	ldw	r4,176(sp)
    1d58:	d9801e04 	addi	r6,sp,120
    1d5c:	b80b883a 	mov	r5,r23
    1d60:	00072600 	call	7260 <__sprint_r>
    1d64:	103b7a1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1d68:	d8c02017 	ldw	r3,128(sp)
    1d6c:	dc401f17 	ldw	r17,124(sp)
    1d70:	dd800404 	addi	r22,sp,16
    1d74:	003e8f06 	br	17b4 <__alt_data_end+0xfffe17b4>
    1d78:	0027883a 	mov	r19,zero
    1d7c:	003f4a06 	br	1aa8 <__alt_data_end+0xfffe1aa8>
    1d80:	d9002c17 	ldw	r4,176(sp)
    1d84:	d9801e04 	addi	r6,sp,120
    1d88:	b80b883a 	mov	r5,r23
    1d8c:	00072600 	call	7260 <__sprint_r>
    1d90:	103b6f1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    1d94:	d8c02017 	ldw	r3,128(sp)
    1d98:	da000404 	addi	r8,sp,16
    1d9c:	003c9d06 	br	1014 <__alt_data_end+0xfffe1014>
    1da0:	04e7c83a 	sub	r19,zero,r19
    1da4:	9804c03a 	cmpne	r2,r19,zero
    1da8:	05adc83a 	sub	r22,zero,r22
    1dac:	b0adc83a 	sub	r22,r22,r2
    1db0:	d8802917 	ldw	r2,164(sp)
    1db4:	07000b44 	movi	fp,45
    1db8:	df002785 	stb	fp,158(sp)
    1dbc:	10017b16 	blt	r2,zero,23ac <___vfprintf_internal_r+0x1c64>
    1dc0:	00bfdfc4 	movi	r2,-129
    1dc4:	90a4703a 	and	r18,r18,r2
    1dc8:	003bb106 	br	c90 <__alt_data_end+0xfffe0c90>
    1dcc:	d9003617 	ldw	r4,216(sp)
    1dd0:	d9403817 	ldw	r5,224(sp)
    1dd4:	da003d15 	stw	r8,244(sp)
    1dd8:	0006dec0 	call	6dec <__fpclassifyd>
    1ddc:	da003d17 	ldw	r8,244(sp)
    1de0:	1000f026 	beq	r2,zero,21a4 <___vfprintf_internal_r+0x1a5c>
    1de4:	d9002917 	ldw	r4,164(sp)
    1de8:	05bff7c4 	movi	r22,-33
    1dec:	00bfffc4 	movi	r2,-1
    1df0:	8dac703a 	and	r22,r17,r22
    1df4:	20820026 	beq	r4,r2,25f8 <___vfprintf_internal_r+0x1eb0>
    1df8:	008011c4 	movi	r2,71
    1dfc:	b081f726 	beq	r22,r2,25dc <___vfprintf_internal_r+0x1e94>
    1e00:	d9003817 	ldw	r4,224(sp)
    1e04:	90c04014 	ori	r3,r18,256
    1e08:	d8c02b15 	stw	r3,172(sp)
    1e0c:	20021516 	blt	r4,zero,2664 <___vfprintf_internal_r+0x1f1c>
    1e10:	dcc03817 	ldw	r19,224(sp)
    1e14:	d8002a05 	stb	zero,168(sp)
    1e18:	00801984 	movi	r2,102
    1e1c:	8881f926 	beq	r17,r2,2604 <___vfprintf_internal_r+0x1ebc>
    1e20:	00801184 	movi	r2,70
    1e24:	88821c26 	beq	r17,r2,2698 <___vfprintf_internal_r+0x1f50>
    1e28:	00801144 	movi	r2,69
    1e2c:	b081ef26 	beq	r22,r2,25ec <___vfprintf_internal_r+0x1ea4>
    1e30:	d8c02917 	ldw	r3,164(sp)
    1e34:	d8802104 	addi	r2,sp,132
    1e38:	d8800315 	stw	r2,12(sp)
    1e3c:	d9403617 	ldw	r5,216(sp)
    1e40:	d8802504 	addi	r2,sp,148
    1e44:	d9002c17 	ldw	r4,176(sp)
    1e48:	d8800215 	stw	r2,8(sp)
    1e4c:	d8802604 	addi	r2,sp,152
    1e50:	d8c00015 	stw	r3,0(sp)
    1e54:	d8800115 	stw	r2,4(sp)
    1e58:	01c00084 	movi	r7,2
    1e5c:	980d883a 	mov	r6,r19
    1e60:	d8c03c15 	stw	r3,240(sp)
    1e64:	da003d15 	stw	r8,244(sp)
    1e68:	0002d6c0 	call	2d6c <_dtoa_r>
    1e6c:	1021883a 	mov	r16,r2
    1e70:	008019c4 	movi	r2,103
    1e74:	d8c03c17 	ldw	r3,240(sp)
    1e78:	da003d17 	ldw	r8,244(sp)
    1e7c:	88817126 	beq	r17,r2,2444 <___vfprintf_internal_r+0x1cfc>
    1e80:	008011c4 	movi	r2,71
    1e84:	88829226 	beq	r17,r2,28d0 <___vfprintf_internal_r+0x2188>
    1e88:	80f9883a 	add	fp,r16,r3
    1e8c:	d9003617 	ldw	r4,216(sp)
    1e90:	000d883a 	mov	r6,zero
    1e94:	000f883a 	mov	r7,zero
    1e98:	980b883a 	mov	r5,r19
    1e9c:	da003d15 	stw	r8,244(sp)
    1ea0:	000b8a00 	call	b8a0 <__eqdf2>
    1ea4:	da003d17 	ldw	r8,244(sp)
    1ea8:	10018d26 	beq	r2,zero,24e0 <___vfprintf_internal_r+0x1d98>
    1eac:	d8802117 	ldw	r2,132(sp)
    1eb0:	1700062e 	bgeu	r2,fp,1ecc <___vfprintf_internal_r+0x1784>
    1eb4:	01000c04 	movi	r4,48
    1eb8:	10c00044 	addi	r3,r2,1
    1ebc:	d8c02115 	stw	r3,132(sp)
    1ec0:	11000005 	stb	r4,0(r2)
    1ec4:	d8802117 	ldw	r2,132(sp)
    1ec8:	173ffb36 	bltu	r2,fp,1eb8 <__alt_data_end+0xfffe1eb8>
    1ecc:	1405c83a 	sub	r2,r2,r16
    1ed0:	d8803315 	stw	r2,204(sp)
    1ed4:	008011c4 	movi	r2,71
    1ed8:	b0817626 	beq	r22,r2,24b4 <___vfprintf_internal_r+0x1d6c>
    1edc:	00801944 	movi	r2,101
    1ee0:	1442810e 	bge	r2,r17,28e8 <___vfprintf_internal_r+0x21a0>
    1ee4:	d8c02617 	ldw	r3,152(sp)
    1ee8:	00801984 	movi	r2,102
    1eec:	d8c03215 	stw	r3,200(sp)
    1ef0:	8881fe26 	beq	r17,r2,26ec <___vfprintf_internal_r+0x1fa4>
    1ef4:	d8c03217 	ldw	r3,200(sp)
    1ef8:	d9003317 	ldw	r4,204(sp)
    1efc:	1901dd16 	blt	r3,r4,2674 <___vfprintf_internal_r+0x1f2c>
    1f00:	9480004c 	andi	r18,r18,1
    1f04:	90022b1e 	bne	r18,zero,27b4 <___vfprintf_internal_r+0x206c>
    1f08:	1805883a 	mov	r2,r3
    1f0c:	18028016 	blt	r3,zero,2910 <___vfprintf_internal_r+0x21c8>
    1f10:	d8c03217 	ldw	r3,200(sp)
    1f14:	044019c4 	movi	r17,103
    1f18:	d8c02e15 	stw	r3,184(sp)
    1f1c:	df002a07 	ldb	fp,168(sp)
    1f20:	e001531e 	bne	fp,zero,2470 <___vfprintf_internal_r+0x1d28>
    1f24:	df002783 	ldbu	fp,158(sp)
    1f28:	d8802a15 	stw	r2,168(sp)
    1f2c:	dc802b17 	ldw	r18,172(sp)
    1f30:	d8002915 	stw	zero,164(sp)
    1f34:	003bd106 	br	e7c <__alt_data_end+0xfffe0e7c>
    1f38:	d8802d17 	ldw	r2,180(sp)
    1f3c:	d8c02d17 	ldw	r3,180(sp)
    1f40:	d9002d17 	ldw	r4,180(sp)
    1f44:	10800017 	ldw	r2,0(r2)
    1f48:	18c00117 	ldw	r3,4(r3)
    1f4c:	21000204 	addi	r4,r4,8
    1f50:	d8803615 	stw	r2,216(sp)
    1f54:	d8c03815 	stw	r3,224(sp)
    1f58:	d9002d15 	stw	r4,180(sp)
    1f5c:	003b7506 	br	d34 <__alt_data_end+0xfffe0d34>
    1f60:	ac400007 	ldb	r17,0(r21)
    1f64:	003a5906 	br	8cc <__alt_data_end+0xfffe08cc>
    1f68:	9080100c 	andi	r2,r18,64
    1f6c:	1000a826 	beq	r2,zero,2210 <___vfprintf_internal_r+0x1ac8>
    1f70:	d9002d17 	ldw	r4,180(sp)
    1f74:	002d883a 	mov	r22,zero
    1f78:	24c0000b 	ldhu	r19,0(r4)
    1f7c:	21000104 	addi	r4,r4,4
    1f80:	d9002d15 	stw	r4,180(sp)
    1f84:	003ccb06 	br	12b4 <__alt_data_end+0xfffe12b4>
    1f88:	d8c02d17 	ldw	r3,180(sp)
    1f8c:	d9002917 	ldw	r4,164(sp)
    1f90:	002d883a 	mov	r22,zero
    1f94:	18800104 	addi	r2,r3,4
    1f98:	1cc00017 	ldw	r19,0(r3)
    1f9c:	203ebb0e 	bge	r4,zero,1a8c <__alt_data_end+0xfffe1a8c>
    1fa0:	003ef106 	br	1b68 <__alt_data_end+0xfffe1b68>
    1fa4:	9080040c 	andi	r2,r18,16
    1fa8:	1000921e 	bne	r2,zero,21f4 <___vfprintf_internal_r+0x1aac>
    1fac:	9480100c 	andi	r18,r18,64
    1fb0:	90013926 	beq	r18,zero,2498 <___vfprintf_internal_r+0x1d50>
    1fb4:	d9002d17 	ldw	r4,180(sp)
    1fb8:	d9402f17 	ldw	r5,188(sp)
    1fbc:	20800017 	ldw	r2,0(r4)
    1fc0:	21000104 	addi	r4,r4,4
    1fc4:	d9002d15 	stw	r4,180(sp)
    1fc8:	1140000d 	sth	r5,0(r2)
    1fcc:	003a1606 	br	828 <__alt_data_end+0xfffe0828>
    1fd0:	9080100c 	andi	r2,r18,64
    1fd4:	10008026 	beq	r2,zero,21d8 <___vfprintf_internal_r+0x1a90>
    1fd8:	d8c02d17 	ldw	r3,180(sp)
    1fdc:	1cc0000f 	ldh	r19,0(r3)
    1fe0:	18c00104 	addi	r3,r3,4
    1fe4:	d8c02d15 	stw	r3,180(sp)
    1fe8:	982dd7fa 	srai	r22,r19,31
    1fec:	b005883a 	mov	r2,r22
    1ff0:	003b1f06 	br	c70 <__alt_data_end+0xfffe0c70>
    1ff4:	9080100c 	andi	r2,r18,64
    1ff8:	d8002785 	stb	zero,158(sp)
    1ffc:	10008a1e 	bne	r2,zero,2228 <___vfprintf_internal_r+0x1ae0>
    2000:	d9402d17 	ldw	r5,180(sp)
    2004:	d8c02917 	ldw	r3,164(sp)
    2008:	002d883a 	mov	r22,zero
    200c:	28800104 	addi	r2,r5,4
    2010:	2cc00017 	ldw	r19,0(r5)
    2014:	183e4b0e 	bge	r3,zero,1944 <__alt_data_end+0xfffe1944>
    2018:	9d86b03a 	or	r3,r19,r22
    201c:	d8802d15 	stw	r2,180(sp)
    2020:	183e4c1e 	bne	r3,zero,1954 <__alt_data_end+0xfffe1954>
    2024:	0039883a 	mov	fp,zero
    2028:	0005883a 	mov	r2,zero
    202c:	003d4006 	br	1530 <__alt_data_end+0xfffe1530>
    2030:	01400074 	movhi	r5,1
    2034:	297d4884 	addi	r5,r5,-2782
    2038:	d9402b15 	stw	r5,172(sp)
    203c:	d9402b17 	ldw	r5,172(sp)
    2040:	1c47883a 	add	r3,r3,r17
    2044:	10800044 	addi	r2,r2,1
    2048:	41400015 	stw	r5,0(r8)
    204c:	44400115 	stw	r17,4(r8)
    2050:	d8c02015 	stw	r3,128(sp)
    2054:	d8801f15 	stw	r2,124(sp)
    2058:	010001c4 	movi	r4,7
    205c:	20bec816 	blt	r4,r2,1b80 <__alt_data_end+0xfffe1b80>
    2060:	42000204 	addi	r8,r8,8
    2064:	003ecd06 	br	1b9c <__alt_data_end+0xfffe1b9c>
    2068:	d9002917 	ldw	r4,164(sp)
    206c:	d8002785 	stb	zero,158(sp)
    2070:	203d2d16 	blt	r4,zero,1528 <__alt_data_end+0xfffe1528>
    2074:	00bfdfc4 	movi	r2,-129
    2078:	90a4703a 	and	r18,r18,r2
    207c:	003a9106 	br	ac4 <__alt_data_end+0xfffe0ac4>
    2080:	01000074 	movhi	r4,1
    2084:	213d4884 	addi	r4,r4,-2782
    2088:	d9002b15 	stw	r4,172(sp)
    208c:	003c0c06 	br	10c0 <__alt_data_end+0xfffe10c0>
    2090:	d9002c17 	ldw	r4,176(sp)
    2094:	d9801e04 	addi	r6,sp,120
    2098:	b80b883a 	mov	r5,r23
    209c:	00072600 	call	7260 <__sprint_r>
    20a0:	103aab1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    20a4:	d8c02017 	ldw	r3,128(sp)
    20a8:	da000404 	addi	r8,sp,16
    20ac:	003d4106 	br	15b4 <__alt_data_end+0xfffe15b4>
    20b0:	d8801f17 	ldw	r2,124(sp)
    20b4:	01400074 	movhi	r5,1
    20b8:	01000044 	movi	r4,1
    20bc:	18c00044 	addi	r3,r3,1
    20c0:	10800044 	addi	r2,r2,1
    20c4:	297d4804 	addi	r5,r5,-2784
    20c8:	41000115 	stw	r4,4(r8)
    20cc:	41400015 	stw	r5,0(r8)
    20d0:	d8c02015 	stw	r3,128(sp)
    20d4:	d8801f15 	stw	r2,124(sp)
    20d8:	010001c4 	movi	r4,7
    20dc:	20805c16 	blt	r4,r2,2250 <___vfprintf_internal_r+0x1b08>
    20e0:	42000204 	addi	r8,r8,8
    20e4:	8800041e 	bne	r17,zero,20f8 <___vfprintf_internal_r+0x19b0>
    20e8:	d8803317 	ldw	r2,204(sp)
    20ec:	1000021e 	bne	r2,zero,20f8 <___vfprintf_internal_r+0x19b0>
    20f0:	9080004c 	andi	r2,r18,1
    20f4:	103c0926 	beq	r2,zero,111c <__alt_data_end+0xfffe111c>
    20f8:	d9003717 	ldw	r4,220(sp)
    20fc:	d8801f17 	ldw	r2,124(sp)
    2100:	d9403417 	ldw	r5,208(sp)
    2104:	20c7883a 	add	r3,r4,r3
    2108:	10800044 	addi	r2,r2,1
    210c:	41000115 	stw	r4,4(r8)
    2110:	41400015 	stw	r5,0(r8)
    2114:	d8c02015 	stw	r3,128(sp)
    2118:	d8801f15 	stw	r2,124(sp)
    211c:	010001c4 	movi	r4,7
    2120:	20812116 	blt	r4,r2,25a8 <___vfprintf_internal_r+0x1e60>
    2124:	42000204 	addi	r8,r8,8
    2128:	0463c83a 	sub	r17,zero,r17
    212c:	0440730e 	bge	zero,r17,22fc <___vfprintf_internal_r+0x1bb4>
    2130:	05800404 	movi	r22,16
    2134:	b440860e 	bge	r22,r17,2350 <___vfprintf_internal_r+0x1c08>
    2138:	01400074 	movhi	r5,1
    213c:	297d4884 	addi	r5,r5,-2782
    2140:	d9402b15 	stw	r5,172(sp)
    2144:	070001c4 	movi	fp,7
    2148:	dcc02c17 	ldw	r19,176(sp)
    214c:	00000306 	br	215c <___vfprintf_internal_r+0x1a14>
    2150:	42000204 	addi	r8,r8,8
    2154:	8c7ffc04 	addi	r17,r17,-16
    2158:	b440800e 	bge	r22,r17,235c <___vfprintf_internal_r+0x1c14>
    215c:	18c00404 	addi	r3,r3,16
    2160:	10800044 	addi	r2,r2,1
    2164:	45000015 	stw	r20,0(r8)
    2168:	45800115 	stw	r22,4(r8)
    216c:	d8c02015 	stw	r3,128(sp)
    2170:	d8801f15 	stw	r2,124(sp)
    2174:	e0bff60e 	bge	fp,r2,2150 <__alt_data_end+0xfffe2150>
    2178:	d9801e04 	addi	r6,sp,120
    217c:	b80b883a 	mov	r5,r23
    2180:	9809883a 	mov	r4,r19
    2184:	00072600 	call	7260 <__sprint_r>
    2188:	103a711e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    218c:	d8c02017 	ldw	r3,128(sp)
    2190:	d8801f17 	ldw	r2,124(sp)
    2194:	da000404 	addi	r8,sp,16
    2198:	003fee06 	br	2154 <__alt_data_end+0xfffe2154>
    219c:	00bfffc4 	movi	r2,-1
    21a0:	003a6f06 	br	b60 <__alt_data_end+0xfffe0b60>
    21a4:	008011c4 	movi	r2,71
    21a8:	1440b816 	blt	r2,r17,248c <___vfprintf_internal_r+0x1d44>
    21ac:	04000074 	movhi	r16,1
    21b0:	843d3a04 	addi	r16,r16,-2840
    21b4:	00c000c4 	movi	r3,3
    21b8:	00bfdfc4 	movi	r2,-129
    21bc:	d8c02a15 	stw	r3,168(sp)
    21c0:	90a4703a 	and	r18,r18,r2
    21c4:	df002783 	ldbu	fp,158(sp)
    21c8:	d8c02e15 	stw	r3,184(sp)
    21cc:	d8002915 	stw	zero,164(sp)
    21d0:	d8003215 	stw	zero,200(sp)
    21d4:	003b2906 	br	e7c <__alt_data_end+0xfffe0e7c>
    21d8:	d9002d17 	ldw	r4,180(sp)
    21dc:	24c00017 	ldw	r19,0(r4)
    21e0:	21000104 	addi	r4,r4,4
    21e4:	d9002d15 	stw	r4,180(sp)
    21e8:	982dd7fa 	srai	r22,r19,31
    21ec:	b005883a 	mov	r2,r22
    21f0:	003a9f06 	br	c70 <__alt_data_end+0xfffe0c70>
    21f4:	d9402d17 	ldw	r5,180(sp)
    21f8:	d8c02f17 	ldw	r3,188(sp)
    21fc:	28800017 	ldw	r2,0(r5)
    2200:	29400104 	addi	r5,r5,4
    2204:	d9402d15 	stw	r5,180(sp)
    2208:	10c00015 	stw	r3,0(r2)
    220c:	00398606 	br	828 <__alt_data_end+0xfffe0828>
    2210:	d9402d17 	ldw	r5,180(sp)
    2214:	002d883a 	mov	r22,zero
    2218:	2cc00017 	ldw	r19,0(r5)
    221c:	29400104 	addi	r5,r5,4
    2220:	d9402d15 	stw	r5,180(sp)
    2224:	003c2306 	br	12b4 <__alt_data_end+0xfffe12b4>
    2228:	d8c02d17 	ldw	r3,180(sp)
    222c:	d9002917 	ldw	r4,164(sp)
    2230:	002d883a 	mov	r22,zero
    2234:	18800104 	addi	r2,r3,4
    2238:	1cc0000b 	ldhu	r19,0(r3)
    223c:	203dc10e 	bge	r4,zero,1944 <__alt_data_end+0xfffe1944>
    2240:	003f7506 	br	2018 <__alt_data_end+0xfffe2018>
    2244:	04000074 	movhi	r16,1
    2248:	843d3804 	addi	r16,r16,-2848
    224c:	003acc06 	br	d80 <__alt_data_end+0xfffe0d80>
    2250:	d9002c17 	ldw	r4,176(sp)
    2254:	d9801e04 	addi	r6,sp,120
    2258:	b80b883a 	mov	r5,r23
    225c:	00072600 	call	7260 <__sprint_r>
    2260:	103a3b1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    2264:	dc402617 	ldw	r17,152(sp)
    2268:	d8c02017 	ldw	r3,128(sp)
    226c:	da000404 	addi	r8,sp,16
    2270:	003f9c06 	br	20e4 <__alt_data_end+0xfffe20e4>
    2274:	ac400043 	ldbu	r17,1(r21)
    2278:	94800814 	ori	r18,r18,32
    227c:	ad400044 	addi	r21,r21,1
    2280:	8c403fcc 	andi	r17,r17,255
    2284:	8c40201c 	xori	r17,r17,128
    2288:	8c7fe004 	addi	r17,r17,-128
    228c:	00398f06 	br	8cc <__alt_data_end+0xfffe08cc>
    2290:	d8c02d15 	stw	r3,180(sp)
    2294:	0039883a 	mov	fp,zero
    2298:	003e3506 	br	1b70 <__alt_data_end+0xfffe1b70>
    229c:	d9002c17 	ldw	r4,176(sp)
    22a0:	d9801e04 	addi	r6,sp,120
    22a4:	b80b883a 	mov	r5,r23
    22a8:	00072600 	call	7260 <__sprint_r>
    22ac:	103a281e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    22b0:	d8c02017 	ldw	r3,128(sp)
    22b4:	da000404 	addi	r8,sp,16
    22b8:	003cd006 	br	15fc <__alt_data_end+0xfffe15fc>
    22bc:	8009883a 	mov	r4,r16
    22c0:	da003d15 	stw	r8,244(sp)
    22c4:	00070cc0 	call	70cc <strlen>
    22c8:	d8802e15 	stw	r2,184(sp)
    22cc:	da003d17 	ldw	r8,244(sp)
    22d0:	103c340e 	bge	r2,zero,13a4 <__alt_data_end+0xfffe13a4>
    22d4:	0005883a 	mov	r2,zero
    22d8:	003c3206 	br	13a4 <__alt_data_end+0xfffe13a4>
    22dc:	d9002c17 	ldw	r4,176(sp)
    22e0:	d9801e04 	addi	r6,sp,120
    22e4:	b80b883a 	mov	r5,r23
    22e8:	00072600 	call	7260 <__sprint_r>
    22ec:	103a181e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    22f0:	d8c02017 	ldw	r3,128(sp)
    22f4:	d8801f17 	ldw	r2,124(sp)
    22f8:	da000404 	addi	r8,sp,16
    22fc:	d9403317 	ldw	r5,204(sp)
    2300:	10800044 	addi	r2,r2,1
    2304:	44000015 	stw	r16,0(r8)
    2308:	28c7883a 	add	r3,r5,r3
    230c:	003b7d06 	br	1104 <__alt_data_end+0xfffe1104>
    2310:	01000074 	movhi	r4,1
    2314:	213d4c84 	addi	r4,r4,-2766
    2318:	d9003515 	stw	r4,212(sp)
    231c:	003b1406 	br	f70 <__alt_data_end+0xfffe0f70>
    2320:	013fffc4 	movi	r4,-1
    2324:	003a3506 	br	bfc <__alt_data_end+0xfffe0bfc>
    2328:	0023883a 	mov	r17,zero
    232c:	003d9d06 	br	19a4 <__alt_data_end+0xfffe19a4>
    2330:	d9002c17 	ldw	r4,176(sp)
    2334:	d9801e04 	addi	r6,sp,120
    2338:	b80b883a 	mov	r5,r23
    233c:	00072600 	call	7260 <__sprint_r>
    2340:	103a031e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    2344:	d8c02017 	ldw	r3,128(sp)
    2348:	da000404 	addi	r8,sp,16
    234c:	003d9406 	br	19a0 <__alt_data_end+0xfffe19a0>
    2350:	01000074 	movhi	r4,1
    2354:	213d4884 	addi	r4,r4,-2782
    2358:	d9002b15 	stw	r4,172(sp)
    235c:	d9002b17 	ldw	r4,172(sp)
    2360:	1c47883a 	add	r3,r3,r17
    2364:	10800044 	addi	r2,r2,1
    2368:	41000015 	stw	r4,0(r8)
    236c:	44400115 	stw	r17,4(r8)
    2370:	d8c02015 	stw	r3,128(sp)
    2374:	d8801f15 	stw	r2,124(sp)
    2378:	010001c4 	movi	r4,7
    237c:	20bfd716 	blt	r4,r2,22dc <__alt_data_end+0xfffe22dc>
    2380:	42000204 	addi	r8,r8,8
    2384:	003fdd06 	br	22fc <__alt_data_end+0xfffe22fc>
    2388:	d9002c17 	ldw	r4,176(sp)
    238c:	d9801e04 	addi	r6,sp,120
    2390:	b80b883a 	mov	r5,r23
    2394:	00072600 	call	7260 <__sprint_r>
    2398:	1039ed1e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    239c:	d8802617 	ldw	r2,152(sp)
    23a0:	d8c02017 	ldw	r3,128(sp)
    23a4:	da000404 	addi	r8,sp,16
    23a8:	003e1006 	br	1bec <__alt_data_end+0xfffe1bec>
    23ac:	00800044 	movi	r2,1
    23b0:	10803fcc 	andi	r2,r2,255
    23b4:	00c00044 	movi	r3,1
    23b8:	10fa3526 	beq	r2,r3,c90 <__alt_data_end+0xfffe0c90>
    23bc:	00c00084 	movi	r3,2
    23c0:	10fbcb26 	beq	r2,r3,12f0 <__alt_data_end+0xfffe12f0>
    23c4:	003a8f06 	br	e04 <__alt_data_end+0xfffe0e04>
    23c8:	01000074 	movhi	r4,1
    23cc:	213d4c84 	addi	r4,r4,-2766
    23d0:	d9003515 	stw	r4,212(sp)
    23d4:	003b7606 	br	11b0 <__alt_data_end+0xfffe11b0>
    23d8:	d8802917 	ldw	r2,164(sp)
    23dc:	00c00184 	movi	r3,6
    23e0:	1880012e 	bgeu	r3,r2,23e8 <___vfprintf_internal_r+0x1ca0>
    23e4:	1805883a 	mov	r2,r3
    23e8:	d8802e15 	stw	r2,184(sp)
    23ec:	1000ef16 	blt	r2,zero,27ac <___vfprintf_internal_r+0x2064>
    23f0:	04000074 	movhi	r16,1
    23f4:	d8802a15 	stw	r2,168(sp)
    23f8:	dcc02d15 	stw	r19,180(sp)
    23fc:	d8002915 	stw	zero,164(sp)
    2400:	d8003215 	stw	zero,200(sp)
    2404:	843d4604 	addi	r16,r16,-2792
    2408:	0039883a 	mov	fp,zero
    240c:	003aa206 	br	e98 <__alt_data_end+0xfffe0e98>
    2410:	0021883a 	mov	r16,zero
    2414:	003e0706 	br	1c34 <__alt_data_end+0xfffe1c34>
    2418:	d9002c17 	ldw	r4,176(sp)
    241c:	d9801e04 	addi	r6,sp,120
    2420:	b80b883a 	mov	r5,r23
    2424:	00072600 	call	7260 <__sprint_r>
    2428:	1039c91e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    242c:	d8802617 	ldw	r2,152(sp)
    2430:	d9403317 	ldw	r5,204(sp)
    2434:	d8c02017 	ldw	r3,128(sp)
    2438:	da000404 	addi	r8,sp,16
    243c:	2885c83a 	sub	r2,r5,r2
    2440:	003dfb06 	br	1c30 <__alt_data_end+0xfffe1c30>
    2444:	9080004c 	andi	r2,r18,1
    2448:	103e8f1e 	bne	r2,zero,1e88 <__alt_data_end+0xfffe1e88>
    244c:	d8802117 	ldw	r2,132(sp)
    2450:	003e9e06 	br	1ecc <__alt_data_end+0xfffe1ecc>
    2454:	1025883a 	mov	r18,r2
    2458:	0039883a 	mov	fp,zero
    245c:	00800084 	movi	r2,2
    2460:	003fd306 	br	23b0 <__alt_data_end+0xfffe23b0>
    2464:	07000b44 	movi	fp,45
    2468:	df002785 	stb	fp,158(sp)
    246c:	003a4006 	br	d70 <__alt_data_end+0xfffe0d70>
    2470:	00c00b44 	movi	r3,45
    2474:	d8c02785 	stb	r3,158(sp)
    2478:	d8802a15 	stw	r2,168(sp)
    247c:	dc802b17 	ldw	r18,172(sp)
    2480:	d8002915 	stw	zero,164(sp)
    2484:	07000b44 	movi	fp,45
    2488:	003a8006 	br	e8c <__alt_data_end+0xfffe0e8c>
    248c:	04000074 	movhi	r16,1
    2490:	843d3b04 	addi	r16,r16,-2836
    2494:	003f4706 	br	21b4 <__alt_data_end+0xfffe21b4>
    2498:	d8c02d17 	ldw	r3,180(sp)
    249c:	d9002f17 	ldw	r4,188(sp)
    24a0:	18800017 	ldw	r2,0(r3)
    24a4:	18c00104 	addi	r3,r3,4
    24a8:	d8c02d15 	stw	r3,180(sp)
    24ac:	11000015 	stw	r4,0(r2)
    24b0:	0038dd06 	br	828 <__alt_data_end+0xfffe0828>
    24b4:	dd802617 	ldw	r22,152(sp)
    24b8:	00bfff44 	movi	r2,-3
    24bc:	b0801c16 	blt	r22,r2,2530 <___vfprintf_internal_r+0x1de8>
    24c0:	d9402917 	ldw	r5,164(sp)
    24c4:	2d801a16 	blt	r5,r22,2530 <___vfprintf_internal_r+0x1de8>
    24c8:	dd803215 	stw	r22,200(sp)
    24cc:	003e8906 	br	1ef4 <__alt_data_end+0xfffe1ef4>
    24d0:	01000074 	movhi	r4,1
    24d4:	213d4884 	addi	r4,r4,-2782
    24d8:	d9002b15 	stw	r4,172(sp)
    24dc:	003c9106 	br	1724 <__alt_data_end+0xfffe1724>
    24e0:	e005883a 	mov	r2,fp
    24e4:	003e7906 	br	1ecc <__alt_data_end+0xfffe1ecc>
    24e8:	d9402917 	ldw	r5,164(sp)
    24ec:	df002783 	ldbu	fp,158(sp)
    24f0:	dcc02d15 	stw	r19,180(sp)
    24f4:	d9402a15 	stw	r5,168(sp)
    24f8:	d9402e15 	stw	r5,184(sp)
    24fc:	d8002915 	stw	zero,164(sp)
    2500:	d8003215 	stw	zero,200(sp)
    2504:	003a5d06 	br	e7c <__alt_data_end+0xfffe0e7c>
    2508:	9080004c 	andi	r2,r18,1
    250c:	0039883a 	mov	fp,zero
    2510:	10000426 	beq	r2,zero,2524 <___vfprintf_internal_r+0x1ddc>
    2514:	00800c04 	movi	r2,48
    2518:	dc001dc4 	addi	r16,sp,119
    251c:	d8801dc5 	stb	r2,119(sp)
    2520:	003b8006 	br	1324 <__alt_data_end+0xfffe1324>
    2524:	d8002e15 	stw	zero,184(sp)
    2528:	dc001e04 	addi	r16,sp,120
    252c:	003a4d06 	br	e64 <__alt_data_end+0xfffe0e64>
    2530:	8c7fff84 	addi	r17,r17,-2
    2534:	b5bfffc4 	addi	r22,r22,-1
    2538:	dd802615 	stw	r22,152(sp)
    253c:	dc4022c5 	stb	r17,139(sp)
    2540:	b000bf16 	blt	r22,zero,2840 <___vfprintf_internal_r+0x20f8>
    2544:	00800ac4 	movi	r2,43
    2548:	d8802305 	stb	r2,140(sp)
    254c:	00800244 	movi	r2,9
    2550:	15807016 	blt	r2,r22,2714 <___vfprintf_internal_r+0x1fcc>
    2554:	00800c04 	movi	r2,48
    2558:	b5800c04 	addi	r22,r22,48
    255c:	d8802345 	stb	r2,141(sp)
    2560:	dd802385 	stb	r22,142(sp)
    2564:	d88023c4 	addi	r2,sp,143
    2568:	df0022c4 	addi	fp,sp,139
    256c:	d8c03317 	ldw	r3,204(sp)
    2570:	1739c83a 	sub	fp,r2,fp
    2574:	d9003317 	ldw	r4,204(sp)
    2578:	e0c7883a 	add	r3,fp,r3
    257c:	df003a15 	stw	fp,232(sp)
    2580:	d8c02e15 	stw	r3,184(sp)
    2584:	00800044 	movi	r2,1
    2588:	1100b30e 	bge	r2,r4,2858 <___vfprintf_internal_r+0x2110>
    258c:	d8c02e17 	ldw	r3,184(sp)
    2590:	18c00044 	addi	r3,r3,1
    2594:	d8c02e15 	stw	r3,184(sp)
    2598:	1805883a 	mov	r2,r3
    259c:	1800ac16 	blt	r3,zero,2850 <___vfprintf_internal_r+0x2108>
    25a0:	d8003215 	stw	zero,200(sp)
    25a4:	003e5d06 	br	1f1c <__alt_data_end+0xfffe1f1c>
    25a8:	d9002c17 	ldw	r4,176(sp)
    25ac:	d9801e04 	addi	r6,sp,120
    25b0:	b80b883a 	mov	r5,r23
    25b4:	00072600 	call	7260 <__sprint_r>
    25b8:	1039651e 	bne	r2,zero,b50 <__alt_data_end+0xfffe0b50>
    25bc:	dc402617 	ldw	r17,152(sp)
    25c0:	d8c02017 	ldw	r3,128(sp)
    25c4:	d8801f17 	ldw	r2,124(sp)
    25c8:	da000404 	addi	r8,sp,16
    25cc:	003ed606 	br	2128 <__alt_data_end+0xfffe2128>
    25d0:	582b883a 	mov	r21,r11
    25d4:	d8002915 	stw	zero,164(sp)
    25d8:	0038bd06 	br	8d0 <__alt_data_end+0xfffe08d0>
    25dc:	d8802917 	ldw	r2,164(sp)
    25e0:	103e071e 	bne	r2,zero,1e00 <__alt_data_end+0xfffe1e00>
    25e4:	dc002915 	stw	r16,164(sp)
    25e8:	003e0506 	br	1e00 <__alt_data_end+0xfffe1e00>
    25ec:	d9002917 	ldw	r4,164(sp)
    25f0:	20c00044 	addi	r3,r4,1
    25f4:	003e0f06 	br	1e34 <__alt_data_end+0xfffe1e34>
    25f8:	01400184 	movi	r5,6
    25fc:	d9402915 	stw	r5,164(sp)
    2600:	003dff06 	br	1e00 <__alt_data_end+0xfffe1e00>
    2604:	d8802104 	addi	r2,sp,132
    2608:	d8800315 	stw	r2,12(sp)
    260c:	d8802504 	addi	r2,sp,148
    2610:	d8800215 	stw	r2,8(sp)
    2614:	d8802604 	addi	r2,sp,152
    2618:	d8800115 	stw	r2,4(sp)
    261c:	d8802917 	ldw	r2,164(sp)
    2620:	d9403617 	ldw	r5,216(sp)
    2624:	d9002c17 	ldw	r4,176(sp)
    2628:	d8800015 	stw	r2,0(sp)
    262c:	01c000c4 	movi	r7,3
    2630:	980d883a 	mov	r6,r19
    2634:	da003d15 	stw	r8,244(sp)
    2638:	0002d6c0 	call	2d6c <_dtoa_r>
    263c:	d8c02917 	ldw	r3,164(sp)
    2640:	da003d17 	ldw	r8,244(sp)
    2644:	1021883a 	mov	r16,r2
    2648:	10f9883a 	add	fp,r2,r3
    264c:	81000007 	ldb	r4,0(r16)
    2650:	00800c04 	movi	r2,48
    2654:	20805e26 	beq	r4,r2,27d0 <___vfprintf_internal_r+0x2088>
    2658:	d8c02617 	ldw	r3,152(sp)
    265c:	e0f9883a 	add	fp,fp,r3
    2660:	003e0a06 	br	1e8c <__alt_data_end+0xfffe1e8c>
    2664:	00c00b44 	movi	r3,45
    2668:	24e0003c 	xorhi	r19,r4,32768
    266c:	d8c02a05 	stb	r3,168(sp)
    2670:	003de906 	br	1e18 <__alt_data_end+0xfffe1e18>
    2674:	d8c03217 	ldw	r3,200(sp)
    2678:	00c07a0e 	bge	zero,r3,2864 <___vfprintf_internal_r+0x211c>
    267c:	00800044 	movi	r2,1
    2680:	d9003317 	ldw	r4,204(sp)
    2684:	1105883a 	add	r2,r2,r4
    2688:	d8802e15 	stw	r2,184(sp)
    268c:	10004e16 	blt	r2,zero,27c8 <___vfprintf_internal_r+0x2080>
    2690:	044019c4 	movi	r17,103
    2694:	003e2106 	br	1f1c <__alt_data_end+0xfffe1f1c>
    2698:	d9002917 	ldw	r4,164(sp)
    269c:	d8802104 	addi	r2,sp,132
    26a0:	d8800315 	stw	r2,12(sp)
    26a4:	d9000015 	stw	r4,0(sp)
    26a8:	d8802504 	addi	r2,sp,148
    26ac:	d9403617 	ldw	r5,216(sp)
    26b0:	d9002c17 	ldw	r4,176(sp)
    26b4:	d8800215 	stw	r2,8(sp)
    26b8:	d8802604 	addi	r2,sp,152
    26bc:	d8800115 	stw	r2,4(sp)
    26c0:	01c000c4 	movi	r7,3
    26c4:	980d883a 	mov	r6,r19
    26c8:	da003d15 	stw	r8,244(sp)
    26cc:	0002d6c0 	call	2d6c <_dtoa_r>
    26d0:	d8c02917 	ldw	r3,164(sp)
    26d4:	da003d17 	ldw	r8,244(sp)
    26d8:	1021883a 	mov	r16,r2
    26dc:	00801184 	movi	r2,70
    26e0:	80f9883a 	add	fp,r16,r3
    26e4:	88bfd926 	beq	r17,r2,264c <__alt_data_end+0xfffe264c>
    26e8:	003de806 	br	1e8c <__alt_data_end+0xfffe1e8c>
    26ec:	d9002917 	ldw	r4,164(sp)
    26f0:	00c04d0e 	bge	zero,r3,2828 <___vfprintf_internal_r+0x20e0>
    26f4:	2000441e 	bne	r4,zero,2808 <___vfprintf_internal_r+0x20c0>
    26f8:	9480004c 	andi	r18,r18,1
    26fc:	9000421e 	bne	r18,zero,2808 <___vfprintf_internal_r+0x20c0>
    2700:	1805883a 	mov	r2,r3
    2704:	18007016 	blt	r3,zero,28c8 <___vfprintf_internal_r+0x2180>
    2708:	d8c03217 	ldw	r3,200(sp)
    270c:	d8c02e15 	stw	r3,184(sp)
    2710:	003e0206 	br	1f1c <__alt_data_end+0xfffe1f1c>
    2714:	df0022c4 	addi	fp,sp,139
    2718:	dc002915 	stw	r16,164(sp)
    271c:	4027883a 	mov	r19,r8
    2720:	e021883a 	mov	r16,fp
    2724:	b009883a 	mov	r4,r22
    2728:	01400284 	movi	r5,10
    272c:	00005ac0 	call	5ac <__modsi3>
    2730:	10800c04 	addi	r2,r2,48
    2734:	843fffc4 	addi	r16,r16,-1
    2738:	b009883a 	mov	r4,r22
    273c:	01400284 	movi	r5,10
    2740:	80800005 	stb	r2,0(r16)
    2744:	00005280 	call	528 <__divsi3>
    2748:	102d883a 	mov	r22,r2
    274c:	00800244 	movi	r2,9
    2750:	15bff416 	blt	r2,r22,2724 <__alt_data_end+0xfffe2724>
    2754:	9811883a 	mov	r8,r19
    2758:	b0800c04 	addi	r2,r22,48
    275c:	8027883a 	mov	r19,r16
    2760:	997fffc4 	addi	r5,r19,-1
    2764:	98bfffc5 	stb	r2,-1(r19)
    2768:	dc002917 	ldw	r16,164(sp)
    276c:	2f006a2e 	bgeu	r5,fp,2918 <___vfprintf_internal_r+0x21d0>
    2770:	d9c02384 	addi	r7,sp,142
    2774:	3ccfc83a 	sub	r7,r7,r19
    2778:	d9002344 	addi	r4,sp,141
    277c:	e1cf883a 	add	r7,fp,r7
    2780:	00000106 	br	2788 <___vfprintf_internal_r+0x2040>
    2784:	28800003 	ldbu	r2,0(r5)
    2788:	20800005 	stb	r2,0(r4)
    278c:	21000044 	addi	r4,r4,1
    2790:	29400044 	addi	r5,r5,1
    2794:	393ffb1e 	bne	r7,r4,2784 <__alt_data_end+0xfffe2784>
    2798:	d8802304 	addi	r2,sp,140
    279c:	14c5c83a 	sub	r2,r2,r19
    27a0:	d8c02344 	addi	r3,sp,141
    27a4:	1885883a 	add	r2,r3,r2
    27a8:	003f7006 	br	256c <__alt_data_end+0xfffe256c>
    27ac:	0005883a 	mov	r2,zero
    27b0:	003f0f06 	br	23f0 <__alt_data_end+0xfffe23f0>
    27b4:	d8c03217 	ldw	r3,200(sp)
    27b8:	18c00044 	addi	r3,r3,1
    27bc:	d8c02e15 	stw	r3,184(sp)
    27c0:	1805883a 	mov	r2,r3
    27c4:	183fb20e 	bge	r3,zero,2690 <__alt_data_end+0xfffe2690>
    27c8:	0005883a 	mov	r2,zero
    27cc:	003fb006 	br	2690 <__alt_data_end+0xfffe2690>
    27d0:	d9003617 	ldw	r4,216(sp)
    27d4:	000d883a 	mov	r6,zero
    27d8:	000f883a 	mov	r7,zero
    27dc:	980b883a 	mov	r5,r19
    27e0:	d8c03c15 	stw	r3,240(sp)
    27e4:	da003d15 	stw	r8,244(sp)
    27e8:	000b8a00 	call	b8a0 <__eqdf2>
    27ec:	d8c03c17 	ldw	r3,240(sp)
    27f0:	da003d17 	ldw	r8,244(sp)
    27f4:	103f9826 	beq	r2,zero,2658 <__alt_data_end+0xfffe2658>
    27f8:	00800044 	movi	r2,1
    27fc:	10c7c83a 	sub	r3,r2,r3
    2800:	d8c02615 	stw	r3,152(sp)
    2804:	003f9506 	br	265c <__alt_data_end+0xfffe265c>
    2808:	d9002917 	ldw	r4,164(sp)
    280c:	d8c03217 	ldw	r3,200(sp)
    2810:	20800044 	addi	r2,r4,1
    2814:	1885883a 	add	r2,r3,r2
    2818:	d8802e15 	stw	r2,184(sp)
    281c:	103dbf0e 	bge	r2,zero,1f1c <__alt_data_end+0xfffe1f1c>
    2820:	0005883a 	mov	r2,zero
    2824:	003dbd06 	br	1f1c <__alt_data_end+0xfffe1f1c>
    2828:	2000211e 	bne	r4,zero,28b0 <___vfprintf_internal_r+0x2168>
    282c:	9480004c 	andi	r18,r18,1
    2830:	90001f1e 	bne	r18,zero,28b0 <___vfprintf_internal_r+0x2168>
    2834:	00800044 	movi	r2,1
    2838:	d8802e15 	stw	r2,184(sp)
    283c:	003db706 	br	1f1c <__alt_data_end+0xfffe1f1c>
    2840:	00800b44 	movi	r2,45
    2844:	05adc83a 	sub	r22,zero,r22
    2848:	d8802305 	stb	r2,140(sp)
    284c:	003f3f06 	br	254c <__alt_data_end+0xfffe254c>
    2850:	0005883a 	mov	r2,zero
    2854:	003f5206 	br	25a0 <__alt_data_end+0xfffe25a0>
    2858:	90a4703a 	and	r18,r18,r2
    285c:	903f4e26 	beq	r18,zero,2598 <__alt_data_end+0xfffe2598>
    2860:	003f4a06 	br	258c <__alt_data_end+0xfffe258c>
    2864:	00800084 	movi	r2,2
    2868:	10c5c83a 	sub	r2,r2,r3
    286c:	003f8406 	br	2680 <__alt_data_end+0xfffe2680>
    2870:	d8802d17 	ldw	r2,180(sp)
    2874:	d9002d17 	ldw	r4,180(sp)
    2878:	ac400043 	ldbu	r17,1(r21)
    287c:	10800017 	ldw	r2,0(r2)
    2880:	582b883a 	mov	r21,r11
    2884:	d8802915 	stw	r2,164(sp)
    2888:	20800104 	addi	r2,r4,4
    288c:	d9002917 	ldw	r4,164(sp)
    2890:	d8802d15 	stw	r2,180(sp)
    2894:	203e7a0e 	bge	r4,zero,2280 <__alt_data_end+0xfffe2280>
    2898:	8c403fcc 	andi	r17,r17,255
    289c:	00bfffc4 	movi	r2,-1
    28a0:	8c40201c 	xori	r17,r17,128
    28a4:	d8802915 	stw	r2,164(sp)
    28a8:	8c7fe004 	addi	r17,r17,-128
    28ac:	00380706 	br	8cc <__alt_data_end+0xfffe08cc>
    28b0:	d8c02917 	ldw	r3,164(sp)
    28b4:	18c00084 	addi	r3,r3,2
    28b8:	d8c02e15 	stw	r3,184(sp)
    28bc:	1805883a 	mov	r2,r3
    28c0:	183d960e 	bge	r3,zero,1f1c <__alt_data_end+0xfffe1f1c>
    28c4:	003fd606 	br	2820 <__alt_data_end+0xfffe2820>
    28c8:	0005883a 	mov	r2,zero
    28cc:	003f8e06 	br	2708 <__alt_data_end+0xfffe2708>
    28d0:	9080004c 	andi	r2,r18,1
    28d4:	103f811e 	bne	r2,zero,26dc <__alt_data_end+0xfffe26dc>
    28d8:	d8802117 	ldw	r2,132(sp)
    28dc:	1405c83a 	sub	r2,r2,r16
    28e0:	d8803315 	stw	r2,204(sp)
    28e4:	b47ef326 	beq	r22,r17,24b4 <__alt_data_end+0xfffe24b4>
    28e8:	dd802617 	ldw	r22,152(sp)
    28ec:	003f1106 	br	2534 <__alt_data_end+0xfffe2534>
    28f0:	d9c02785 	stb	r7,158(sp)
    28f4:	00390406 	br	d08 <__alt_data_end+0xfffe0d08>
    28f8:	d9c02785 	stb	r7,158(sp)
    28fc:	0038d306 	br	c4c <__alt_data_end+0xfffe0c4c>
    2900:	d9c02785 	stb	r7,158(sp)
    2904:	003a6106 	br	128c <__alt_data_end+0xfffe128c>
    2908:	d9c02785 	stb	r7,158(sp)
    290c:	003af806 	br	14f0 <__alt_data_end+0xfffe14f0>
    2910:	0005883a 	mov	r2,zero
    2914:	003d7e06 	br	1f10 <__alt_data_end+0xfffe1f10>
    2918:	d8802344 	addi	r2,sp,141
    291c:	003f1306 	br	256c <__alt_data_end+0xfffe256c>
    2920:	d9c02785 	stb	r7,158(sp)
    2924:	00392306 	br	db4 <__alt_data_end+0xfffe0db4>
    2928:	d9c02785 	stb	r7,158(sp)
    292c:	003aa906 	br	13d4 <__alt_data_end+0xfffe13d4>
    2930:	d9c02785 	stb	r7,158(sp)
    2934:	003a3d06 	br	122c <__alt_data_end+0xfffe122c>
    2938:	d9c02785 	stb	r7,158(sp)
    293c:	003aca06 	br	1468 <__alt_data_end+0xfffe1468>

00002940 <__vfprintf_internal>:
    2940:	00800074 	movhi	r2,1
    2944:	1084a304 	addi	r2,r2,4748
    2948:	300f883a 	mov	r7,r6
    294c:	280d883a 	mov	r6,r5
    2950:	200b883a 	mov	r5,r4
    2954:	11000017 	ldw	r4,0(r2)
    2958:	00007481 	jmpi	748 <___vfprintf_internal_r>

0000295c <__sbprintf>:
    295c:	2880030b 	ldhu	r2,12(r5)
    2960:	2ac01917 	ldw	r11,100(r5)
    2964:	2a80038b 	ldhu	r10,14(r5)
    2968:	2a400717 	ldw	r9,28(r5)
    296c:	2a000917 	ldw	r8,36(r5)
    2970:	defee204 	addi	sp,sp,-1144
    2974:	00c10004 	movi	r3,1024
    2978:	dc011a15 	stw	r16,1128(sp)
    297c:	10bfff4c 	andi	r2,r2,65533
    2980:	2821883a 	mov	r16,r5
    2984:	d8cb883a 	add	r5,sp,r3
    2988:	dc811c15 	stw	r18,1136(sp)
    298c:	dc411b15 	stw	r17,1132(sp)
    2990:	dfc11d15 	stw	ra,1140(sp)
    2994:	2025883a 	mov	r18,r4
    2998:	d881030d 	sth	r2,1036(sp)
    299c:	dac11915 	stw	r11,1124(sp)
    29a0:	da81038d 	sth	r10,1038(sp)
    29a4:	da410715 	stw	r9,1052(sp)
    29a8:	da010915 	stw	r8,1060(sp)
    29ac:	dec10015 	stw	sp,1024(sp)
    29b0:	dec10415 	stw	sp,1040(sp)
    29b4:	d8c10215 	stw	r3,1032(sp)
    29b8:	d8c10515 	stw	r3,1044(sp)
    29bc:	d8010615 	stw	zero,1048(sp)
    29c0:	00007480 	call	748 <___vfprintf_internal_r>
    29c4:	1023883a 	mov	r17,r2
    29c8:	10000416 	blt	r2,zero,29dc <__sbprintf+0x80>
    29cc:	d9410004 	addi	r5,sp,1024
    29d0:	9009883a 	mov	r4,r18
    29d4:	00046100 	call	4610 <_fflush_r>
    29d8:	10000d1e 	bne	r2,zero,2a10 <__sbprintf+0xb4>
    29dc:	d881030b 	ldhu	r2,1036(sp)
    29e0:	1080100c 	andi	r2,r2,64
    29e4:	10000326 	beq	r2,zero,29f4 <__sbprintf+0x98>
    29e8:	8080030b 	ldhu	r2,12(r16)
    29ec:	10801014 	ori	r2,r2,64
    29f0:	8080030d 	sth	r2,12(r16)
    29f4:	8805883a 	mov	r2,r17
    29f8:	dfc11d17 	ldw	ra,1140(sp)
    29fc:	dc811c17 	ldw	r18,1136(sp)
    2a00:	dc411b17 	ldw	r17,1132(sp)
    2a04:	dc011a17 	ldw	r16,1128(sp)
    2a08:	dec11e04 	addi	sp,sp,1144
    2a0c:	f800283a 	ret
    2a10:	047fffc4 	movi	r17,-1
    2a14:	003ff106 	br	29dc <__alt_data_end+0xfffe29dc>

00002a18 <__swsetup_r>:
    2a18:	00800074 	movhi	r2,1
    2a1c:	defffd04 	addi	sp,sp,-12
    2a20:	1084a304 	addi	r2,r2,4748
    2a24:	dc400115 	stw	r17,4(sp)
    2a28:	2023883a 	mov	r17,r4
    2a2c:	11000017 	ldw	r4,0(r2)
    2a30:	dc000015 	stw	r16,0(sp)
    2a34:	dfc00215 	stw	ra,8(sp)
    2a38:	2821883a 	mov	r16,r5
    2a3c:	20000226 	beq	r4,zero,2a48 <__swsetup_r+0x30>
    2a40:	20800e17 	ldw	r2,56(r4)
    2a44:	10003126 	beq	r2,zero,2b0c <__swsetup_r+0xf4>
    2a48:	8080030b 	ldhu	r2,12(r16)
    2a4c:	10c0020c 	andi	r3,r2,8
    2a50:	1009883a 	mov	r4,r2
    2a54:	18000f26 	beq	r3,zero,2a94 <__swsetup_r+0x7c>
    2a58:	80c00417 	ldw	r3,16(r16)
    2a5c:	18001526 	beq	r3,zero,2ab4 <__swsetup_r+0x9c>
    2a60:	1100004c 	andi	r4,r2,1
    2a64:	20001c1e 	bne	r4,zero,2ad8 <__swsetup_r+0xc0>
    2a68:	1080008c 	andi	r2,r2,2
    2a6c:	1000291e 	bne	r2,zero,2b14 <__swsetup_r+0xfc>
    2a70:	80800517 	ldw	r2,20(r16)
    2a74:	80800215 	stw	r2,8(r16)
    2a78:	18001c26 	beq	r3,zero,2aec <__swsetup_r+0xd4>
    2a7c:	0005883a 	mov	r2,zero
    2a80:	dfc00217 	ldw	ra,8(sp)
    2a84:	dc400117 	ldw	r17,4(sp)
    2a88:	dc000017 	ldw	r16,0(sp)
    2a8c:	dec00304 	addi	sp,sp,12
    2a90:	f800283a 	ret
    2a94:	2080040c 	andi	r2,r4,16
    2a98:	10002e26 	beq	r2,zero,2b54 <__swsetup_r+0x13c>
    2a9c:	2080010c 	andi	r2,r4,4
    2aa0:	10001e1e 	bne	r2,zero,2b1c <__swsetup_r+0x104>
    2aa4:	80c00417 	ldw	r3,16(r16)
    2aa8:	20800214 	ori	r2,r4,8
    2aac:	8080030d 	sth	r2,12(r16)
    2ab0:	183feb1e 	bne	r3,zero,2a60 <__alt_data_end+0xfffe2a60>
    2ab4:	1100a00c 	andi	r4,r2,640
    2ab8:	01408004 	movi	r5,512
    2abc:	217fe826 	beq	r4,r5,2a60 <__alt_data_end+0xfffe2a60>
    2ac0:	800b883a 	mov	r5,r16
    2ac4:	8809883a 	mov	r4,r17
    2ac8:	00050d40 	call	50d4 <__smakebuf_r>
    2acc:	8080030b 	ldhu	r2,12(r16)
    2ad0:	80c00417 	ldw	r3,16(r16)
    2ad4:	003fe206 	br	2a60 <__alt_data_end+0xfffe2a60>
    2ad8:	80800517 	ldw	r2,20(r16)
    2adc:	80000215 	stw	zero,8(r16)
    2ae0:	0085c83a 	sub	r2,zero,r2
    2ae4:	80800615 	stw	r2,24(r16)
    2ae8:	183fe41e 	bne	r3,zero,2a7c <__alt_data_end+0xfffe2a7c>
    2aec:	80c0030b 	ldhu	r3,12(r16)
    2af0:	0005883a 	mov	r2,zero
    2af4:	1900200c 	andi	r4,r3,128
    2af8:	203fe126 	beq	r4,zero,2a80 <__alt_data_end+0xfffe2a80>
    2afc:	18c01014 	ori	r3,r3,64
    2b00:	80c0030d 	sth	r3,12(r16)
    2b04:	00bfffc4 	movi	r2,-1
    2b08:	003fdd06 	br	2a80 <__alt_data_end+0xfffe2a80>
    2b0c:	00049ec0 	call	49ec <__sinit>
    2b10:	003fcd06 	br	2a48 <__alt_data_end+0xfffe2a48>
    2b14:	0005883a 	mov	r2,zero
    2b18:	003fd606 	br	2a74 <__alt_data_end+0xfffe2a74>
    2b1c:	81400c17 	ldw	r5,48(r16)
    2b20:	28000626 	beq	r5,zero,2b3c <__swsetup_r+0x124>
    2b24:	80801004 	addi	r2,r16,64
    2b28:	28800326 	beq	r5,r2,2b38 <__swsetup_r+0x120>
    2b2c:	8809883a 	mov	r4,r17
    2b30:	0004b600 	call	4b60 <_free_r>
    2b34:	8100030b 	ldhu	r4,12(r16)
    2b38:	80000c15 	stw	zero,48(r16)
    2b3c:	80c00417 	ldw	r3,16(r16)
    2b40:	00bff6c4 	movi	r2,-37
    2b44:	1108703a 	and	r4,r2,r4
    2b48:	80000115 	stw	zero,4(r16)
    2b4c:	80c00015 	stw	r3,0(r16)
    2b50:	003fd506 	br	2aa8 <__alt_data_end+0xfffe2aa8>
    2b54:	00800244 	movi	r2,9
    2b58:	88800015 	stw	r2,0(r17)
    2b5c:	20801014 	ori	r2,r4,64
    2b60:	8080030d 	sth	r2,12(r16)
    2b64:	00bfffc4 	movi	r2,-1
    2b68:	003fc506 	br	2a80 <__alt_data_end+0xfffe2a80>

00002b6c <quorem>:
    2b6c:	defff704 	addi	sp,sp,-36
    2b70:	dc800215 	stw	r18,8(sp)
    2b74:	20800417 	ldw	r2,16(r4)
    2b78:	2c800417 	ldw	r18,16(r5)
    2b7c:	dfc00815 	stw	ra,32(sp)
    2b80:	ddc00715 	stw	r23,28(sp)
    2b84:	dd800615 	stw	r22,24(sp)
    2b88:	dd400515 	stw	r21,20(sp)
    2b8c:	dd000415 	stw	r20,16(sp)
    2b90:	dcc00315 	stw	r19,12(sp)
    2b94:	dc400115 	stw	r17,4(sp)
    2b98:	dc000015 	stw	r16,0(sp)
    2b9c:	14807116 	blt	r2,r18,2d64 <quorem+0x1f8>
    2ba0:	94bfffc4 	addi	r18,r18,-1
    2ba4:	94ad883a 	add	r22,r18,r18
    2ba8:	b5ad883a 	add	r22,r22,r22
    2bac:	2c400504 	addi	r17,r5,20
    2bb0:	8da9883a 	add	r20,r17,r22
    2bb4:	25400504 	addi	r21,r4,20
    2bb8:	282f883a 	mov	r23,r5
    2bbc:	adad883a 	add	r22,r21,r22
    2bc0:	a1400017 	ldw	r5,0(r20)
    2bc4:	2021883a 	mov	r16,r4
    2bc8:	b1000017 	ldw	r4,0(r22)
    2bcc:	29400044 	addi	r5,r5,1
    2bd0:	00006200 	call	620 <__udivsi3>
    2bd4:	1027883a 	mov	r19,r2
    2bd8:	10002c26 	beq	r2,zero,2c8c <quorem+0x120>
    2bdc:	a813883a 	mov	r9,r21
    2be0:	880b883a 	mov	r5,r17
    2be4:	0009883a 	mov	r4,zero
    2be8:	000d883a 	mov	r6,zero
    2bec:	2a000017 	ldw	r8,0(r5)
    2bf0:	49c00017 	ldw	r7,0(r9)
    2bf4:	29400104 	addi	r5,r5,4
    2bf8:	40bfffcc 	andi	r2,r8,65535
    2bfc:	14c5383a 	mul	r2,r2,r19
    2c00:	4010d43a 	srli	r8,r8,16
    2c04:	38ffffcc 	andi	r3,r7,65535
    2c08:	1105883a 	add	r2,r2,r4
    2c0c:	1008d43a 	srli	r4,r2,16
    2c10:	44d1383a 	mul	r8,r8,r19
    2c14:	198d883a 	add	r6,r3,r6
    2c18:	10ffffcc 	andi	r3,r2,65535
    2c1c:	30c7c83a 	sub	r3,r6,r3
    2c20:	380ed43a 	srli	r7,r7,16
    2c24:	4105883a 	add	r2,r8,r4
    2c28:	180dd43a 	srai	r6,r3,16
    2c2c:	113fffcc 	andi	r4,r2,65535
    2c30:	390fc83a 	sub	r7,r7,r4
    2c34:	398d883a 	add	r6,r7,r6
    2c38:	300e943a 	slli	r7,r6,16
    2c3c:	18ffffcc 	andi	r3,r3,65535
    2c40:	1008d43a 	srli	r4,r2,16
    2c44:	38ceb03a 	or	r7,r7,r3
    2c48:	49c00015 	stw	r7,0(r9)
    2c4c:	300dd43a 	srai	r6,r6,16
    2c50:	4a400104 	addi	r9,r9,4
    2c54:	a17fe52e 	bgeu	r20,r5,2bec <__alt_data_end+0xfffe2bec>
    2c58:	b0800017 	ldw	r2,0(r22)
    2c5c:	10000b1e 	bne	r2,zero,2c8c <quorem+0x120>
    2c60:	b0bfff04 	addi	r2,r22,-4
    2c64:	a880082e 	bgeu	r21,r2,2c88 <quorem+0x11c>
    2c68:	b0ffff17 	ldw	r3,-4(r22)
    2c6c:	18000326 	beq	r3,zero,2c7c <quorem+0x110>
    2c70:	00000506 	br	2c88 <quorem+0x11c>
    2c74:	10c00017 	ldw	r3,0(r2)
    2c78:	1800031e 	bne	r3,zero,2c88 <quorem+0x11c>
    2c7c:	10bfff04 	addi	r2,r2,-4
    2c80:	94bfffc4 	addi	r18,r18,-1
    2c84:	a8bffb36 	bltu	r21,r2,2c74 <__alt_data_end+0xfffe2c74>
    2c88:	84800415 	stw	r18,16(r16)
    2c8c:	b80b883a 	mov	r5,r23
    2c90:	8009883a 	mov	r4,r16
    2c94:	00066b80 	call	66b8 <__mcmp>
    2c98:	10002616 	blt	r2,zero,2d34 <quorem+0x1c8>
    2c9c:	9cc00044 	addi	r19,r19,1
    2ca0:	a805883a 	mov	r2,r21
    2ca4:	000b883a 	mov	r5,zero
    2ca8:	11000017 	ldw	r4,0(r2)
    2cac:	89800017 	ldw	r6,0(r17)
    2cb0:	10800104 	addi	r2,r2,4
    2cb4:	20ffffcc 	andi	r3,r4,65535
    2cb8:	194b883a 	add	r5,r3,r5
    2cbc:	30ffffcc 	andi	r3,r6,65535
    2cc0:	28c7c83a 	sub	r3,r5,r3
    2cc4:	300cd43a 	srli	r6,r6,16
    2cc8:	2008d43a 	srli	r4,r4,16
    2ccc:	180bd43a 	srai	r5,r3,16
    2cd0:	18ffffcc 	andi	r3,r3,65535
    2cd4:	2189c83a 	sub	r4,r4,r6
    2cd8:	2149883a 	add	r4,r4,r5
    2cdc:	200c943a 	slli	r6,r4,16
    2ce0:	8c400104 	addi	r17,r17,4
    2ce4:	200bd43a 	srai	r5,r4,16
    2ce8:	30c6b03a 	or	r3,r6,r3
    2cec:	10ffff15 	stw	r3,-4(r2)
    2cf0:	a47fed2e 	bgeu	r20,r17,2ca8 <__alt_data_end+0xfffe2ca8>
    2cf4:	9485883a 	add	r2,r18,r18
    2cf8:	1085883a 	add	r2,r2,r2
    2cfc:	a887883a 	add	r3,r21,r2
    2d00:	18800017 	ldw	r2,0(r3)
    2d04:	10000b1e 	bne	r2,zero,2d34 <quorem+0x1c8>
    2d08:	18bfff04 	addi	r2,r3,-4
    2d0c:	a880082e 	bgeu	r21,r2,2d30 <quorem+0x1c4>
    2d10:	18ffff17 	ldw	r3,-4(r3)
    2d14:	18000326 	beq	r3,zero,2d24 <quorem+0x1b8>
    2d18:	00000506 	br	2d30 <quorem+0x1c4>
    2d1c:	10c00017 	ldw	r3,0(r2)
    2d20:	1800031e 	bne	r3,zero,2d30 <quorem+0x1c4>
    2d24:	10bfff04 	addi	r2,r2,-4
    2d28:	94bfffc4 	addi	r18,r18,-1
    2d2c:	a8bffb36 	bltu	r21,r2,2d1c <__alt_data_end+0xfffe2d1c>
    2d30:	84800415 	stw	r18,16(r16)
    2d34:	9805883a 	mov	r2,r19
    2d38:	dfc00817 	ldw	ra,32(sp)
    2d3c:	ddc00717 	ldw	r23,28(sp)
    2d40:	dd800617 	ldw	r22,24(sp)
    2d44:	dd400517 	ldw	r21,20(sp)
    2d48:	dd000417 	ldw	r20,16(sp)
    2d4c:	dcc00317 	ldw	r19,12(sp)
    2d50:	dc800217 	ldw	r18,8(sp)
    2d54:	dc400117 	ldw	r17,4(sp)
    2d58:	dc000017 	ldw	r16,0(sp)
    2d5c:	dec00904 	addi	sp,sp,36
    2d60:	f800283a 	ret
    2d64:	0005883a 	mov	r2,zero
    2d68:	003ff306 	br	2d38 <__alt_data_end+0xfffe2d38>

00002d6c <_dtoa_r>:
    2d6c:	20801017 	ldw	r2,64(r4)
    2d70:	deffde04 	addi	sp,sp,-136
    2d74:	df002015 	stw	fp,128(sp)
    2d78:	dcc01b15 	stw	r19,108(sp)
    2d7c:	dc801a15 	stw	r18,104(sp)
    2d80:	dc401915 	stw	r17,100(sp)
    2d84:	dc001815 	stw	r16,96(sp)
    2d88:	dfc02115 	stw	ra,132(sp)
    2d8c:	ddc01f15 	stw	r23,124(sp)
    2d90:	dd801e15 	stw	r22,120(sp)
    2d94:	dd401d15 	stw	r21,116(sp)
    2d98:	dd001c15 	stw	r20,112(sp)
    2d9c:	d9c00315 	stw	r7,12(sp)
    2da0:	2039883a 	mov	fp,r4
    2da4:	3023883a 	mov	r17,r6
    2da8:	2825883a 	mov	r18,r5
    2dac:	dc002417 	ldw	r16,144(sp)
    2db0:	3027883a 	mov	r19,r6
    2db4:	10000826 	beq	r2,zero,2dd8 <_dtoa_r+0x6c>
    2db8:	21801117 	ldw	r6,68(r4)
    2dbc:	00c00044 	movi	r3,1
    2dc0:	100b883a 	mov	r5,r2
    2dc4:	1986983a 	sll	r3,r3,r6
    2dc8:	11800115 	stw	r6,4(r2)
    2dcc:	10c00215 	stw	r3,8(r2)
    2dd0:	0005e980 	call	5e98 <_Bfree>
    2dd4:	e0001015 	stw	zero,64(fp)
    2dd8:	88002e16 	blt	r17,zero,2e94 <_dtoa_r+0x128>
    2ddc:	80000015 	stw	zero,0(r16)
    2de0:	889ffc2c 	andhi	r2,r17,32752
    2de4:	00dffc34 	movhi	r3,32752
    2de8:	10c01c26 	beq	r2,r3,2e5c <_dtoa_r+0xf0>
    2dec:	000d883a 	mov	r6,zero
    2df0:	000f883a 	mov	r7,zero
    2df4:	9009883a 	mov	r4,r18
    2df8:	980b883a 	mov	r5,r19
    2dfc:	000b8a00 	call	b8a0 <__eqdf2>
    2e00:	10002b1e 	bne	r2,zero,2eb0 <_dtoa_r+0x144>
    2e04:	d9c02317 	ldw	r7,140(sp)
    2e08:	00800044 	movi	r2,1
    2e0c:	38800015 	stw	r2,0(r7)
    2e10:	d8802517 	ldw	r2,148(sp)
    2e14:	10019e26 	beq	r2,zero,3490 <_dtoa_r+0x724>
    2e18:	d8c02517 	ldw	r3,148(sp)
    2e1c:	00800074 	movhi	r2,1
    2e20:	10bd4844 	addi	r2,r2,-2783
    2e24:	18800015 	stw	r2,0(r3)
    2e28:	10bfffc4 	addi	r2,r2,-1
    2e2c:	dfc02117 	ldw	ra,132(sp)
    2e30:	df002017 	ldw	fp,128(sp)
    2e34:	ddc01f17 	ldw	r23,124(sp)
    2e38:	dd801e17 	ldw	r22,120(sp)
    2e3c:	dd401d17 	ldw	r21,116(sp)
    2e40:	dd001c17 	ldw	r20,112(sp)
    2e44:	dcc01b17 	ldw	r19,108(sp)
    2e48:	dc801a17 	ldw	r18,104(sp)
    2e4c:	dc401917 	ldw	r17,100(sp)
    2e50:	dc001817 	ldw	r16,96(sp)
    2e54:	dec02204 	addi	sp,sp,136
    2e58:	f800283a 	ret
    2e5c:	d8c02317 	ldw	r3,140(sp)
    2e60:	0089c3c4 	movi	r2,9999
    2e64:	18800015 	stw	r2,0(r3)
    2e68:	90017726 	beq	r18,zero,3448 <_dtoa_r+0x6dc>
    2e6c:	00800074 	movhi	r2,1
    2e70:	10bd5404 	addi	r2,r2,-2736
    2e74:	d9002517 	ldw	r4,148(sp)
    2e78:	203fec26 	beq	r4,zero,2e2c <__alt_data_end+0xfffe2e2c>
    2e7c:	10c000c7 	ldb	r3,3(r2)
    2e80:	1801781e 	bne	r3,zero,3464 <_dtoa_r+0x6f8>
    2e84:	10c000c4 	addi	r3,r2,3
    2e88:	d9802517 	ldw	r6,148(sp)
    2e8c:	30c00015 	stw	r3,0(r6)
    2e90:	003fe606 	br	2e2c <__alt_data_end+0xfffe2e2c>
    2e94:	04e00034 	movhi	r19,32768
    2e98:	9cffffc4 	addi	r19,r19,-1
    2e9c:	00800044 	movi	r2,1
    2ea0:	8ce6703a 	and	r19,r17,r19
    2ea4:	80800015 	stw	r2,0(r16)
    2ea8:	9823883a 	mov	r17,r19
    2eac:	003fcc06 	br	2de0 <__alt_data_end+0xfffe2de0>
    2eb0:	d8800204 	addi	r2,sp,8
    2eb4:	d8800015 	stw	r2,0(sp)
    2eb8:	d9c00104 	addi	r7,sp,4
    2ebc:	900b883a 	mov	r5,r18
    2ec0:	980d883a 	mov	r6,r19
    2ec4:	e009883a 	mov	r4,fp
    2ec8:	8820d53a 	srli	r16,r17,20
    2ecc:	0006a840 	call	6a84 <__d2b>
    2ed0:	d8800915 	stw	r2,36(sp)
    2ed4:	8001651e 	bne	r16,zero,346c <_dtoa_r+0x700>
    2ed8:	dd800217 	ldw	r22,8(sp)
    2edc:	dc000117 	ldw	r16,4(sp)
    2ee0:	00800804 	movi	r2,32
    2ee4:	b421883a 	add	r16,r22,r16
    2ee8:	80c10c84 	addi	r3,r16,1074
    2eec:	10c2d10e 	bge	r2,r3,3a34 <_dtoa_r+0xcc8>
    2ef0:	00801004 	movi	r2,64
    2ef4:	81010484 	addi	r4,r16,1042
    2ef8:	10c7c83a 	sub	r3,r2,r3
    2efc:	9108d83a 	srl	r4,r18,r4
    2f00:	88e2983a 	sll	r17,r17,r3
    2f04:	2448b03a 	or	r4,r4,r17
    2f08:	000cc680 	call	cc68 <__floatunsidf>
    2f0c:	017f8434 	movhi	r5,65040
    2f10:	01800044 	movi	r6,1
    2f14:	1009883a 	mov	r4,r2
    2f18:	194b883a 	add	r5,r3,r5
    2f1c:	843fffc4 	addi	r16,r16,-1
    2f20:	d9801115 	stw	r6,68(sp)
    2f24:	000d883a 	mov	r6,zero
    2f28:	01cffe34 	movhi	r7,16376
    2f2c:	000c2100 	call	c210 <__subdf3>
    2f30:	0198dbf4 	movhi	r6,25455
    2f34:	01cff4f4 	movhi	r7,16339
    2f38:	3190d844 	addi	r6,r6,17249
    2f3c:	39e1e9c4 	addi	r7,r7,-30809
    2f40:	1009883a 	mov	r4,r2
    2f44:	180b883a 	mov	r5,r3
    2f48:	000baf80 	call	baf8 <__muldf3>
    2f4c:	01a2d874 	movhi	r6,35681
    2f50:	01cff1f4 	movhi	r7,16327
    2f54:	31b22cc4 	addi	r6,r6,-14157
    2f58:	39e28a04 	addi	r7,r7,-30168
    2f5c:	180b883a 	mov	r5,r3
    2f60:	1009883a 	mov	r4,r2
    2f64:	000a70c0 	call	a70c <__adddf3>
    2f68:	8009883a 	mov	r4,r16
    2f6c:	1029883a 	mov	r20,r2
    2f70:	1823883a 	mov	r17,r3
    2f74:	000cb8c0 	call	cb8c <__floatsidf>
    2f78:	019427f4 	movhi	r6,20639
    2f7c:	01cff4f4 	movhi	r7,16339
    2f80:	319e7ec4 	addi	r6,r6,31227
    2f84:	39d104c4 	addi	r7,r7,17427
    2f88:	1009883a 	mov	r4,r2
    2f8c:	180b883a 	mov	r5,r3
    2f90:	000baf80 	call	baf8 <__muldf3>
    2f94:	100d883a 	mov	r6,r2
    2f98:	180f883a 	mov	r7,r3
    2f9c:	a009883a 	mov	r4,r20
    2fa0:	880b883a 	mov	r5,r17
    2fa4:	000a70c0 	call	a70c <__adddf3>
    2fa8:	1009883a 	mov	r4,r2
    2fac:	180b883a 	mov	r5,r3
    2fb0:	1029883a 	mov	r20,r2
    2fb4:	1823883a 	mov	r17,r3
    2fb8:	000cb0c0 	call	cb0c <__fixdfsi>
    2fbc:	000d883a 	mov	r6,zero
    2fc0:	000f883a 	mov	r7,zero
    2fc4:	a009883a 	mov	r4,r20
    2fc8:	880b883a 	mov	r5,r17
    2fcc:	d8800515 	stw	r2,20(sp)
    2fd0:	000ba040 	call	ba04 <__ledf2>
    2fd4:	10028716 	blt	r2,zero,39f4 <_dtoa_r+0xc88>
    2fd8:	d8c00517 	ldw	r3,20(sp)
    2fdc:	00800584 	movi	r2,22
    2fe0:	10c27536 	bltu	r2,r3,39b8 <_dtoa_r+0xc4c>
    2fe4:	180490fa 	slli	r2,r3,3
    2fe8:	00c00074 	movhi	r3,1
    2fec:	18fd7004 	addi	r3,r3,-2624
    2ff0:	1885883a 	add	r2,r3,r2
    2ff4:	11000017 	ldw	r4,0(r2)
    2ff8:	11400117 	ldw	r5,4(r2)
    2ffc:	900d883a 	mov	r6,r18
    3000:	980f883a 	mov	r7,r19
    3004:	000b9280 	call	b928 <__gedf2>
    3008:	00828d0e 	bge	zero,r2,3a40 <_dtoa_r+0xcd4>
    300c:	d9000517 	ldw	r4,20(sp)
    3010:	d8000e15 	stw	zero,56(sp)
    3014:	213fffc4 	addi	r4,r4,-1
    3018:	d9000515 	stw	r4,20(sp)
    301c:	b42dc83a 	sub	r22,r22,r16
    3020:	b5bfffc4 	addi	r22,r22,-1
    3024:	b0026f16 	blt	r22,zero,39e4 <_dtoa_r+0xc78>
    3028:	d8000815 	stw	zero,32(sp)
    302c:	d9c00517 	ldw	r7,20(sp)
    3030:	38026416 	blt	r7,zero,39c4 <_dtoa_r+0xc58>
    3034:	b1ed883a 	add	r22,r22,r7
    3038:	d9c00d15 	stw	r7,52(sp)
    303c:	d8000a15 	stw	zero,40(sp)
    3040:	d9800317 	ldw	r6,12(sp)
    3044:	00800244 	movi	r2,9
    3048:	11811436 	bltu	r2,r6,349c <_dtoa_r+0x730>
    304c:	00800144 	movi	r2,5
    3050:	1184e10e 	bge	r2,r6,43d8 <_dtoa_r+0x166c>
    3054:	31bfff04 	addi	r6,r6,-4
    3058:	d9800315 	stw	r6,12(sp)
    305c:	0023883a 	mov	r17,zero
    3060:	d9800317 	ldw	r6,12(sp)
    3064:	008000c4 	movi	r2,3
    3068:	30836726 	beq	r6,r2,3e08 <_dtoa_r+0x109c>
    306c:	1183410e 	bge	r2,r6,3d74 <_dtoa_r+0x1008>
    3070:	d9c00317 	ldw	r7,12(sp)
    3074:	00800104 	movi	r2,4
    3078:	38827c26 	beq	r7,r2,3a6c <_dtoa_r+0xd00>
    307c:	00800144 	movi	r2,5
    3080:	3884c41e 	bne	r7,r2,4394 <_dtoa_r+0x1628>
    3084:	00800044 	movi	r2,1
    3088:	d8800b15 	stw	r2,44(sp)
    308c:	d8c00517 	ldw	r3,20(sp)
    3090:	d9002217 	ldw	r4,136(sp)
    3094:	1907883a 	add	r3,r3,r4
    3098:	19800044 	addi	r6,r3,1
    309c:	d8c00c15 	stw	r3,48(sp)
    30a0:	d9800615 	stw	r6,24(sp)
    30a4:	0183a40e 	bge	zero,r6,3f38 <_dtoa_r+0x11cc>
    30a8:	d9800617 	ldw	r6,24(sp)
    30ac:	3021883a 	mov	r16,r6
    30b0:	e0001115 	stw	zero,68(fp)
    30b4:	008005c4 	movi	r2,23
    30b8:	1184c92e 	bgeu	r2,r6,43e0 <_dtoa_r+0x1674>
    30bc:	00c00044 	movi	r3,1
    30c0:	00800104 	movi	r2,4
    30c4:	1085883a 	add	r2,r2,r2
    30c8:	11000504 	addi	r4,r2,20
    30cc:	180b883a 	mov	r5,r3
    30d0:	18c00044 	addi	r3,r3,1
    30d4:	313ffb2e 	bgeu	r6,r4,30c4 <__alt_data_end+0xfffe30c4>
    30d8:	e1401115 	stw	r5,68(fp)
    30dc:	e009883a 	mov	r4,fp
    30e0:	0005df00 	call	5df0 <_Balloc>
    30e4:	d8800715 	stw	r2,28(sp)
    30e8:	e0801015 	stw	r2,64(fp)
    30ec:	00800384 	movi	r2,14
    30f0:	1400f736 	bltu	r2,r16,34d0 <_dtoa_r+0x764>
    30f4:	8800f626 	beq	r17,zero,34d0 <_dtoa_r+0x764>
    30f8:	d9c00517 	ldw	r7,20(sp)
    30fc:	01c39a0e 	bge	zero,r7,3f68 <_dtoa_r+0x11fc>
    3100:	388003cc 	andi	r2,r7,15
    3104:	100490fa 	slli	r2,r2,3
    3108:	382bd13a 	srai	r21,r7,4
    310c:	00c00074 	movhi	r3,1
    3110:	18fd7004 	addi	r3,r3,-2624
    3114:	1885883a 	add	r2,r3,r2
    3118:	a8c0040c 	andi	r3,r21,16
    311c:	12400017 	ldw	r9,0(r2)
    3120:	12000117 	ldw	r8,4(r2)
    3124:	18037926 	beq	r3,zero,3f0c <_dtoa_r+0x11a0>
    3128:	00800074 	movhi	r2,1
    312c:	10bd6604 	addi	r2,r2,-2664
    3130:	11800817 	ldw	r6,32(r2)
    3134:	11c00917 	ldw	r7,36(r2)
    3138:	9009883a 	mov	r4,r18
    313c:	980b883a 	mov	r5,r19
    3140:	da001715 	stw	r8,92(sp)
    3144:	da401615 	stw	r9,88(sp)
    3148:	000afb80 	call	afb8 <__divdf3>
    314c:	da001717 	ldw	r8,92(sp)
    3150:	da401617 	ldw	r9,88(sp)
    3154:	ad4003cc 	andi	r21,r21,15
    3158:	040000c4 	movi	r16,3
    315c:	1023883a 	mov	r17,r2
    3160:	1829883a 	mov	r20,r3
    3164:	a8001126 	beq	r21,zero,31ac <_dtoa_r+0x440>
    3168:	05c00074 	movhi	r23,1
    316c:	bdfd6604 	addi	r23,r23,-2664
    3170:	4805883a 	mov	r2,r9
    3174:	4007883a 	mov	r3,r8
    3178:	a980004c 	andi	r6,r21,1
    317c:	1009883a 	mov	r4,r2
    3180:	a82bd07a 	srai	r21,r21,1
    3184:	180b883a 	mov	r5,r3
    3188:	30000426 	beq	r6,zero,319c <_dtoa_r+0x430>
    318c:	b9800017 	ldw	r6,0(r23)
    3190:	b9c00117 	ldw	r7,4(r23)
    3194:	84000044 	addi	r16,r16,1
    3198:	000baf80 	call	baf8 <__muldf3>
    319c:	bdc00204 	addi	r23,r23,8
    31a0:	a83ff51e 	bne	r21,zero,3178 <__alt_data_end+0xfffe3178>
    31a4:	1013883a 	mov	r9,r2
    31a8:	1811883a 	mov	r8,r3
    31ac:	480d883a 	mov	r6,r9
    31b0:	400f883a 	mov	r7,r8
    31b4:	8809883a 	mov	r4,r17
    31b8:	a00b883a 	mov	r5,r20
    31bc:	000afb80 	call	afb8 <__divdf3>
    31c0:	d8800f15 	stw	r2,60(sp)
    31c4:	d8c01015 	stw	r3,64(sp)
    31c8:	d8c00e17 	ldw	r3,56(sp)
    31cc:	18000626 	beq	r3,zero,31e8 <_dtoa_r+0x47c>
    31d0:	d9000f17 	ldw	r4,60(sp)
    31d4:	d9401017 	ldw	r5,64(sp)
    31d8:	000d883a 	mov	r6,zero
    31dc:	01cffc34 	movhi	r7,16368
    31e0:	000ba040 	call	ba04 <__ledf2>
    31e4:	10040b16 	blt	r2,zero,4214 <_dtoa_r+0x14a8>
    31e8:	8009883a 	mov	r4,r16
    31ec:	000cb8c0 	call	cb8c <__floatsidf>
    31f0:	d9800f17 	ldw	r6,60(sp)
    31f4:	d9c01017 	ldw	r7,64(sp)
    31f8:	1009883a 	mov	r4,r2
    31fc:	180b883a 	mov	r5,r3
    3200:	000baf80 	call	baf8 <__muldf3>
    3204:	000d883a 	mov	r6,zero
    3208:	01d00734 	movhi	r7,16412
    320c:	1009883a 	mov	r4,r2
    3210:	180b883a 	mov	r5,r3
    3214:	000a70c0 	call	a70c <__adddf3>
    3218:	1021883a 	mov	r16,r2
    321c:	d8800617 	ldw	r2,24(sp)
    3220:	047f3034 	movhi	r17,64704
    3224:	1c63883a 	add	r17,r3,r17
    3228:	10031826 	beq	r2,zero,3e8c <_dtoa_r+0x1120>
    322c:	d8c00517 	ldw	r3,20(sp)
    3230:	db000617 	ldw	r12,24(sp)
    3234:	d8c01315 	stw	r3,76(sp)
    3238:	d9000b17 	ldw	r4,44(sp)
    323c:	20038f26 	beq	r4,zero,407c <_dtoa_r+0x1310>
    3240:	60bfffc4 	addi	r2,r12,-1
    3244:	100490fa 	slli	r2,r2,3
    3248:	00c00074 	movhi	r3,1
    324c:	18fd7004 	addi	r3,r3,-2624
    3250:	1885883a 	add	r2,r3,r2
    3254:	11800017 	ldw	r6,0(r2)
    3258:	11c00117 	ldw	r7,4(r2)
    325c:	d8800717 	ldw	r2,28(sp)
    3260:	0009883a 	mov	r4,zero
    3264:	014ff834 	movhi	r5,16352
    3268:	db001615 	stw	r12,88(sp)
    326c:	15c00044 	addi	r23,r2,1
    3270:	000afb80 	call	afb8 <__divdf3>
    3274:	800d883a 	mov	r6,r16
    3278:	880f883a 	mov	r7,r17
    327c:	1009883a 	mov	r4,r2
    3280:	180b883a 	mov	r5,r3
    3284:	000c2100 	call	c210 <__subdf3>
    3288:	d9401017 	ldw	r5,64(sp)
    328c:	d9000f17 	ldw	r4,60(sp)
    3290:	102b883a 	mov	r21,r2
    3294:	d8c01215 	stw	r3,72(sp)
    3298:	000cb0c0 	call	cb0c <__fixdfsi>
    329c:	1009883a 	mov	r4,r2
    32a0:	1029883a 	mov	r20,r2
    32a4:	000cb8c0 	call	cb8c <__floatsidf>
    32a8:	d9000f17 	ldw	r4,60(sp)
    32ac:	d9401017 	ldw	r5,64(sp)
    32b0:	100d883a 	mov	r6,r2
    32b4:	180f883a 	mov	r7,r3
    32b8:	000c2100 	call	c210 <__subdf3>
    32bc:	1823883a 	mov	r17,r3
    32c0:	d8c00717 	ldw	r3,28(sp)
    32c4:	d9401217 	ldw	r5,72(sp)
    32c8:	a2000c04 	addi	r8,r20,48
    32cc:	1021883a 	mov	r16,r2
    32d0:	1a000005 	stb	r8,0(r3)
    32d4:	800d883a 	mov	r6,r16
    32d8:	880f883a 	mov	r7,r17
    32dc:	a809883a 	mov	r4,r21
    32e0:	4029883a 	mov	r20,r8
    32e4:	000b9280 	call	b928 <__gedf2>
    32e8:	00841d16 	blt	zero,r2,4360 <_dtoa_r+0x15f4>
    32ec:	800d883a 	mov	r6,r16
    32f0:	880f883a 	mov	r7,r17
    32f4:	0009883a 	mov	r4,zero
    32f8:	014ffc34 	movhi	r5,16368
    32fc:	000c2100 	call	c210 <__subdf3>
    3300:	d9401217 	ldw	r5,72(sp)
    3304:	100d883a 	mov	r6,r2
    3308:	180f883a 	mov	r7,r3
    330c:	a809883a 	mov	r4,r21
    3310:	000b9280 	call	b928 <__gedf2>
    3314:	db001617 	ldw	r12,88(sp)
    3318:	00840e16 	blt	zero,r2,4354 <_dtoa_r+0x15e8>
    331c:	00800044 	movi	r2,1
    3320:	13006b0e 	bge	r2,r12,34d0 <_dtoa_r+0x764>
    3324:	d9000717 	ldw	r4,28(sp)
    3328:	dd800f15 	stw	r22,60(sp)
    332c:	dcc01015 	stw	r19,64(sp)
    3330:	2319883a 	add	r12,r4,r12
    3334:	dcc01217 	ldw	r19,72(sp)
    3338:	602d883a 	mov	r22,r12
    333c:	dc801215 	stw	r18,72(sp)
    3340:	b825883a 	mov	r18,r23
    3344:	00000906 	br	336c <_dtoa_r+0x600>
    3348:	000c2100 	call	c210 <__subdf3>
    334c:	a80d883a 	mov	r6,r21
    3350:	980f883a 	mov	r7,r19
    3354:	1009883a 	mov	r4,r2
    3358:	180b883a 	mov	r5,r3
    335c:	000ba040 	call	ba04 <__ledf2>
    3360:	1003e816 	blt	r2,zero,4304 <_dtoa_r+0x1598>
    3364:	b825883a 	mov	r18,r23
    3368:	bd83e926 	beq	r23,r22,4310 <_dtoa_r+0x15a4>
    336c:	a809883a 	mov	r4,r21
    3370:	980b883a 	mov	r5,r19
    3374:	000d883a 	mov	r6,zero
    3378:	01d00934 	movhi	r7,16420
    337c:	000baf80 	call	baf8 <__muldf3>
    3380:	000d883a 	mov	r6,zero
    3384:	01d00934 	movhi	r7,16420
    3388:	8009883a 	mov	r4,r16
    338c:	880b883a 	mov	r5,r17
    3390:	102b883a 	mov	r21,r2
    3394:	1827883a 	mov	r19,r3
    3398:	000baf80 	call	baf8 <__muldf3>
    339c:	180b883a 	mov	r5,r3
    33a0:	1009883a 	mov	r4,r2
    33a4:	1821883a 	mov	r16,r3
    33a8:	1023883a 	mov	r17,r2
    33ac:	000cb0c0 	call	cb0c <__fixdfsi>
    33b0:	1009883a 	mov	r4,r2
    33b4:	1029883a 	mov	r20,r2
    33b8:	000cb8c0 	call	cb8c <__floatsidf>
    33bc:	8809883a 	mov	r4,r17
    33c0:	800b883a 	mov	r5,r16
    33c4:	100d883a 	mov	r6,r2
    33c8:	180f883a 	mov	r7,r3
    33cc:	000c2100 	call	c210 <__subdf3>
    33d0:	a5000c04 	addi	r20,r20,48
    33d4:	a80d883a 	mov	r6,r21
    33d8:	980f883a 	mov	r7,r19
    33dc:	1009883a 	mov	r4,r2
    33e0:	180b883a 	mov	r5,r3
    33e4:	95000005 	stb	r20,0(r18)
    33e8:	1021883a 	mov	r16,r2
    33ec:	1823883a 	mov	r17,r3
    33f0:	000ba040 	call	ba04 <__ledf2>
    33f4:	bdc00044 	addi	r23,r23,1
    33f8:	800d883a 	mov	r6,r16
    33fc:	880f883a 	mov	r7,r17
    3400:	0009883a 	mov	r4,zero
    3404:	014ffc34 	movhi	r5,16368
    3408:	103fcf0e 	bge	r2,zero,3348 <__alt_data_end+0xfffe3348>
    340c:	d8c01317 	ldw	r3,76(sp)
    3410:	d8c00515 	stw	r3,20(sp)
    3414:	d9400917 	ldw	r5,36(sp)
    3418:	e009883a 	mov	r4,fp
    341c:	0005e980 	call	5e98 <_Bfree>
    3420:	d9000517 	ldw	r4,20(sp)
    3424:	d9802317 	ldw	r6,140(sp)
    3428:	d9c02517 	ldw	r7,148(sp)
    342c:	b8000005 	stb	zero,0(r23)
    3430:	20800044 	addi	r2,r4,1
    3434:	30800015 	stw	r2,0(r6)
    3438:	3802aa26 	beq	r7,zero,3ee4 <_dtoa_r+0x1178>
    343c:	3dc00015 	stw	r23,0(r7)
    3440:	d8800717 	ldw	r2,28(sp)
    3444:	003e7906 	br	2e2c <__alt_data_end+0xfffe2e2c>
    3448:	00800434 	movhi	r2,16
    344c:	10bfffc4 	addi	r2,r2,-1
    3450:	88a2703a 	and	r17,r17,r2
    3454:	883e851e 	bne	r17,zero,2e6c <__alt_data_end+0xfffe2e6c>
    3458:	00800074 	movhi	r2,1
    345c:	10bd5104 	addi	r2,r2,-2748
    3460:	003e8406 	br	2e74 <__alt_data_end+0xfffe2e74>
    3464:	10c00204 	addi	r3,r2,8
    3468:	003e8706 	br	2e88 <__alt_data_end+0xfffe2e88>
    346c:	01400434 	movhi	r5,16
    3470:	297fffc4 	addi	r5,r5,-1
    3474:	994a703a 	and	r5,r19,r5
    3478:	9009883a 	mov	r4,r18
    347c:	843f0044 	addi	r16,r16,-1023
    3480:	294ffc34 	orhi	r5,r5,16368
    3484:	dd800217 	ldw	r22,8(sp)
    3488:	d8001115 	stw	zero,68(sp)
    348c:	003ea506 	br	2f24 <__alt_data_end+0xfffe2f24>
    3490:	00800074 	movhi	r2,1
    3494:	10bd4804 	addi	r2,r2,-2784
    3498:	003e6406 	br	2e2c <__alt_data_end+0xfffe2e2c>
    349c:	e0001115 	stw	zero,68(fp)
    34a0:	000b883a 	mov	r5,zero
    34a4:	e009883a 	mov	r4,fp
    34a8:	0005df00 	call	5df0 <_Balloc>
    34ac:	01bfffc4 	movi	r6,-1
    34b0:	01c00044 	movi	r7,1
    34b4:	d8800715 	stw	r2,28(sp)
    34b8:	d9800c15 	stw	r6,48(sp)
    34bc:	e0801015 	stw	r2,64(fp)
    34c0:	d8000315 	stw	zero,12(sp)
    34c4:	d9c00b15 	stw	r7,44(sp)
    34c8:	d9800615 	stw	r6,24(sp)
    34cc:	d8002215 	stw	zero,136(sp)
    34d0:	d8800117 	ldw	r2,4(sp)
    34d4:	10008916 	blt	r2,zero,36fc <_dtoa_r+0x990>
    34d8:	d9000517 	ldw	r4,20(sp)
    34dc:	00c00384 	movi	r3,14
    34e0:	19008616 	blt	r3,r4,36fc <_dtoa_r+0x990>
    34e4:	200490fa 	slli	r2,r4,3
    34e8:	00c00074 	movhi	r3,1
    34ec:	d9802217 	ldw	r6,136(sp)
    34f0:	18fd7004 	addi	r3,r3,-2624
    34f4:	1885883a 	add	r2,r3,r2
    34f8:	14000017 	ldw	r16,0(r2)
    34fc:	14400117 	ldw	r17,4(r2)
    3500:	30016316 	blt	r6,zero,3a90 <_dtoa_r+0xd24>
    3504:	800d883a 	mov	r6,r16
    3508:	880f883a 	mov	r7,r17
    350c:	9009883a 	mov	r4,r18
    3510:	980b883a 	mov	r5,r19
    3514:	000afb80 	call	afb8 <__divdf3>
    3518:	180b883a 	mov	r5,r3
    351c:	1009883a 	mov	r4,r2
    3520:	000cb0c0 	call	cb0c <__fixdfsi>
    3524:	1009883a 	mov	r4,r2
    3528:	102b883a 	mov	r21,r2
    352c:	000cb8c0 	call	cb8c <__floatsidf>
    3530:	800d883a 	mov	r6,r16
    3534:	880f883a 	mov	r7,r17
    3538:	1009883a 	mov	r4,r2
    353c:	180b883a 	mov	r5,r3
    3540:	000baf80 	call	baf8 <__muldf3>
    3544:	100d883a 	mov	r6,r2
    3548:	180f883a 	mov	r7,r3
    354c:	9009883a 	mov	r4,r18
    3550:	980b883a 	mov	r5,r19
    3554:	000c2100 	call	c210 <__subdf3>
    3558:	d9c00717 	ldw	r7,28(sp)
    355c:	1009883a 	mov	r4,r2
    3560:	a8800c04 	addi	r2,r21,48
    3564:	38800005 	stb	r2,0(r7)
    3568:	3dc00044 	addi	r23,r7,1
    356c:	d9c00617 	ldw	r7,24(sp)
    3570:	01800044 	movi	r6,1
    3574:	180b883a 	mov	r5,r3
    3578:	2005883a 	mov	r2,r4
    357c:	39803826 	beq	r7,r6,3660 <_dtoa_r+0x8f4>
    3580:	000d883a 	mov	r6,zero
    3584:	01d00934 	movhi	r7,16420
    3588:	000baf80 	call	baf8 <__muldf3>
    358c:	000d883a 	mov	r6,zero
    3590:	000f883a 	mov	r7,zero
    3594:	1009883a 	mov	r4,r2
    3598:	180b883a 	mov	r5,r3
    359c:	1025883a 	mov	r18,r2
    35a0:	1827883a 	mov	r19,r3
    35a4:	000b8a00 	call	b8a0 <__eqdf2>
    35a8:	103f9a26 	beq	r2,zero,3414 <__alt_data_end+0xfffe3414>
    35ac:	d9c00617 	ldw	r7,24(sp)
    35b0:	d8c00717 	ldw	r3,28(sp)
    35b4:	b829883a 	mov	r20,r23
    35b8:	38bfffc4 	addi	r2,r7,-1
    35bc:	18ad883a 	add	r22,r3,r2
    35c0:	00000a06 	br	35ec <_dtoa_r+0x880>
    35c4:	000baf80 	call	baf8 <__muldf3>
    35c8:	000d883a 	mov	r6,zero
    35cc:	000f883a 	mov	r7,zero
    35d0:	1009883a 	mov	r4,r2
    35d4:	180b883a 	mov	r5,r3
    35d8:	1025883a 	mov	r18,r2
    35dc:	1827883a 	mov	r19,r3
    35e0:	b829883a 	mov	r20,r23
    35e4:	000b8a00 	call	b8a0 <__eqdf2>
    35e8:	103f8a26 	beq	r2,zero,3414 <__alt_data_end+0xfffe3414>
    35ec:	800d883a 	mov	r6,r16
    35f0:	880f883a 	mov	r7,r17
    35f4:	9009883a 	mov	r4,r18
    35f8:	980b883a 	mov	r5,r19
    35fc:	000afb80 	call	afb8 <__divdf3>
    3600:	180b883a 	mov	r5,r3
    3604:	1009883a 	mov	r4,r2
    3608:	000cb0c0 	call	cb0c <__fixdfsi>
    360c:	1009883a 	mov	r4,r2
    3610:	102b883a 	mov	r21,r2
    3614:	000cb8c0 	call	cb8c <__floatsidf>
    3618:	800d883a 	mov	r6,r16
    361c:	880f883a 	mov	r7,r17
    3620:	1009883a 	mov	r4,r2
    3624:	180b883a 	mov	r5,r3
    3628:	000baf80 	call	baf8 <__muldf3>
    362c:	100d883a 	mov	r6,r2
    3630:	180f883a 	mov	r7,r3
    3634:	9009883a 	mov	r4,r18
    3638:	980b883a 	mov	r5,r19
    363c:	000c2100 	call	c210 <__subdf3>
    3640:	aa000c04 	addi	r8,r21,48
    3644:	a2000005 	stb	r8,0(r20)
    3648:	000d883a 	mov	r6,zero
    364c:	01d00934 	movhi	r7,16420
    3650:	1009883a 	mov	r4,r2
    3654:	180b883a 	mov	r5,r3
    3658:	a5c00044 	addi	r23,r20,1
    365c:	b53fd91e 	bne	r22,r20,35c4 <__alt_data_end+0xfffe35c4>
    3660:	100d883a 	mov	r6,r2
    3664:	180f883a 	mov	r7,r3
    3668:	1009883a 	mov	r4,r2
    366c:	180b883a 	mov	r5,r3
    3670:	000a70c0 	call	a70c <__adddf3>
    3674:	100d883a 	mov	r6,r2
    3678:	180f883a 	mov	r7,r3
    367c:	8009883a 	mov	r4,r16
    3680:	880b883a 	mov	r5,r17
    3684:	1027883a 	mov	r19,r2
    3688:	1825883a 	mov	r18,r3
    368c:	000ba040 	call	ba04 <__ledf2>
    3690:	10000816 	blt	r2,zero,36b4 <_dtoa_r+0x948>
    3694:	980d883a 	mov	r6,r19
    3698:	900f883a 	mov	r7,r18
    369c:	8009883a 	mov	r4,r16
    36a0:	880b883a 	mov	r5,r17
    36a4:	000b8a00 	call	b8a0 <__eqdf2>
    36a8:	103f5a1e 	bne	r2,zero,3414 <__alt_data_end+0xfffe3414>
    36ac:	ad40004c 	andi	r21,r21,1
    36b0:	a83f5826 	beq	r21,zero,3414 <__alt_data_end+0xfffe3414>
    36b4:	bd3fffc3 	ldbu	r20,-1(r23)
    36b8:	b8bfffc4 	addi	r2,r23,-1
    36bc:	1007883a 	mov	r3,r2
    36c0:	01400e44 	movi	r5,57
    36c4:	d9800717 	ldw	r6,28(sp)
    36c8:	00000506 	br	36e0 <_dtoa_r+0x974>
    36cc:	18ffffc4 	addi	r3,r3,-1
    36d0:	11824726 	beq	r2,r6,3ff0 <_dtoa_r+0x1284>
    36d4:	1d000003 	ldbu	r20,0(r3)
    36d8:	102f883a 	mov	r23,r2
    36dc:	10bfffc4 	addi	r2,r2,-1
    36e0:	a1003fcc 	andi	r4,r20,255
    36e4:	2100201c 	xori	r4,r4,128
    36e8:	213fe004 	addi	r4,r4,-128
    36ec:	217ff726 	beq	r4,r5,36cc <__alt_data_end+0xfffe36cc>
    36f0:	a2000044 	addi	r8,r20,1
    36f4:	12000005 	stb	r8,0(r2)
    36f8:	003f4606 	br	3414 <__alt_data_end+0xfffe3414>
    36fc:	d9000b17 	ldw	r4,44(sp)
    3700:	2000c826 	beq	r4,zero,3a24 <_dtoa_r+0xcb8>
    3704:	d9800317 	ldw	r6,12(sp)
    3708:	00c00044 	movi	r3,1
    370c:	1980f90e 	bge	r3,r6,3af4 <_dtoa_r+0xd88>
    3710:	d8800617 	ldw	r2,24(sp)
    3714:	d8c00a17 	ldw	r3,40(sp)
    3718:	157fffc4 	addi	r21,r2,-1
    371c:	1d41f316 	blt	r3,r21,3eec <_dtoa_r+0x1180>
    3720:	1d6bc83a 	sub	r21,r3,r21
    3724:	d9c00617 	ldw	r7,24(sp)
    3728:	3802aa16 	blt	r7,zero,41d4 <_dtoa_r+0x1468>
    372c:	dd000817 	ldw	r20,32(sp)
    3730:	d8800617 	ldw	r2,24(sp)
    3734:	d8c00817 	ldw	r3,32(sp)
    3738:	01400044 	movi	r5,1
    373c:	e009883a 	mov	r4,fp
    3740:	1887883a 	add	r3,r3,r2
    3744:	d8c00815 	stw	r3,32(sp)
    3748:	b0ad883a 	add	r22,r22,r2
    374c:	00061fc0 	call	61fc <__i2b>
    3750:	1023883a 	mov	r17,r2
    3754:	a0000826 	beq	r20,zero,3778 <_dtoa_r+0xa0c>
    3758:	0580070e 	bge	zero,r22,3778 <_dtoa_r+0xa0c>
    375c:	a005883a 	mov	r2,r20
    3760:	b500b916 	blt	r22,r20,3a48 <_dtoa_r+0xcdc>
    3764:	d9000817 	ldw	r4,32(sp)
    3768:	a0a9c83a 	sub	r20,r20,r2
    376c:	b0adc83a 	sub	r22,r22,r2
    3770:	2089c83a 	sub	r4,r4,r2
    3774:	d9000815 	stw	r4,32(sp)
    3778:	d9800a17 	ldw	r6,40(sp)
    377c:	0181810e 	bge	zero,r6,3d84 <_dtoa_r+0x1018>
    3780:	d9c00b17 	ldw	r7,44(sp)
    3784:	3800b326 	beq	r7,zero,3a54 <_dtoa_r+0xce8>
    3788:	a800b226 	beq	r21,zero,3a54 <_dtoa_r+0xce8>
    378c:	880b883a 	mov	r5,r17
    3790:	a80d883a 	mov	r6,r21
    3794:	e009883a 	mov	r4,fp
    3798:	00064300 	call	6430 <__pow5mult>
    379c:	d9800917 	ldw	r6,36(sp)
    37a0:	100b883a 	mov	r5,r2
    37a4:	e009883a 	mov	r4,fp
    37a8:	1023883a 	mov	r17,r2
    37ac:	00062380 	call	6238 <__multiply>
    37b0:	1021883a 	mov	r16,r2
    37b4:	d8800a17 	ldw	r2,40(sp)
    37b8:	d9400917 	ldw	r5,36(sp)
    37bc:	e009883a 	mov	r4,fp
    37c0:	1545c83a 	sub	r2,r2,r21
    37c4:	d8800a15 	stw	r2,40(sp)
    37c8:	0005e980 	call	5e98 <_Bfree>
    37cc:	d8c00a17 	ldw	r3,40(sp)
    37d0:	18009f1e 	bne	r3,zero,3a50 <_dtoa_r+0xce4>
    37d4:	05c00044 	movi	r23,1
    37d8:	e009883a 	mov	r4,fp
    37dc:	b80b883a 	mov	r5,r23
    37e0:	00061fc0 	call	61fc <__i2b>
    37e4:	d9000d17 	ldw	r4,52(sp)
    37e8:	102b883a 	mov	r21,r2
    37ec:	2000ce26 	beq	r4,zero,3b28 <_dtoa_r+0xdbc>
    37f0:	200d883a 	mov	r6,r4
    37f4:	100b883a 	mov	r5,r2
    37f8:	e009883a 	mov	r4,fp
    37fc:	00064300 	call	6430 <__pow5mult>
    3800:	d9800317 	ldw	r6,12(sp)
    3804:	102b883a 	mov	r21,r2
    3808:	b981810e 	bge	r23,r6,3e10 <_dtoa_r+0x10a4>
    380c:	0027883a 	mov	r19,zero
    3810:	a8800417 	ldw	r2,16(r21)
    3814:	05c00804 	movi	r23,32
    3818:	10800104 	addi	r2,r2,4
    381c:	1085883a 	add	r2,r2,r2
    3820:	1085883a 	add	r2,r2,r2
    3824:	a885883a 	add	r2,r21,r2
    3828:	11000017 	ldw	r4,0(r2)
    382c:	00060e40 	call	60e4 <__hi0bits>
    3830:	b885c83a 	sub	r2,r23,r2
    3834:	1585883a 	add	r2,r2,r22
    3838:	108007cc 	andi	r2,r2,31
    383c:	1000b326 	beq	r2,zero,3b0c <_dtoa_r+0xda0>
    3840:	00c00804 	movi	r3,32
    3844:	1887c83a 	sub	r3,r3,r2
    3848:	01000104 	movi	r4,4
    384c:	20c2cd0e 	bge	r4,r3,4384 <_dtoa_r+0x1618>
    3850:	00c00704 	movi	r3,28
    3854:	1885c83a 	sub	r2,r3,r2
    3858:	d8c00817 	ldw	r3,32(sp)
    385c:	a0a9883a 	add	r20,r20,r2
    3860:	b0ad883a 	add	r22,r22,r2
    3864:	1887883a 	add	r3,r3,r2
    3868:	d8c00815 	stw	r3,32(sp)
    386c:	d9800817 	ldw	r6,32(sp)
    3870:	0180040e 	bge	zero,r6,3884 <_dtoa_r+0xb18>
    3874:	800b883a 	mov	r5,r16
    3878:	e009883a 	mov	r4,fp
    387c:	00065700 	call	6570 <__lshift>
    3880:	1021883a 	mov	r16,r2
    3884:	0580050e 	bge	zero,r22,389c <_dtoa_r+0xb30>
    3888:	a80b883a 	mov	r5,r21
    388c:	b00d883a 	mov	r6,r22
    3890:	e009883a 	mov	r4,fp
    3894:	00065700 	call	6570 <__lshift>
    3898:	102b883a 	mov	r21,r2
    389c:	d9c00e17 	ldw	r7,56(sp)
    38a0:	3801211e 	bne	r7,zero,3d28 <_dtoa_r+0xfbc>
    38a4:	d9800617 	ldw	r6,24(sp)
    38a8:	0181380e 	bge	zero,r6,3d8c <_dtoa_r+0x1020>
    38ac:	d8c00b17 	ldw	r3,44(sp)
    38b0:	1800ab1e 	bne	r3,zero,3b60 <_dtoa_r+0xdf4>
    38b4:	dc800717 	ldw	r18,28(sp)
    38b8:	dcc00617 	ldw	r19,24(sp)
    38bc:	9029883a 	mov	r20,r18
    38c0:	00000206 	br	38cc <_dtoa_r+0xb60>
    38c4:	0005ec00 	call	5ec0 <__multadd>
    38c8:	1021883a 	mov	r16,r2
    38cc:	a80b883a 	mov	r5,r21
    38d0:	8009883a 	mov	r4,r16
    38d4:	0002b6c0 	call	2b6c <quorem>
    38d8:	10800c04 	addi	r2,r2,48
    38dc:	90800005 	stb	r2,0(r18)
    38e0:	94800044 	addi	r18,r18,1
    38e4:	9507c83a 	sub	r3,r18,r20
    38e8:	000f883a 	mov	r7,zero
    38ec:	01800284 	movi	r6,10
    38f0:	800b883a 	mov	r5,r16
    38f4:	e009883a 	mov	r4,fp
    38f8:	1cfff216 	blt	r3,r19,38c4 <__alt_data_end+0xfffe38c4>
    38fc:	1011883a 	mov	r8,r2
    3900:	d8800617 	ldw	r2,24(sp)
    3904:	0082370e 	bge	zero,r2,41e4 <_dtoa_r+0x1478>
    3908:	d9000717 	ldw	r4,28(sp)
    390c:	0025883a 	mov	r18,zero
    3910:	20af883a 	add	r23,r4,r2
    3914:	01800044 	movi	r6,1
    3918:	800b883a 	mov	r5,r16
    391c:	e009883a 	mov	r4,fp
    3920:	da001715 	stw	r8,92(sp)
    3924:	00065700 	call	6570 <__lshift>
    3928:	a80b883a 	mov	r5,r21
    392c:	1009883a 	mov	r4,r2
    3930:	d8800915 	stw	r2,36(sp)
    3934:	00066b80 	call	66b8 <__mcmp>
    3938:	da001717 	ldw	r8,92(sp)
    393c:	0081800e 	bge	zero,r2,3f40 <_dtoa_r+0x11d4>
    3940:	b93fffc3 	ldbu	r4,-1(r23)
    3944:	b8bfffc4 	addi	r2,r23,-1
    3948:	1007883a 	mov	r3,r2
    394c:	01800e44 	movi	r6,57
    3950:	d9c00717 	ldw	r7,28(sp)
    3954:	00000506 	br	396c <_dtoa_r+0xc00>
    3958:	18ffffc4 	addi	r3,r3,-1
    395c:	11c12326 	beq	r2,r7,3dec <_dtoa_r+0x1080>
    3960:	19000003 	ldbu	r4,0(r3)
    3964:	102f883a 	mov	r23,r2
    3968:	10bfffc4 	addi	r2,r2,-1
    396c:	21403fcc 	andi	r5,r4,255
    3970:	2940201c 	xori	r5,r5,128
    3974:	297fe004 	addi	r5,r5,-128
    3978:	29bff726 	beq	r5,r6,3958 <__alt_data_end+0xfffe3958>
    397c:	21000044 	addi	r4,r4,1
    3980:	11000005 	stb	r4,0(r2)
    3984:	a80b883a 	mov	r5,r21
    3988:	e009883a 	mov	r4,fp
    398c:	0005e980 	call	5e98 <_Bfree>
    3990:	883ea026 	beq	r17,zero,3414 <__alt_data_end+0xfffe3414>
    3994:	90000426 	beq	r18,zero,39a8 <_dtoa_r+0xc3c>
    3998:	94400326 	beq	r18,r17,39a8 <_dtoa_r+0xc3c>
    399c:	900b883a 	mov	r5,r18
    39a0:	e009883a 	mov	r4,fp
    39a4:	0005e980 	call	5e98 <_Bfree>
    39a8:	880b883a 	mov	r5,r17
    39ac:	e009883a 	mov	r4,fp
    39b0:	0005e980 	call	5e98 <_Bfree>
    39b4:	003e9706 	br	3414 <__alt_data_end+0xfffe3414>
    39b8:	01800044 	movi	r6,1
    39bc:	d9800e15 	stw	r6,56(sp)
    39c0:	003d9606 	br	301c <__alt_data_end+0xfffe301c>
    39c4:	d8800817 	ldw	r2,32(sp)
    39c8:	d8c00517 	ldw	r3,20(sp)
    39cc:	d8000d15 	stw	zero,52(sp)
    39d0:	10c5c83a 	sub	r2,r2,r3
    39d4:	00c9c83a 	sub	r4,zero,r3
    39d8:	d8800815 	stw	r2,32(sp)
    39dc:	d9000a15 	stw	r4,40(sp)
    39e0:	003d9706 	br	3040 <__alt_data_end+0xfffe3040>
    39e4:	05adc83a 	sub	r22,zero,r22
    39e8:	dd800815 	stw	r22,32(sp)
    39ec:	002d883a 	mov	r22,zero
    39f0:	003d8e06 	br	302c <__alt_data_end+0xfffe302c>
    39f4:	d9000517 	ldw	r4,20(sp)
    39f8:	000cb8c0 	call	cb8c <__floatsidf>
    39fc:	100d883a 	mov	r6,r2
    3a00:	180f883a 	mov	r7,r3
    3a04:	a009883a 	mov	r4,r20
    3a08:	880b883a 	mov	r5,r17
    3a0c:	000b8a00 	call	b8a0 <__eqdf2>
    3a10:	103d7126 	beq	r2,zero,2fd8 <__alt_data_end+0xfffe2fd8>
    3a14:	d9c00517 	ldw	r7,20(sp)
    3a18:	39ffffc4 	addi	r7,r7,-1
    3a1c:	d9c00515 	stw	r7,20(sp)
    3a20:	003d6d06 	br	2fd8 <__alt_data_end+0xfffe2fd8>
    3a24:	dd400a17 	ldw	r21,40(sp)
    3a28:	dd000817 	ldw	r20,32(sp)
    3a2c:	0023883a 	mov	r17,zero
    3a30:	003f4806 	br	3754 <__alt_data_end+0xfffe3754>
    3a34:	10e3c83a 	sub	r17,r2,r3
    3a38:	9448983a 	sll	r4,r18,r17
    3a3c:	003d3206 	br	2f08 <__alt_data_end+0xfffe2f08>
    3a40:	d8000e15 	stw	zero,56(sp)
    3a44:	003d7506 	br	301c <__alt_data_end+0xfffe301c>
    3a48:	b005883a 	mov	r2,r22
    3a4c:	003f4506 	br	3764 <__alt_data_end+0xfffe3764>
    3a50:	dc000915 	stw	r16,36(sp)
    3a54:	d9800a17 	ldw	r6,40(sp)
    3a58:	d9400917 	ldw	r5,36(sp)
    3a5c:	e009883a 	mov	r4,fp
    3a60:	00064300 	call	6430 <__pow5mult>
    3a64:	1021883a 	mov	r16,r2
    3a68:	003f5a06 	br	37d4 <__alt_data_end+0xfffe37d4>
    3a6c:	01c00044 	movi	r7,1
    3a70:	d9c00b15 	stw	r7,44(sp)
    3a74:	d8802217 	ldw	r2,136(sp)
    3a78:	0081280e 	bge	zero,r2,3f1c <_dtoa_r+0x11b0>
    3a7c:	100d883a 	mov	r6,r2
    3a80:	1021883a 	mov	r16,r2
    3a84:	d8800c15 	stw	r2,48(sp)
    3a88:	d8800615 	stw	r2,24(sp)
    3a8c:	003d8806 	br	30b0 <__alt_data_end+0xfffe30b0>
    3a90:	d8800617 	ldw	r2,24(sp)
    3a94:	00be9b16 	blt	zero,r2,3504 <__alt_data_end+0xfffe3504>
    3a98:	10010f1e 	bne	r2,zero,3ed8 <_dtoa_r+0x116c>
    3a9c:	880b883a 	mov	r5,r17
    3aa0:	000d883a 	mov	r6,zero
    3aa4:	01d00534 	movhi	r7,16404
    3aa8:	8009883a 	mov	r4,r16
    3aac:	000baf80 	call	baf8 <__muldf3>
    3ab0:	900d883a 	mov	r6,r18
    3ab4:	980f883a 	mov	r7,r19
    3ab8:	1009883a 	mov	r4,r2
    3abc:	180b883a 	mov	r5,r3
    3ac0:	000b9280 	call	b928 <__gedf2>
    3ac4:	002b883a 	mov	r21,zero
    3ac8:	0023883a 	mov	r17,zero
    3acc:	1000bf16 	blt	r2,zero,3dcc <_dtoa_r+0x1060>
    3ad0:	d9802217 	ldw	r6,136(sp)
    3ad4:	ddc00717 	ldw	r23,28(sp)
    3ad8:	018c303a 	nor	r6,zero,r6
    3adc:	d9800515 	stw	r6,20(sp)
    3ae0:	a80b883a 	mov	r5,r21
    3ae4:	e009883a 	mov	r4,fp
    3ae8:	0005e980 	call	5e98 <_Bfree>
    3aec:	883e4926 	beq	r17,zero,3414 <__alt_data_end+0xfffe3414>
    3af0:	003fad06 	br	39a8 <__alt_data_end+0xfffe39a8>
    3af4:	d9c01117 	ldw	r7,68(sp)
    3af8:	3801bc26 	beq	r7,zero,41ec <_dtoa_r+0x1480>
    3afc:	10810cc4 	addi	r2,r2,1075
    3b00:	dd400a17 	ldw	r21,40(sp)
    3b04:	dd000817 	ldw	r20,32(sp)
    3b08:	003f0a06 	br	3734 <__alt_data_end+0xfffe3734>
    3b0c:	00800704 	movi	r2,28
    3b10:	d9000817 	ldw	r4,32(sp)
    3b14:	a0a9883a 	add	r20,r20,r2
    3b18:	b0ad883a 	add	r22,r22,r2
    3b1c:	2089883a 	add	r4,r4,r2
    3b20:	d9000815 	stw	r4,32(sp)
    3b24:	003f5106 	br	386c <__alt_data_end+0xfffe386c>
    3b28:	d8c00317 	ldw	r3,12(sp)
    3b2c:	b8c1fc0e 	bge	r23,r3,4320 <_dtoa_r+0x15b4>
    3b30:	0027883a 	mov	r19,zero
    3b34:	b805883a 	mov	r2,r23
    3b38:	003f3e06 	br	3834 <__alt_data_end+0xfffe3834>
    3b3c:	880b883a 	mov	r5,r17
    3b40:	e009883a 	mov	r4,fp
    3b44:	000f883a 	mov	r7,zero
    3b48:	01800284 	movi	r6,10
    3b4c:	0005ec00 	call	5ec0 <__multadd>
    3b50:	d9000c17 	ldw	r4,48(sp)
    3b54:	1023883a 	mov	r17,r2
    3b58:	0102040e 	bge	zero,r4,436c <_dtoa_r+0x1600>
    3b5c:	d9000615 	stw	r4,24(sp)
    3b60:	0500050e 	bge	zero,r20,3b78 <_dtoa_r+0xe0c>
    3b64:	880b883a 	mov	r5,r17
    3b68:	a00d883a 	mov	r6,r20
    3b6c:	e009883a 	mov	r4,fp
    3b70:	00065700 	call	6570 <__lshift>
    3b74:	1023883a 	mov	r17,r2
    3b78:	9801241e 	bne	r19,zero,400c <_dtoa_r+0x12a0>
    3b7c:	8829883a 	mov	r20,r17
    3b80:	d9000617 	ldw	r4,24(sp)
    3b84:	dcc00717 	ldw	r19,28(sp)
    3b88:	9480004c 	andi	r18,r18,1
    3b8c:	20bfffc4 	addi	r2,r4,-1
    3b90:	9885883a 	add	r2,r19,r2
    3b94:	d8800415 	stw	r2,16(sp)
    3b98:	dc800615 	stw	r18,24(sp)
    3b9c:	a80b883a 	mov	r5,r21
    3ba0:	8009883a 	mov	r4,r16
    3ba4:	0002b6c0 	call	2b6c <quorem>
    3ba8:	880b883a 	mov	r5,r17
    3bac:	8009883a 	mov	r4,r16
    3bb0:	102f883a 	mov	r23,r2
    3bb4:	00066b80 	call	66b8 <__mcmp>
    3bb8:	a80b883a 	mov	r5,r21
    3bbc:	a00d883a 	mov	r6,r20
    3bc0:	e009883a 	mov	r4,fp
    3bc4:	102d883a 	mov	r22,r2
    3bc8:	00067180 	call	6718 <__mdiff>
    3bcc:	1007883a 	mov	r3,r2
    3bd0:	10800317 	ldw	r2,12(r2)
    3bd4:	bc800c04 	addi	r18,r23,48
    3bd8:	180b883a 	mov	r5,r3
    3bdc:	10004e1e 	bne	r2,zero,3d18 <_dtoa_r+0xfac>
    3be0:	8009883a 	mov	r4,r16
    3be4:	d8c01615 	stw	r3,88(sp)
    3be8:	00066b80 	call	66b8 <__mcmp>
    3bec:	d8c01617 	ldw	r3,88(sp)
    3bf0:	e009883a 	mov	r4,fp
    3bf4:	d8801615 	stw	r2,88(sp)
    3bf8:	180b883a 	mov	r5,r3
    3bfc:	0005e980 	call	5e98 <_Bfree>
    3c00:	d8801617 	ldw	r2,88(sp)
    3c04:	1000041e 	bne	r2,zero,3c18 <_dtoa_r+0xeac>
    3c08:	d9800317 	ldw	r6,12(sp)
    3c0c:	3000021e 	bne	r6,zero,3c18 <_dtoa_r+0xeac>
    3c10:	d8c00617 	ldw	r3,24(sp)
    3c14:	18003726 	beq	r3,zero,3cf4 <_dtoa_r+0xf88>
    3c18:	b0002016 	blt	r22,zero,3c9c <_dtoa_r+0xf30>
    3c1c:	b000041e 	bne	r22,zero,3c30 <_dtoa_r+0xec4>
    3c20:	d9000317 	ldw	r4,12(sp)
    3c24:	2000021e 	bne	r4,zero,3c30 <_dtoa_r+0xec4>
    3c28:	d8c00617 	ldw	r3,24(sp)
    3c2c:	18001b26 	beq	r3,zero,3c9c <_dtoa_r+0xf30>
    3c30:	00810716 	blt	zero,r2,4050 <_dtoa_r+0x12e4>
    3c34:	d8c00417 	ldw	r3,16(sp)
    3c38:	9d800044 	addi	r22,r19,1
    3c3c:	9c800005 	stb	r18,0(r19)
    3c40:	b02f883a 	mov	r23,r22
    3c44:	98c10626 	beq	r19,r3,4060 <_dtoa_r+0x12f4>
    3c48:	800b883a 	mov	r5,r16
    3c4c:	000f883a 	mov	r7,zero
    3c50:	01800284 	movi	r6,10
    3c54:	e009883a 	mov	r4,fp
    3c58:	0005ec00 	call	5ec0 <__multadd>
    3c5c:	1021883a 	mov	r16,r2
    3c60:	000f883a 	mov	r7,zero
    3c64:	01800284 	movi	r6,10
    3c68:	880b883a 	mov	r5,r17
    3c6c:	e009883a 	mov	r4,fp
    3c70:	8d002526 	beq	r17,r20,3d08 <_dtoa_r+0xf9c>
    3c74:	0005ec00 	call	5ec0 <__multadd>
    3c78:	a00b883a 	mov	r5,r20
    3c7c:	000f883a 	mov	r7,zero
    3c80:	01800284 	movi	r6,10
    3c84:	e009883a 	mov	r4,fp
    3c88:	1023883a 	mov	r17,r2
    3c8c:	0005ec00 	call	5ec0 <__multadd>
    3c90:	1029883a 	mov	r20,r2
    3c94:	b027883a 	mov	r19,r22
    3c98:	003fc006 	br	3b9c <__alt_data_end+0xfffe3b9c>
    3c9c:	9011883a 	mov	r8,r18
    3ca0:	00800e0e 	bge	zero,r2,3cdc <_dtoa_r+0xf70>
    3ca4:	800b883a 	mov	r5,r16
    3ca8:	01800044 	movi	r6,1
    3cac:	e009883a 	mov	r4,fp
    3cb0:	da001715 	stw	r8,92(sp)
    3cb4:	00065700 	call	6570 <__lshift>
    3cb8:	a80b883a 	mov	r5,r21
    3cbc:	1009883a 	mov	r4,r2
    3cc0:	1021883a 	mov	r16,r2
    3cc4:	00066b80 	call	66b8 <__mcmp>
    3cc8:	da001717 	ldw	r8,92(sp)
    3ccc:	0081960e 	bge	zero,r2,4328 <_dtoa_r+0x15bc>
    3cd0:	00800e44 	movi	r2,57
    3cd4:	40817026 	beq	r8,r2,4298 <_dtoa_r+0x152c>
    3cd8:	ba000c44 	addi	r8,r23,49
    3cdc:	8825883a 	mov	r18,r17
    3ce0:	9dc00044 	addi	r23,r19,1
    3ce4:	9a000005 	stb	r8,0(r19)
    3ce8:	a023883a 	mov	r17,r20
    3cec:	dc000915 	stw	r16,36(sp)
    3cf0:	003f2406 	br	3984 <__alt_data_end+0xfffe3984>
    3cf4:	00800e44 	movi	r2,57
    3cf8:	9011883a 	mov	r8,r18
    3cfc:	90816626 	beq	r18,r2,4298 <_dtoa_r+0x152c>
    3d00:	05bff516 	blt	zero,r22,3cd8 <__alt_data_end+0xfffe3cd8>
    3d04:	003ff506 	br	3cdc <__alt_data_end+0xfffe3cdc>
    3d08:	0005ec00 	call	5ec0 <__multadd>
    3d0c:	1023883a 	mov	r17,r2
    3d10:	1029883a 	mov	r20,r2
    3d14:	003fdf06 	br	3c94 <__alt_data_end+0xfffe3c94>
    3d18:	e009883a 	mov	r4,fp
    3d1c:	0005e980 	call	5e98 <_Bfree>
    3d20:	00800044 	movi	r2,1
    3d24:	003fbc06 	br	3c18 <__alt_data_end+0xfffe3c18>
    3d28:	a80b883a 	mov	r5,r21
    3d2c:	8009883a 	mov	r4,r16
    3d30:	00066b80 	call	66b8 <__mcmp>
    3d34:	103edb0e 	bge	r2,zero,38a4 <__alt_data_end+0xfffe38a4>
    3d38:	800b883a 	mov	r5,r16
    3d3c:	000f883a 	mov	r7,zero
    3d40:	01800284 	movi	r6,10
    3d44:	e009883a 	mov	r4,fp
    3d48:	0005ec00 	call	5ec0 <__multadd>
    3d4c:	1021883a 	mov	r16,r2
    3d50:	d8800517 	ldw	r2,20(sp)
    3d54:	d8c00b17 	ldw	r3,44(sp)
    3d58:	10bfffc4 	addi	r2,r2,-1
    3d5c:	d8800515 	stw	r2,20(sp)
    3d60:	183f761e 	bne	r3,zero,3b3c <__alt_data_end+0xfffe3b3c>
    3d64:	d9000c17 	ldw	r4,48(sp)
    3d68:	0101730e 	bge	zero,r4,4338 <_dtoa_r+0x15cc>
    3d6c:	d9000615 	stw	r4,24(sp)
    3d70:	003ed006 	br	38b4 <__alt_data_end+0xfffe38b4>
    3d74:	00800084 	movi	r2,2
    3d78:	3081861e 	bne	r6,r2,4394 <_dtoa_r+0x1628>
    3d7c:	d8000b15 	stw	zero,44(sp)
    3d80:	003f3c06 	br	3a74 <__alt_data_end+0xfffe3a74>
    3d84:	dc000917 	ldw	r16,36(sp)
    3d88:	003e9206 	br	37d4 <__alt_data_end+0xfffe37d4>
    3d8c:	d9c00317 	ldw	r7,12(sp)
    3d90:	00800084 	movi	r2,2
    3d94:	11fec50e 	bge	r2,r7,38ac <__alt_data_end+0xfffe38ac>
    3d98:	d9000617 	ldw	r4,24(sp)
    3d9c:	20013c1e 	bne	r4,zero,4290 <_dtoa_r+0x1524>
    3da0:	a80b883a 	mov	r5,r21
    3da4:	000f883a 	mov	r7,zero
    3da8:	01800144 	movi	r6,5
    3dac:	e009883a 	mov	r4,fp
    3db0:	0005ec00 	call	5ec0 <__multadd>
    3db4:	100b883a 	mov	r5,r2
    3db8:	8009883a 	mov	r4,r16
    3dbc:	102b883a 	mov	r21,r2
    3dc0:	00066b80 	call	66b8 <__mcmp>
    3dc4:	dc000915 	stw	r16,36(sp)
    3dc8:	00bf410e 	bge	zero,r2,3ad0 <__alt_data_end+0xfffe3ad0>
    3dcc:	d9c00717 	ldw	r7,28(sp)
    3dd0:	00800c44 	movi	r2,49
    3dd4:	38800005 	stb	r2,0(r7)
    3dd8:	d8800517 	ldw	r2,20(sp)
    3ddc:	3dc00044 	addi	r23,r7,1
    3de0:	10800044 	addi	r2,r2,1
    3de4:	d8800515 	stw	r2,20(sp)
    3de8:	003f3d06 	br	3ae0 <__alt_data_end+0xfffe3ae0>
    3dec:	d9800517 	ldw	r6,20(sp)
    3df0:	d9c00717 	ldw	r7,28(sp)
    3df4:	00800c44 	movi	r2,49
    3df8:	31800044 	addi	r6,r6,1
    3dfc:	d9800515 	stw	r6,20(sp)
    3e00:	38800005 	stb	r2,0(r7)
    3e04:	003edf06 	br	3984 <__alt_data_end+0xfffe3984>
    3e08:	d8000b15 	stw	zero,44(sp)
    3e0c:	003c9f06 	br	308c <__alt_data_end+0xfffe308c>
    3e10:	903e7e1e 	bne	r18,zero,380c <__alt_data_end+0xfffe380c>
    3e14:	00800434 	movhi	r2,16
    3e18:	10bfffc4 	addi	r2,r2,-1
    3e1c:	9884703a 	and	r2,r19,r2
    3e20:	1000ea1e 	bne	r2,zero,41cc <_dtoa_r+0x1460>
    3e24:	9cdffc2c 	andhi	r19,r19,32752
    3e28:	9800e826 	beq	r19,zero,41cc <_dtoa_r+0x1460>
    3e2c:	d9c00817 	ldw	r7,32(sp)
    3e30:	b5800044 	addi	r22,r22,1
    3e34:	04c00044 	movi	r19,1
    3e38:	39c00044 	addi	r7,r7,1
    3e3c:	d9c00815 	stw	r7,32(sp)
    3e40:	d8800d17 	ldw	r2,52(sp)
    3e44:	103e721e 	bne	r2,zero,3810 <__alt_data_end+0xfffe3810>
    3e48:	00800044 	movi	r2,1
    3e4c:	003e7906 	br	3834 <__alt_data_end+0xfffe3834>
    3e50:	8009883a 	mov	r4,r16
    3e54:	000cb8c0 	call	cb8c <__floatsidf>
    3e58:	d9800f17 	ldw	r6,60(sp)
    3e5c:	d9c01017 	ldw	r7,64(sp)
    3e60:	1009883a 	mov	r4,r2
    3e64:	180b883a 	mov	r5,r3
    3e68:	000baf80 	call	baf8 <__muldf3>
    3e6c:	000d883a 	mov	r6,zero
    3e70:	01d00734 	movhi	r7,16412
    3e74:	1009883a 	mov	r4,r2
    3e78:	180b883a 	mov	r5,r3
    3e7c:	000a70c0 	call	a70c <__adddf3>
    3e80:	047f3034 	movhi	r17,64704
    3e84:	1021883a 	mov	r16,r2
    3e88:	1c63883a 	add	r17,r3,r17
    3e8c:	d9000f17 	ldw	r4,60(sp)
    3e90:	d9401017 	ldw	r5,64(sp)
    3e94:	000d883a 	mov	r6,zero
    3e98:	01d00534 	movhi	r7,16404
    3e9c:	000c2100 	call	c210 <__subdf3>
    3ea0:	800d883a 	mov	r6,r16
    3ea4:	880f883a 	mov	r7,r17
    3ea8:	1009883a 	mov	r4,r2
    3eac:	180b883a 	mov	r5,r3
    3eb0:	102b883a 	mov	r21,r2
    3eb4:	1829883a 	mov	r20,r3
    3eb8:	000b9280 	call	b928 <__gedf2>
    3ebc:	00806c16 	blt	zero,r2,4070 <_dtoa_r+0x1304>
    3ec0:	89e0003c 	xorhi	r7,r17,32768
    3ec4:	800d883a 	mov	r6,r16
    3ec8:	a809883a 	mov	r4,r21
    3ecc:	a00b883a 	mov	r5,r20
    3ed0:	000ba040 	call	ba04 <__ledf2>
    3ed4:	103d7e0e 	bge	r2,zero,34d0 <__alt_data_end+0xfffe34d0>
    3ed8:	002b883a 	mov	r21,zero
    3edc:	0023883a 	mov	r17,zero
    3ee0:	003efb06 	br	3ad0 <__alt_data_end+0xfffe3ad0>
    3ee4:	d8800717 	ldw	r2,28(sp)
    3ee8:	003bd006 	br	2e2c <__alt_data_end+0xfffe2e2c>
    3eec:	d9000a17 	ldw	r4,40(sp)
    3ef0:	d9800d17 	ldw	r6,52(sp)
    3ef4:	dd400a15 	stw	r21,40(sp)
    3ef8:	a905c83a 	sub	r2,r21,r4
    3efc:	308d883a 	add	r6,r6,r2
    3f00:	d9800d15 	stw	r6,52(sp)
    3f04:	002b883a 	mov	r21,zero
    3f08:	003e0606 	br	3724 <__alt_data_end+0xfffe3724>
    3f0c:	9023883a 	mov	r17,r18
    3f10:	9829883a 	mov	r20,r19
    3f14:	04000084 	movi	r16,2
    3f18:	003c9206 	br	3164 <__alt_data_end+0xfffe3164>
    3f1c:	04000044 	movi	r16,1
    3f20:	dc000c15 	stw	r16,48(sp)
    3f24:	dc000615 	stw	r16,24(sp)
    3f28:	dc002215 	stw	r16,136(sp)
    3f2c:	e0001115 	stw	zero,68(fp)
    3f30:	000b883a 	mov	r5,zero
    3f34:	003c6906 	br	30dc <__alt_data_end+0xfffe30dc>
    3f38:	3021883a 	mov	r16,r6
    3f3c:	003ffb06 	br	3f2c <__alt_data_end+0xfffe3f2c>
    3f40:	1000021e 	bne	r2,zero,3f4c <_dtoa_r+0x11e0>
    3f44:	4200004c 	andi	r8,r8,1
    3f48:	403e7d1e 	bne	r8,zero,3940 <__alt_data_end+0xfffe3940>
    3f4c:	01000c04 	movi	r4,48
    3f50:	00000106 	br	3f58 <_dtoa_r+0x11ec>
    3f54:	102f883a 	mov	r23,r2
    3f58:	b8bfffc4 	addi	r2,r23,-1
    3f5c:	10c00007 	ldb	r3,0(r2)
    3f60:	193ffc26 	beq	r3,r4,3f54 <__alt_data_end+0xfffe3f54>
    3f64:	003e8706 	br	3984 <__alt_data_end+0xfffe3984>
    3f68:	d8800517 	ldw	r2,20(sp)
    3f6c:	00a3c83a 	sub	r17,zero,r2
    3f70:	8800a426 	beq	r17,zero,4204 <_dtoa_r+0x1498>
    3f74:	888003cc 	andi	r2,r17,15
    3f78:	100490fa 	slli	r2,r2,3
    3f7c:	00c00074 	movhi	r3,1
    3f80:	18fd7004 	addi	r3,r3,-2624
    3f84:	1885883a 	add	r2,r3,r2
    3f88:	11800017 	ldw	r6,0(r2)
    3f8c:	11c00117 	ldw	r7,4(r2)
    3f90:	9009883a 	mov	r4,r18
    3f94:	980b883a 	mov	r5,r19
    3f98:	8823d13a 	srai	r17,r17,4
    3f9c:	000baf80 	call	baf8 <__muldf3>
    3fa0:	d8800f15 	stw	r2,60(sp)
    3fa4:	d8c01015 	stw	r3,64(sp)
    3fa8:	8800e826 	beq	r17,zero,434c <_dtoa_r+0x15e0>
    3fac:	05000074 	movhi	r20,1
    3fb0:	a53d6604 	addi	r20,r20,-2664
    3fb4:	04000084 	movi	r16,2
    3fb8:	8980004c 	andi	r6,r17,1
    3fbc:	1009883a 	mov	r4,r2
    3fc0:	8823d07a 	srai	r17,r17,1
    3fc4:	180b883a 	mov	r5,r3
    3fc8:	30000426 	beq	r6,zero,3fdc <_dtoa_r+0x1270>
    3fcc:	a1800017 	ldw	r6,0(r20)
    3fd0:	a1c00117 	ldw	r7,4(r20)
    3fd4:	84000044 	addi	r16,r16,1
    3fd8:	000baf80 	call	baf8 <__muldf3>
    3fdc:	a5000204 	addi	r20,r20,8
    3fe0:	883ff51e 	bne	r17,zero,3fb8 <__alt_data_end+0xfffe3fb8>
    3fe4:	d8800f15 	stw	r2,60(sp)
    3fe8:	d8c01015 	stw	r3,64(sp)
    3fec:	003c7606 	br	31c8 <__alt_data_end+0xfffe31c8>
    3ff0:	00c00c04 	movi	r3,48
    3ff4:	10c00005 	stb	r3,0(r2)
    3ff8:	d8c00517 	ldw	r3,20(sp)
    3ffc:	bd3fffc3 	ldbu	r20,-1(r23)
    4000:	18c00044 	addi	r3,r3,1
    4004:	d8c00515 	stw	r3,20(sp)
    4008:	003db906 	br	36f0 <__alt_data_end+0xfffe36f0>
    400c:	89400117 	ldw	r5,4(r17)
    4010:	e009883a 	mov	r4,fp
    4014:	0005df00 	call	5df0 <_Balloc>
    4018:	89800417 	ldw	r6,16(r17)
    401c:	89400304 	addi	r5,r17,12
    4020:	11000304 	addi	r4,r2,12
    4024:	31800084 	addi	r6,r6,2
    4028:	318d883a 	add	r6,r6,r6
    402c:	318d883a 	add	r6,r6,r6
    4030:	1027883a 	mov	r19,r2
    4034:	0005b800 	call	5b80 <memcpy>
    4038:	01800044 	movi	r6,1
    403c:	980b883a 	mov	r5,r19
    4040:	e009883a 	mov	r4,fp
    4044:	00065700 	call	6570 <__lshift>
    4048:	1029883a 	mov	r20,r2
    404c:	003ecc06 	br	3b80 <__alt_data_end+0xfffe3b80>
    4050:	00800e44 	movi	r2,57
    4054:	90809026 	beq	r18,r2,4298 <_dtoa_r+0x152c>
    4058:	92000044 	addi	r8,r18,1
    405c:	003f1f06 	br	3cdc <__alt_data_end+0xfffe3cdc>
    4060:	9011883a 	mov	r8,r18
    4064:	8825883a 	mov	r18,r17
    4068:	a023883a 	mov	r17,r20
    406c:	003e2906 	br	3914 <__alt_data_end+0xfffe3914>
    4070:	002b883a 	mov	r21,zero
    4074:	0023883a 	mov	r17,zero
    4078:	003f5406 	br	3dcc <__alt_data_end+0xfffe3dcc>
    407c:	61bfffc4 	addi	r6,r12,-1
    4080:	300490fa 	slli	r2,r6,3
    4084:	00c00074 	movhi	r3,1
    4088:	18fd7004 	addi	r3,r3,-2624
    408c:	1885883a 	add	r2,r3,r2
    4090:	11000017 	ldw	r4,0(r2)
    4094:	11400117 	ldw	r5,4(r2)
    4098:	d8800717 	ldw	r2,28(sp)
    409c:	880f883a 	mov	r7,r17
    40a0:	d9801215 	stw	r6,72(sp)
    40a4:	800d883a 	mov	r6,r16
    40a8:	db001615 	stw	r12,88(sp)
    40ac:	15c00044 	addi	r23,r2,1
    40b0:	000baf80 	call	baf8 <__muldf3>
    40b4:	d9401017 	ldw	r5,64(sp)
    40b8:	d9000f17 	ldw	r4,60(sp)
    40bc:	d8c01515 	stw	r3,84(sp)
    40c0:	d8801415 	stw	r2,80(sp)
    40c4:	000cb0c0 	call	cb0c <__fixdfsi>
    40c8:	1009883a 	mov	r4,r2
    40cc:	1021883a 	mov	r16,r2
    40d0:	000cb8c0 	call	cb8c <__floatsidf>
    40d4:	d9000f17 	ldw	r4,60(sp)
    40d8:	d9401017 	ldw	r5,64(sp)
    40dc:	100d883a 	mov	r6,r2
    40e0:	180f883a 	mov	r7,r3
    40e4:	000c2100 	call	c210 <__subdf3>
    40e8:	1829883a 	mov	r20,r3
    40ec:	d8c00717 	ldw	r3,28(sp)
    40f0:	84000c04 	addi	r16,r16,48
    40f4:	1023883a 	mov	r17,r2
    40f8:	1c000005 	stb	r16,0(r3)
    40fc:	db001617 	ldw	r12,88(sp)
    4100:	00800044 	movi	r2,1
    4104:	60802226 	beq	r12,r2,4190 <_dtoa_r+0x1424>
    4108:	d9c00717 	ldw	r7,28(sp)
    410c:	8805883a 	mov	r2,r17
    4110:	b82b883a 	mov	r21,r23
    4114:	3b19883a 	add	r12,r7,r12
    4118:	6023883a 	mov	r17,r12
    411c:	a007883a 	mov	r3,r20
    4120:	dc800f15 	stw	r18,60(sp)
    4124:	000d883a 	mov	r6,zero
    4128:	01d00934 	movhi	r7,16420
    412c:	1009883a 	mov	r4,r2
    4130:	180b883a 	mov	r5,r3
    4134:	000baf80 	call	baf8 <__muldf3>
    4138:	180b883a 	mov	r5,r3
    413c:	1009883a 	mov	r4,r2
    4140:	1829883a 	mov	r20,r3
    4144:	1025883a 	mov	r18,r2
    4148:	000cb0c0 	call	cb0c <__fixdfsi>
    414c:	1009883a 	mov	r4,r2
    4150:	1021883a 	mov	r16,r2
    4154:	000cb8c0 	call	cb8c <__floatsidf>
    4158:	100d883a 	mov	r6,r2
    415c:	180f883a 	mov	r7,r3
    4160:	9009883a 	mov	r4,r18
    4164:	a00b883a 	mov	r5,r20
    4168:	84000c04 	addi	r16,r16,48
    416c:	000c2100 	call	c210 <__subdf3>
    4170:	ad400044 	addi	r21,r21,1
    4174:	ac3fffc5 	stb	r16,-1(r21)
    4178:	ac7fea1e 	bne	r21,r17,4124 <__alt_data_end+0xfffe4124>
    417c:	1023883a 	mov	r17,r2
    4180:	d8801217 	ldw	r2,72(sp)
    4184:	dc800f17 	ldw	r18,60(sp)
    4188:	1829883a 	mov	r20,r3
    418c:	b8af883a 	add	r23,r23,r2
    4190:	d9001417 	ldw	r4,80(sp)
    4194:	d9401517 	ldw	r5,84(sp)
    4198:	000d883a 	mov	r6,zero
    419c:	01cff834 	movhi	r7,16352
    41a0:	000a70c0 	call	a70c <__adddf3>
    41a4:	880d883a 	mov	r6,r17
    41a8:	a00f883a 	mov	r7,r20
    41ac:	1009883a 	mov	r4,r2
    41b0:	180b883a 	mov	r5,r3
    41b4:	000ba040 	call	ba04 <__ledf2>
    41b8:	10003e0e 	bge	r2,zero,42b4 <_dtoa_r+0x1548>
    41bc:	d9001317 	ldw	r4,76(sp)
    41c0:	bd3fffc3 	ldbu	r20,-1(r23)
    41c4:	d9000515 	stw	r4,20(sp)
    41c8:	003d3b06 	br	36b8 <__alt_data_end+0xfffe36b8>
    41cc:	0027883a 	mov	r19,zero
    41d0:	003f1b06 	br	3e40 <__alt_data_end+0xfffe3e40>
    41d4:	d8800817 	ldw	r2,32(sp)
    41d8:	11e9c83a 	sub	r20,r2,r7
    41dc:	0005883a 	mov	r2,zero
    41e0:	003d5406 	br	3734 <__alt_data_end+0xfffe3734>
    41e4:	00800044 	movi	r2,1
    41e8:	003dc706 	br	3908 <__alt_data_end+0xfffe3908>
    41ec:	d8c00217 	ldw	r3,8(sp)
    41f0:	00800d84 	movi	r2,54
    41f4:	dd400a17 	ldw	r21,40(sp)
    41f8:	10c5c83a 	sub	r2,r2,r3
    41fc:	dd000817 	ldw	r20,32(sp)
    4200:	003d4c06 	br	3734 <__alt_data_end+0xfffe3734>
    4204:	dc800f15 	stw	r18,60(sp)
    4208:	dcc01015 	stw	r19,64(sp)
    420c:	04000084 	movi	r16,2
    4210:	003bed06 	br	31c8 <__alt_data_end+0xfffe31c8>
    4214:	d9000617 	ldw	r4,24(sp)
    4218:	203f0d26 	beq	r4,zero,3e50 <__alt_data_end+0xfffe3e50>
    421c:	d9800c17 	ldw	r6,48(sp)
    4220:	01bcab0e 	bge	zero,r6,34d0 <__alt_data_end+0xfffe34d0>
    4224:	d9401017 	ldw	r5,64(sp)
    4228:	d9000f17 	ldw	r4,60(sp)
    422c:	000d883a 	mov	r6,zero
    4230:	01d00934 	movhi	r7,16420
    4234:	000baf80 	call	baf8 <__muldf3>
    4238:	81000044 	addi	r4,r16,1
    423c:	d8800f15 	stw	r2,60(sp)
    4240:	d8c01015 	stw	r3,64(sp)
    4244:	000cb8c0 	call	cb8c <__floatsidf>
    4248:	d9800f17 	ldw	r6,60(sp)
    424c:	d9c01017 	ldw	r7,64(sp)
    4250:	1009883a 	mov	r4,r2
    4254:	180b883a 	mov	r5,r3
    4258:	000baf80 	call	baf8 <__muldf3>
    425c:	01d00734 	movhi	r7,16412
    4260:	000d883a 	mov	r6,zero
    4264:	1009883a 	mov	r4,r2
    4268:	180b883a 	mov	r5,r3
    426c:	000a70c0 	call	a70c <__adddf3>
    4270:	d9c00517 	ldw	r7,20(sp)
    4274:	047f3034 	movhi	r17,64704
    4278:	1021883a 	mov	r16,r2
    427c:	39ffffc4 	addi	r7,r7,-1
    4280:	d9c01315 	stw	r7,76(sp)
    4284:	1c63883a 	add	r17,r3,r17
    4288:	db000c17 	ldw	r12,48(sp)
    428c:	003bea06 	br	3238 <__alt_data_end+0xfffe3238>
    4290:	dc000915 	stw	r16,36(sp)
    4294:	003e0e06 	br	3ad0 <__alt_data_end+0xfffe3ad0>
    4298:	01000e44 	movi	r4,57
    429c:	8825883a 	mov	r18,r17
    42a0:	9dc00044 	addi	r23,r19,1
    42a4:	99000005 	stb	r4,0(r19)
    42a8:	a023883a 	mov	r17,r20
    42ac:	dc000915 	stw	r16,36(sp)
    42b0:	003da406 	br	3944 <__alt_data_end+0xfffe3944>
    42b4:	d9801417 	ldw	r6,80(sp)
    42b8:	d9c01517 	ldw	r7,84(sp)
    42bc:	0009883a 	mov	r4,zero
    42c0:	014ff834 	movhi	r5,16352
    42c4:	000c2100 	call	c210 <__subdf3>
    42c8:	880d883a 	mov	r6,r17
    42cc:	a00f883a 	mov	r7,r20
    42d0:	1009883a 	mov	r4,r2
    42d4:	180b883a 	mov	r5,r3
    42d8:	000b9280 	call	b928 <__gedf2>
    42dc:	00bc7c0e 	bge	zero,r2,34d0 <__alt_data_end+0xfffe34d0>
    42e0:	01000c04 	movi	r4,48
    42e4:	00000106 	br	42ec <_dtoa_r+0x1580>
    42e8:	102f883a 	mov	r23,r2
    42ec:	b8bfffc4 	addi	r2,r23,-1
    42f0:	10c00007 	ldb	r3,0(r2)
    42f4:	193ffc26 	beq	r3,r4,42e8 <__alt_data_end+0xfffe42e8>
    42f8:	d9801317 	ldw	r6,76(sp)
    42fc:	d9800515 	stw	r6,20(sp)
    4300:	003c4406 	br	3414 <__alt_data_end+0xfffe3414>
    4304:	d9801317 	ldw	r6,76(sp)
    4308:	d9800515 	stw	r6,20(sp)
    430c:	003cea06 	br	36b8 <__alt_data_end+0xfffe36b8>
    4310:	dd800f17 	ldw	r22,60(sp)
    4314:	dcc01017 	ldw	r19,64(sp)
    4318:	dc801217 	ldw	r18,72(sp)
    431c:	003c6c06 	br	34d0 <__alt_data_end+0xfffe34d0>
    4320:	903e031e 	bne	r18,zero,3b30 <__alt_data_end+0xfffe3b30>
    4324:	003ebb06 	br	3e14 <__alt_data_end+0xfffe3e14>
    4328:	103e6c1e 	bne	r2,zero,3cdc <__alt_data_end+0xfffe3cdc>
    432c:	4080004c 	andi	r2,r8,1
    4330:	103e6a26 	beq	r2,zero,3cdc <__alt_data_end+0xfffe3cdc>
    4334:	003e6606 	br	3cd0 <__alt_data_end+0xfffe3cd0>
    4338:	d8c00317 	ldw	r3,12(sp)
    433c:	00800084 	movi	r2,2
    4340:	10c02916 	blt	r2,r3,43e8 <_dtoa_r+0x167c>
    4344:	d9000c17 	ldw	r4,48(sp)
    4348:	003e8806 	br	3d6c <__alt_data_end+0xfffe3d6c>
    434c:	04000084 	movi	r16,2
    4350:	003b9d06 	br	31c8 <__alt_data_end+0xfffe31c8>
    4354:	d9001317 	ldw	r4,76(sp)
    4358:	d9000515 	stw	r4,20(sp)
    435c:	003cd606 	br	36b8 <__alt_data_end+0xfffe36b8>
    4360:	d8801317 	ldw	r2,76(sp)
    4364:	d8800515 	stw	r2,20(sp)
    4368:	003c2a06 	br	3414 <__alt_data_end+0xfffe3414>
    436c:	d9800317 	ldw	r6,12(sp)
    4370:	00800084 	movi	r2,2
    4374:	11801516 	blt	r2,r6,43cc <_dtoa_r+0x1660>
    4378:	d9c00c17 	ldw	r7,48(sp)
    437c:	d9c00615 	stw	r7,24(sp)
    4380:	003df706 	br	3b60 <__alt_data_end+0xfffe3b60>
    4384:	193d3926 	beq	r3,r4,386c <__alt_data_end+0xfffe386c>
    4388:	00c00f04 	movi	r3,60
    438c:	1885c83a 	sub	r2,r3,r2
    4390:	003ddf06 	br	3b10 <__alt_data_end+0xfffe3b10>
    4394:	e009883a 	mov	r4,fp
    4398:	e0001115 	stw	zero,68(fp)
    439c:	000b883a 	mov	r5,zero
    43a0:	0005df00 	call	5df0 <_Balloc>
    43a4:	d8800715 	stw	r2,28(sp)
    43a8:	d8c00717 	ldw	r3,28(sp)
    43ac:	00bfffc4 	movi	r2,-1
    43b0:	01000044 	movi	r4,1
    43b4:	d8800c15 	stw	r2,48(sp)
    43b8:	e0c01015 	stw	r3,64(fp)
    43bc:	d9000b15 	stw	r4,44(sp)
    43c0:	d8800615 	stw	r2,24(sp)
    43c4:	d8002215 	stw	zero,136(sp)
    43c8:	003c4106 	br	34d0 <__alt_data_end+0xfffe34d0>
    43cc:	d8c00c17 	ldw	r3,48(sp)
    43d0:	d8c00615 	stw	r3,24(sp)
    43d4:	003e7006 	br	3d98 <__alt_data_end+0xfffe3d98>
    43d8:	04400044 	movi	r17,1
    43dc:	003b2006 	br	3060 <__alt_data_end+0xfffe3060>
    43e0:	000b883a 	mov	r5,zero
    43e4:	003b3d06 	br	30dc <__alt_data_end+0xfffe30dc>
    43e8:	d8800c17 	ldw	r2,48(sp)
    43ec:	d8800615 	stw	r2,24(sp)
    43f0:	003e6906 	br	3d98 <__alt_data_end+0xfffe3d98>

000043f4 <__sflush_r>:
    43f4:	2880030b 	ldhu	r2,12(r5)
    43f8:	defffb04 	addi	sp,sp,-20
    43fc:	dcc00315 	stw	r19,12(sp)
    4400:	dc400115 	stw	r17,4(sp)
    4404:	dfc00415 	stw	ra,16(sp)
    4408:	dc800215 	stw	r18,8(sp)
    440c:	dc000015 	stw	r16,0(sp)
    4410:	10c0020c 	andi	r3,r2,8
    4414:	2823883a 	mov	r17,r5
    4418:	2027883a 	mov	r19,r4
    441c:	1800311e 	bne	r3,zero,44e4 <__sflush_r+0xf0>
    4420:	28c00117 	ldw	r3,4(r5)
    4424:	10820014 	ori	r2,r2,2048
    4428:	2880030d 	sth	r2,12(r5)
    442c:	00c04b0e 	bge	zero,r3,455c <__sflush_r+0x168>
    4430:	8a000a17 	ldw	r8,40(r17)
    4434:	40002326 	beq	r8,zero,44c4 <__sflush_r+0xd0>
    4438:	9c000017 	ldw	r16,0(r19)
    443c:	10c4000c 	andi	r3,r2,4096
    4440:	98000015 	stw	zero,0(r19)
    4444:	18004826 	beq	r3,zero,4568 <__sflush_r+0x174>
    4448:	89801417 	ldw	r6,80(r17)
    444c:	10c0010c 	andi	r3,r2,4
    4450:	18000626 	beq	r3,zero,446c <__sflush_r+0x78>
    4454:	88c00117 	ldw	r3,4(r17)
    4458:	88800c17 	ldw	r2,48(r17)
    445c:	30cdc83a 	sub	r6,r6,r3
    4460:	10000226 	beq	r2,zero,446c <__sflush_r+0x78>
    4464:	88800f17 	ldw	r2,60(r17)
    4468:	308dc83a 	sub	r6,r6,r2
    446c:	89400717 	ldw	r5,28(r17)
    4470:	000f883a 	mov	r7,zero
    4474:	9809883a 	mov	r4,r19
    4478:	403ee83a 	callr	r8
    447c:	00ffffc4 	movi	r3,-1
    4480:	10c04426 	beq	r2,r3,4594 <__sflush_r+0x1a0>
    4484:	88c0030b 	ldhu	r3,12(r17)
    4488:	89000417 	ldw	r4,16(r17)
    448c:	88000115 	stw	zero,4(r17)
    4490:	197dffcc 	andi	r5,r3,63487
    4494:	8940030d 	sth	r5,12(r17)
    4498:	89000015 	stw	r4,0(r17)
    449c:	18c4000c 	andi	r3,r3,4096
    44a0:	18002c1e 	bne	r3,zero,4554 <__sflush_r+0x160>
    44a4:	89400c17 	ldw	r5,48(r17)
    44a8:	9c000015 	stw	r16,0(r19)
    44ac:	28000526 	beq	r5,zero,44c4 <__sflush_r+0xd0>
    44b0:	88801004 	addi	r2,r17,64
    44b4:	28800226 	beq	r5,r2,44c0 <__sflush_r+0xcc>
    44b8:	9809883a 	mov	r4,r19
    44bc:	0004b600 	call	4b60 <_free_r>
    44c0:	88000c15 	stw	zero,48(r17)
    44c4:	0005883a 	mov	r2,zero
    44c8:	dfc00417 	ldw	ra,16(sp)
    44cc:	dcc00317 	ldw	r19,12(sp)
    44d0:	dc800217 	ldw	r18,8(sp)
    44d4:	dc400117 	ldw	r17,4(sp)
    44d8:	dc000017 	ldw	r16,0(sp)
    44dc:	dec00504 	addi	sp,sp,20
    44e0:	f800283a 	ret
    44e4:	2c800417 	ldw	r18,16(r5)
    44e8:	903ff626 	beq	r18,zero,44c4 <__alt_data_end+0xfffe44c4>
    44ec:	2c000017 	ldw	r16,0(r5)
    44f0:	108000cc 	andi	r2,r2,3
    44f4:	2c800015 	stw	r18,0(r5)
    44f8:	84a1c83a 	sub	r16,r16,r18
    44fc:	1000131e 	bne	r2,zero,454c <__sflush_r+0x158>
    4500:	28800517 	ldw	r2,20(r5)
    4504:	88800215 	stw	r2,8(r17)
    4508:	04000316 	blt	zero,r16,4518 <__sflush_r+0x124>
    450c:	003fed06 	br	44c4 <__alt_data_end+0xfffe44c4>
    4510:	90a5883a 	add	r18,r18,r2
    4514:	043feb0e 	bge	zero,r16,44c4 <__alt_data_end+0xfffe44c4>
    4518:	88800917 	ldw	r2,36(r17)
    451c:	89400717 	ldw	r5,28(r17)
    4520:	800f883a 	mov	r7,r16
    4524:	900d883a 	mov	r6,r18
    4528:	9809883a 	mov	r4,r19
    452c:	103ee83a 	callr	r2
    4530:	80a1c83a 	sub	r16,r16,r2
    4534:	00bff616 	blt	zero,r2,4510 <__alt_data_end+0xfffe4510>
    4538:	88c0030b 	ldhu	r3,12(r17)
    453c:	00bfffc4 	movi	r2,-1
    4540:	18c01014 	ori	r3,r3,64
    4544:	88c0030d 	sth	r3,12(r17)
    4548:	003fdf06 	br	44c8 <__alt_data_end+0xfffe44c8>
    454c:	0005883a 	mov	r2,zero
    4550:	003fec06 	br	4504 <__alt_data_end+0xfffe4504>
    4554:	88801415 	stw	r2,80(r17)
    4558:	003fd206 	br	44a4 <__alt_data_end+0xfffe44a4>
    455c:	28c00f17 	ldw	r3,60(r5)
    4560:	00ffb316 	blt	zero,r3,4430 <__alt_data_end+0xfffe4430>
    4564:	003fd706 	br	44c4 <__alt_data_end+0xfffe44c4>
    4568:	89400717 	ldw	r5,28(r17)
    456c:	000d883a 	mov	r6,zero
    4570:	01c00044 	movi	r7,1
    4574:	9809883a 	mov	r4,r19
    4578:	403ee83a 	callr	r8
    457c:	100d883a 	mov	r6,r2
    4580:	00bfffc4 	movi	r2,-1
    4584:	30801426 	beq	r6,r2,45d8 <__sflush_r+0x1e4>
    4588:	8880030b 	ldhu	r2,12(r17)
    458c:	8a000a17 	ldw	r8,40(r17)
    4590:	003fae06 	br	444c <__alt_data_end+0xfffe444c>
    4594:	98c00017 	ldw	r3,0(r19)
    4598:	183fba26 	beq	r3,zero,4484 <__alt_data_end+0xfffe4484>
    459c:	01000744 	movi	r4,29
    45a0:	19000626 	beq	r3,r4,45bc <__sflush_r+0x1c8>
    45a4:	01000584 	movi	r4,22
    45a8:	19000426 	beq	r3,r4,45bc <__sflush_r+0x1c8>
    45ac:	88c0030b 	ldhu	r3,12(r17)
    45b0:	18c01014 	ori	r3,r3,64
    45b4:	88c0030d 	sth	r3,12(r17)
    45b8:	003fc306 	br	44c8 <__alt_data_end+0xfffe44c8>
    45bc:	8880030b 	ldhu	r2,12(r17)
    45c0:	88c00417 	ldw	r3,16(r17)
    45c4:	88000115 	stw	zero,4(r17)
    45c8:	10bdffcc 	andi	r2,r2,63487
    45cc:	8880030d 	sth	r2,12(r17)
    45d0:	88c00015 	stw	r3,0(r17)
    45d4:	003fb306 	br	44a4 <__alt_data_end+0xfffe44a4>
    45d8:	98800017 	ldw	r2,0(r19)
    45dc:	103fea26 	beq	r2,zero,4588 <__alt_data_end+0xfffe4588>
    45e0:	00c00744 	movi	r3,29
    45e4:	10c00226 	beq	r2,r3,45f0 <__sflush_r+0x1fc>
    45e8:	00c00584 	movi	r3,22
    45ec:	10c0031e 	bne	r2,r3,45fc <__sflush_r+0x208>
    45f0:	9c000015 	stw	r16,0(r19)
    45f4:	0005883a 	mov	r2,zero
    45f8:	003fb306 	br	44c8 <__alt_data_end+0xfffe44c8>
    45fc:	88c0030b 	ldhu	r3,12(r17)
    4600:	3005883a 	mov	r2,r6
    4604:	18c01014 	ori	r3,r3,64
    4608:	88c0030d 	sth	r3,12(r17)
    460c:	003fae06 	br	44c8 <__alt_data_end+0xfffe44c8>

00004610 <_fflush_r>:
    4610:	defffd04 	addi	sp,sp,-12
    4614:	dc000115 	stw	r16,4(sp)
    4618:	dfc00215 	stw	ra,8(sp)
    461c:	2021883a 	mov	r16,r4
    4620:	20000226 	beq	r4,zero,462c <_fflush_r+0x1c>
    4624:	20800e17 	ldw	r2,56(r4)
    4628:	10000c26 	beq	r2,zero,465c <_fflush_r+0x4c>
    462c:	2880030f 	ldh	r2,12(r5)
    4630:	1000051e 	bne	r2,zero,4648 <_fflush_r+0x38>
    4634:	0005883a 	mov	r2,zero
    4638:	dfc00217 	ldw	ra,8(sp)
    463c:	dc000117 	ldw	r16,4(sp)
    4640:	dec00304 	addi	sp,sp,12
    4644:	f800283a 	ret
    4648:	8009883a 	mov	r4,r16
    464c:	dfc00217 	ldw	ra,8(sp)
    4650:	dc000117 	ldw	r16,4(sp)
    4654:	dec00304 	addi	sp,sp,12
    4658:	00043f41 	jmpi	43f4 <__sflush_r>
    465c:	d9400015 	stw	r5,0(sp)
    4660:	00049ec0 	call	49ec <__sinit>
    4664:	d9400017 	ldw	r5,0(sp)
    4668:	003ff006 	br	462c <__alt_data_end+0xfffe462c>

0000466c <fflush>:
    466c:	20000526 	beq	r4,zero,4684 <fflush+0x18>
    4670:	00800074 	movhi	r2,1
    4674:	1084a304 	addi	r2,r2,4748
    4678:	200b883a 	mov	r5,r4
    467c:	11000017 	ldw	r4,0(r2)
    4680:	00046101 	jmpi	4610 <_fflush_r>
    4684:	00800074 	movhi	r2,1
    4688:	1084a204 	addi	r2,r2,4744
    468c:	11000017 	ldw	r4,0(r2)
    4690:	01400034 	movhi	r5,0
    4694:	29518404 	addi	r5,r5,17936
    4698:	0004f341 	jmpi	4f34 <_fwalk_reent>

0000469c <__fp_unlock>:
    469c:	0005883a 	mov	r2,zero
    46a0:	f800283a 	ret

000046a4 <_cleanup_r>:
    46a4:	01400074 	movhi	r5,1
    46a8:	29624904 	addi	r5,r5,-30428
    46ac:	0004f341 	jmpi	4f34 <_fwalk_reent>

000046b0 <__sinit.part.1>:
    46b0:	defff704 	addi	sp,sp,-36
    46b4:	00c00034 	movhi	r3,0
    46b8:	dfc00815 	stw	ra,32(sp)
    46bc:	ddc00715 	stw	r23,28(sp)
    46c0:	dd800615 	stw	r22,24(sp)
    46c4:	dd400515 	stw	r21,20(sp)
    46c8:	dd000415 	stw	r20,16(sp)
    46cc:	dcc00315 	stw	r19,12(sp)
    46d0:	dc800215 	stw	r18,8(sp)
    46d4:	dc400115 	stw	r17,4(sp)
    46d8:	dc000015 	stw	r16,0(sp)
    46dc:	18d1a904 	addi	r3,r3,18084
    46e0:	24000117 	ldw	r16,4(r4)
    46e4:	20c00f15 	stw	r3,60(r4)
    46e8:	2080bb04 	addi	r2,r4,748
    46ec:	00c000c4 	movi	r3,3
    46f0:	20c0b915 	stw	r3,740(r4)
    46f4:	2080ba15 	stw	r2,744(r4)
    46f8:	2000b815 	stw	zero,736(r4)
    46fc:	05c00204 	movi	r23,8
    4700:	00800104 	movi	r2,4
    4704:	2025883a 	mov	r18,r4
    4708:	b80d883a 	mov	r6,r23
    470c:	81001704 	addi	r4,r16,92
    4710:	000b883a 	mov	r5,zero
    4714:	80000015 	stw	zero,0(r16)
    4718:	80000115 	stw	zero,4(r16)
    471c:	80000215 	stw	zero,8(r16)
    4720:	8080030d 	sth	r2,12(r16)
    4724:	80001915 	stw	zero,100(r16)
    4728:	8000038d 	sth	zero,14(r16)
    472c:	80000415 	stw	zero,16(r16)
    4730:	80000515 	stw	zero,20(r16)
    4734:	80000615 	stw	zero,24(r16)
    4738:	0005cc80 	call	5cc8 <memset>
    473c:	05800034 	movhi	r22,0
    4740:	94400217 	ldw	r17,8(r18)
    4744:	05400034 	movhi	r21,0
    4748:	05000034 	movhi	r20,0
    474c:	04c00034 	movhi	r19,0
    4750:	b59bad04 	addi	r22,r22,28340
    4754:	ad5bc404 	addi	r21,r21,28432
    4758:	a51be304 	addi	r20,r20,28556
    475c:	9cdbfa04 	addi	r19,r19,28648
    4760:	85800815 	stw	r22,32(r16)
    4764:	85400915 	stw	r21,36(r16)
    4768:	85000a15 	stw	r20,40(r16)
    476c:	84c00b15 	stw	r19,44(r16)
    4770:	84000715 	stw	r16,28(r16)
    4774:	00800284 	movi	r2,10
    4778:	8880030d 	sth	r2,12(r17)
    477c:	00800044 	movi	r2,1
    4780:	b80d883a 	mov	r6,r23
    4784:	89001704 	addi	r4,r17,92
    4788:	000b883a 	mov	r5,zero
    478c:	88000015 	stw	zero,0(r17)
    4790:	88000115 	stw	zero,4(r17)
    4794:	88000215 	stw	zero,8(r17)
    4798:	88001915 	stw	zero,100(r17)
    479c:	8880038d 	sth	r2,14(r17)
    47a0:	88000415 	stw	zero,16(r17)
    47a4:	88000515 	stw	zero,20(r17)
    47a8:	88000615 	stw	zero,24(r17)
    47ac:	0005cc80 	call	5cc8 <memset>
    47b0:	94000317 	ldw	r16,12(r18)
    47b4:	00800484 	movi	r2,18
    47b8:	8c400715 	stw	r17,28(r17)
    47bc:	8d800815 	stw	r22,32(r17)
    47c0:	8d400915 	stw	r21,36(r17)
    47c4:	8d000a15 	stw	r20,40(r17)
    47c8:	8cc00b15 	stw	r19,44(r17)
    47cc:	8080030d 	sth	r2,12(r16)
    47d0:	00800084 	movi	r2,2
    47d4:	80000015 	stw	zero,0(r16)
    47d8:	80000115 	stw	zero,4(r16)
    47dc:	80000215 	stw	zero,8(r16)
    47e0:	80001915 	stw	zero,100(r16)
    47e4:	8080038d 	sth	r2,14(r16)
    47e8:	80000415 	stw	zero,16(r16)
    47ec:	80000515 	stw	zero,20(r16)
    47f0:	80000615 	stw	zero,24(r16)
    47f4:	b80d883a 	mov	r6,r23
    47f8:	000b883a 	mov	r5,zero
    47fc:	81001704 	addi	r4,r16,92
    4800:	0005cc80 	call	5cc8 <memset>
    4804:	00800044 	movi	r2,1
    4808:	84000715 	stw	r16,28(r16)
    480c:	85800815 	stw	r22,32(r16)
    4810:	85400915 	stw	r21,36(r16)
    4814:	85000a15 	stw	r20,40(r16)
    4818:	84c00b15 	stw	r19,44(r16)
    481c:	90800e15 	stw	r2,56(r18)
    4820:	dfc00817 	ldw	ra,32(sp)
    4824:	ddc00717 	ldw	r23,28(sp)
    4828:	dd800617 	ldw	r22,24(sp)
    482c:	dd400517 	ldw	r21,20(sp)
    4830:	dd000417 	ldw	r20,16(sp)
    4834:	dcc00317 	ldw	r19,12(sp)
    4838:	dc800217 	ldw	r18,8(sp)
    483c:	dc400117 	ldw	r17,4(sp)
    4840:	dc000017 	ldw	r16,0(sp)
    4844:	dec00904 	addi	sp,sp,36
    4848:	f800283a 	ret

0000484c <__fp_lock>:
    484c:	0005883a 	mov	r2,zero
    4850:	f800283a 	ret

00004854 <__sfmoreglue>:
    4854:	defffc04 	addi	sp,sp,-16
    4858:	dc400115 	stw	r17,4(sp)
    485c:	2c7fffc4 	addi	r17,r5,-1
    4860:	8c401a24 	muli	r17,r17,104
    4864:	dc800215 	stw	r18,8(sp)
    4868:	2825883a 	mov	r18,r5
    486c:	89401d04 	addi	r5,r17,116
    4870:	dc000015 	stw	r16,0(sp)
    4874:	dfc00315 	stw	ra,12(sp)
    4878:	00052900 	call	5290 <_malloc_r>
    487c:	1021883a 	mov	r16,r2
    4880:	10000726 	beq	r2,zero,48a0 <__sfmoreglue+0x4c>
    4884:	11000304 	addi	r4,r2,12
    4888:	10000015 	stw	zero,0(r2)
    488c:	14800115 	stw	r18,4(r2)
    4890:	11000215 	stw	r4,8(r2)
    4894:	89801a04 	addi	r6,r17,104
    4898:	000b883a 	mov	r5,zero
    489c:	0005cc80 	call	5cc8 <memset>
    48a0:	8005883a 	mov	r2,r16
    48a4:	dfc00317 	ldw	ra,12(sp)
    48a8:	dc800217 	ldw	r18,8(sp)
    48ac:	dc400117 	ldw	r17,4(sp)
    48b0:	dc000017 	ldw	r16,0(sp)
    48b4:	dec00404 	addi	sp,sp,16
    48b8:	f800283a 	ret

000048bc <__sfp>:
    48bc:	defffb04 	addi	sp,sp,-20
    48c0:	dc000015 	stw	r16,0(sp)
    48c4:	04000074 	movhi	r16,1
    48c8:	8404a204 	addi	r16,r16,4744
    48cc:	dcc00315 	stw	r19,12(sp)
    48d0:	2027883a 	mov	r19,r4
    48d4:	81000017 	ldw	r4,0(r16)
    48d8:	dfc00415 	stw	ra,16(sp)
    48dc:	dc800215 	stw	r18,8(sp)
    48e0:	20800e17 	ldw	r2,56(r4)
    48e4:	dc400115 	stw	r17,4(sp)
    48e8:	1000021e 	bne	r2,zero,48f4 <__sfp+0x38>
    48ec:	00046b00 	call	46b0 <__sinit.part.1>
    48f0:	81000017 	ldw	r4,0(r16)
    48f4:	2480b804 	addi	r18,r4,736
    48f8:	047fffc4 	movi	r17,-1
    48fc:	91000117 	ldw	r4,4(r18)
    4900:	94000217 	ldw	r16,8(r18)
    4904:	213fffc4 	addi	r4,r4,-1
    4908:	20000a16 	blt	r4,zero,4934 <__sfp+0x78>
    490c:	8080030f 	ldh	r2,12(r16)
    4910:	10000c26 	beq	r2,zero,4944 <__sfp+0x88>
    4914:	80c01d04 	addi	r3,r16,116
    4918:	00000206 	br	4924 <__sfp+0x68>
    491c:	18bfe60f 	ldh	r2,-104(r3)
    4920:	10000826 	beq	r2,zero,4944 <__sfp+0x88>
    4924:	213fffc4 	addi	r4,r4,-1
    4928:	1c3ffd04 	addi	r16,r3,-12
    492c:	18c01a04 	addi	r3,r3,104
    4930:	247ffa1e 	bne	r4,r17,491c <__alt_data_end+0xfffe491c>
    4934:	90800017 	ldw	r2,0(r18)
    4938:	10001d26 	beq	r2,zero,49b0 <__sfp+0xf4>
    493c:	1025883a 	mov	r18,r2
    4940:	003fee06 	br	48fc <__alt_data_end+0xfffe48fc>
    4944:	00bfffc4 	movi	r2,-1
    4948:	8080038d 	sth	r2,14(r16)
    494c:	00800044 	movi	r2,1
    4950:	8080030d 	sth	r2,12(r16)
    4954:	80001915 	stw	zero,100(r16)
    4958:	80000015 	stw	zero,0(r16)
    495c:	80000215 	stw	zero,8(r16)
    4960:	80000115 	stw	zero,4(r16)
    4964:	80000415 	stw	zero,16(r16)
    4968:	80000515 	stw	zero,20(r16)
    496c:	80000615 	stw	zero,24(r16)
    4970:	01800204 	movi	r6,8
    4974:	000b883a 	mov	r5,zero
    4978:	81001704 	addi	r4,r16,92
    497c:	0005cc80 	call	5cc8 <memset>
    4980:	8005883a 	mov	r2,r16
    4984:	80000c15 	stw	zero,48(r16)
    4988:	80000d15 	stw	zero,52(r16)
    498c:	80001115 	stw	zero,68(r16)
    4990:	80001215 	stw	zero,72(r16)
    4994:	dfc00417 	ldw	ra,16(sp)
    4998:	dcc00317 	ldw	r19,12(sp)
    499c:	dc800217 	ldw	r18,8(sp)
    49a0:	dc400117 	ldw	r17,4(sp)
    49a4:	dc000017 	ldw	r16,0(sp)
    49a8:	dec00504 	addi	sp,sp,20
    49ac:	f800283a 	ret
    49b0:	01400104 	movi	r5,4
    49b4:	9809883a 	mov	r4,r19
    49b8:	00048540 	call	4854 <__sfmoreglue>
    49bc:	90800015 	stw	r2,0(r18)
    49c0:	103fde1e 	bne	r2,zero,493c <__alt_data_end+0xfffe493c>
    49c4:	00800304 	movi	r2,12
    49c8:	98800015 	stw	r2,0(r19)
    49cc:	0005883a 	mov	r2,zero
    49d0:	003ff006 	br	4994 <__alt_data_end+0xfffe4994>

000049d4 <_cleanup>:
    49d4:	00800074 	movhi	r2,1
    49d8:	1084a204 	addi	r2,r2,4744
    49dc:	11000017 	ldw	r4,0(r2)
    49e0:	01400074 	movhi	r5,1
    49e4:	29624904 	addi	r5,r5,-30428
    49e8:	0004f341 	jmpi	4f34 <_fwalk_reent>

000049ec <__sinit>:
    49ec:	20800e17 	ldw	r2,56(r4)
    49f0:	10000126 	beq	r2,zero,49f8 <__sinit+0xc>
    49f4:	f800283a 	ret
    49f8:	00046b01 	jmpi	46b0 <__sinit.part.1>

000049fc <__sfp_lock_acquire>:
    49fc:	f800283a 	ret

00004a00 <__sfp_lock_release>:
    4a00:	f800283a 	ret

00004a04 <__sinit_lock_acquire>:
    4a04:	f800283a 	ret

00004a08 <__sinit_lock_release>:
    4a08:	f800283a 	ret

00004a0c <__fp_lock_all>:
    4a0c:	00800074 	movhi	r2,1
    4a10:	1084a304 	addi	r2,r2,4748
    4a14:	11000017 	ldw	r4,0(r2)
    4a18:	01400034 	movhi	r5,0
    4a1c:	29521304 	addi	r5,r5,18508
    4a20:	0004e701 	jmpi	4e70 <_fwalk>

00004a24 <__fp_unlock_all>:
    4a24:	00800074 	movhi	r2,1
    4a28:	1084a304 	addi	r2,r2,4748
    4a2c:	11000017 	ldw	r4,0(r2)
    4a30:	01400034 	movhi	r5,0
    4a34:	2951a704 	addi	r5,r5,18076
    4a38:	0004e701 	jmpi	4e70 <_fwalk>

00004a3c <_malloc_trim_r>:
    4a3c:	defffb04 	addi	sp,sp,-20
    4a40:	dcc00315 	stw	r19,12(sp)
    4a44:	04c00074 	movhi	r19,1
    4a48:	dc800215 	stw	r18,8(sp)
    4a4c:	dc400115 	stw	r17,4(sp)
    4a50:	dc000015 	stw	r16,0(sp)
    4a54:	dfc00415 	stw	ra,16(sp)
    4a58:	2821883a 	mov	r16,r5
    4a5c:	9cff1e04 	addi	r19,r19,-904
    4a60:	2025883a 	mov	r18,r4
    4a64:	000d2f00 	call	d2f0 <__malloc_lock>
    4a68:	98800217 	ldw	r2,8(r19)
    4a6c:	14400117 	ldw	r17,4(r2)
    4a70:	00bfff04 	movi	r2,-4
    4a74:	88a2703a 	and	r17,r17,r2
    4a78:	8c21c83a 	sub	r16,r17,r16
    4a7c:	8403fbc4 	addi	r16,r16,4079
    4a80:	8020d33a 	srli	r16,r16,12
    4a84:	0083ffc4 	movi	r2,4095
    4a88:	843fffc4 	addi	r16,r16,-1
    4a8c:	8020933a 	slli	r16,r16,12
    4a90:	1400060e 	bge	r2,r16,4aac <_malloc_trim_r+0x70>
    4a94:	000b883a 	mov	r5,zero
    4a98:	9009883a 	mov	r4,r18
    4a9c:	0006e600 	call	6e60 <_sbrk_r>
    4aa0:	98c00217 	ldw	r3,8(r19)
    4aa4:	1c47883a 	add	r3,r3,r17
    4aa8:	10c00a26 	beq	r2,r3,4ad4 <_malloc_trim_r+0x98>
    4aac:	9009883a 	mov	r4,r18
    4ab0:	000d3140 	call	d314 <__malloc_unlock>
    4ab4:	0005883a 	mov	r2,zero
    4ab8:	dfc00417 	ldw	ra,16(sp)
    4abc:	dcc00317 	ldw	r19,12(sp)
    4ac0:	dc800217 	ldw	r18,8(sp)
    4ac4:	dc400117 	ldw	r17,4(sp)
    4ac8:	dc000017 	ldw	r16,0(sp)
    4acc:	dec00504 	addi	sp,sp,20
    4ad0:	f800283a 	ret
    4ad4:	040bc83a 	sub	r5,zero,r16
    4ad8:	9009883a 	mov	r4,r18
    4adc:	0006e600 	call	6e60 <_sbrk_r>
    4ae0:	00ffffc4 	movi	r3,-1
    4ae4:	10c00d26 	beq	r2,r3,4b1c <_malloc_trim_r+0xe0>
    4ae8:	00c00074 	movhi	r3,1
    4aec:	18cb7b04 	addi	r3,r3,11756
    4af0:	18800017 	ldw	r2,0(r3)
    4af4:	99000217 	ldw	r4,8(r19)
    4af8:	8c23c83a 	sub	r17,r17,r16
    4afc:	8c400054 	ori	r17,r17,1
    4b00:	1421c83a 	sub	r16,r2,r16
    4b04:	24400115 	stw	r17,4(r4)
    4b08:	9009883a 	mov	r4,r18
    4b0c:	1c000015 	stw	r16,0(r3)
    4b10:	000d3140 	call	d314 <__malloc_unlock>
    4b14:	00800044 	movi	r2,1
    4b18:	003fe706 	br	4ab8 <__alt_data_end+0xfffe4ab8>
    4b1c:	000b883a 	mov	r5,zero
    4b20:	9009883a 	mov	r4,r18
    4b24:	0006e600 	call	6e60 <_sbrk_r>
    4b28:	99000217 	ldw	r4,8(r19)
    4b2c:	014003c4 	movi	r5,15
    4b30:	1107c83a 	sub	r3,r2,r4
    4b34:	28ffdd0e 	bge	r5,r3,4aac <__alt_data_end+0xfffe4aac>
    4b38:	01400074 	movhi	r5,1
    4b3c:	2944a504 	addi	r5,r5,4756
    4b40:	29400017 	ldw	r5,0(r5)
    4b44:	18c00054 	ori	r3,r3,1
    4b48:	20c00115 	stw	r3,4(r4)
    4b4c:	00c00074 	movhi	r3,1
    4b50:	1145c83a 	sub	r2,r2,r5
    4b54:	18cb7b04 	addi	r3,r3,11756
    4b58:	18800015 	stw	r2,0(r3)
    4b5c:	003fd306 	br	4aac <__alt_data_end+0xfffe4aac>

00004b60 <_free_r>:
    4b60:	28004126 	beq	r5,zero,4c68 <_free_r+0x108>
    4b64:	defffd04 	addi	sp,sp,-12
    4b68:	dc400115 	stw	r17,4(sp)
    4b6c:	dc000015 	stw	r16,0(sp)
    4b70:	2023883a 	mov	r17,r4
    4b74:	2821883a 	mov	r16,r5
    4b78:	dfc00215 	stw	ra,8(sp)
    4b7c:	000d2f00 	call	d2f0 <__malloc_lock>
    4b80:	81ffff17 	ldw	r7,-4(r16)
    4b84:	00bfff84 	movi	r2,-2
    4b88:	01000074 	movhi	r4,1
    4b8c:	81bffe04 	addi	r6,r16,-8
    4b90:	3884703a 	and	r2,r7,r2
    4b94:	213f1e04 	addi	r4,r4,-904
    4b98:	308b883a 	add	r5,r6,r2
    4b9c:	2a400117 	ldw	r9,4(r5)
    4ba0:	22000217 	ldw	r8,8(r4)
    4ba4:	00ffff04 	movi	r3,-4
    4ba8:	48c6703a 	and	r3,r9,r3
    4bac:	2a005726 	beq	r5,r8,4d0c <_free_r+0x1ac>
    4bb0:	28c00115 	stw	r3,4(r5)
    4bb4:	39c0004c 	andi	r7,r7,1
    4bb8:	3800091e 	bne	r7,zero,4be0 <_free_r+0x80>
    4bbc:	823ffe17 	ldw	r8,-8(r16)
    4bc0:	22400204 	addi	r9,r4,8
    4bc4:	320dc83a 	sub	r6,r6,r8
    4bc8:	31c00217 	ldw	r7,8(r6)
    4bcc:	1205883a 	add	r2,r2,r8
    4bd0:	3a406526 	beq	r7,r9,4d68 <_free_r+0x208>
    4bd4:	32000317 	ldw	r8,12(r6)
    4bd8:	3a000315 	stw	r8,12(r7)
    4bdc:	41c00215 	stw	r7,8(r8)
    4be0:	28cf883a 	add	r7,r5,r3
    4be4:	39c00117 	ldw	r7,4(r7)
    4be8:	39c0004c 	andi	r7,r7,1
    4bec:	38003a26 	beq	r7,zero,4cd8 <_free_r+0x178>
    4bf0:	10c00054 	ori	r3,r2,1
    4bf4:	30c00115 	stw	r3,4(r6)
    4bf8:	3087883a 	add	r3,r6,r2
    4bfc:	18800015 	stw	r2,0(r3)
    4c00:	00c07fc4 	movi	r3,511
    4c04:	18801936 	bltu	r3,r2,4c6c <_free_r+0x10c>
    4c08:	1004d0fa 	srli	r2,r2,3
    4c0c:	01c00044 	movi	r7,1
    4c10:	21400117 	ldw	r5,4(r4)
    4c14:	10c00044 	addi	r3,r2,1
    4c18:	18c7883a 	add	r3,r3,r3
    4c1c:	1005d0ba 	srai	r2,r2,2
    4c20:	18c7883a 	add	r3,r3,r3
    4c24:	18c7883a 	add	r3,r3,r3
    4c28:	1907883a 	add	r3,r3,r4
    4c2c:	3884983a 	sll	r2,r7,r2
    4c30:	19c00017 	ldw	r7,0(r3)
    4c34:	1a3ffe04 	addi	r8,r3,-8
    4c38:	1144b03a 	or	r2,r2,r5
    4c3c:	32000315 	stw	r8,12(r6)
    4c40:	31c00215 	stw	r7,8(r6)
    4c44:	20800115 	stw	r2,4(r4)
    4c48:	19800015 	stw	r6,0(r3)
    4c4c:	39800315 	stw	r6,12(r7)
    4c50:	8809883a 	mov	r4,r17
    4c54:	dfc00217 	ldw	ra,8(sp)
    4c58:	dc400117 	ldw	r17,4(sp)
    4c5c:	dc000017 	ldw	r16,0(sp)
    4c60:	dec00304 	addi	sp,sp,12
    4c64:	000d3141 	jmpi	d314 <__malloc_unlock>
    4c68:	f800283a 	ret
    4c6c:	100ad27a 	srli	r5,r2,9
    4c70:	00c00104 	movi	r3,4
    4c74:	19404a36 	bltu	r3,r5,4da0 <_free_r+0x240>
    4c78:	100ad1ba 	srli	r5,r2,6
    4c7c:	28c00e44 	addi	r3,r5,57
    4c80:	18c7883a 	add	r3,r3,r3
    4c84:	29400e04 	addi	r5,r5,56
    4c88:	18c7883a 	add	r3,r3,r3
    4c8c:	18c7883a 	add	r3,r3,r3
    4c90:	1909883a 	add	r4,r3,r4
    4c94:	20c00017 	ldw	r3,0(r4)
    4c98:	01c00074 	movhi	r7,1
    4c9c:	213ffe04 	addi	r4,r4,-8
    4ca0:	39ff1e04 	addi	r7,r7,-904
    4ca4:	20c04426 	beq	r4,r3,4db8 <_free_r+0x258>
    4ca8:	01ffff04 	movi	r7,-4
    4cac:	19400117 	ldw	r5,4(r3)
    4cb0:	29ca703a 	and	r5,r5,r7
    4cb4:	1140022e 	bgeu	r2,r5,4cc0 <_free_r+0x160>
    4cb8:	18c00217 	ldw	r3,8(r3)
    4cbc:	20fffb1e 	bne	r4,r3,4cac <__alt_data_end+0xfffe4cac>
    4cc0:	19000317 	ldw	r4,12(r3)
    4cc4:	31000315 	stw	r4,12(r6)
    4cc8:	30c00215 	stw	r3,8(r6)
    4ccc:	21800215 	stw	r6,8(r4)
    4cd0:	19800315 	stw	r6,12(r3)
    4cd4:	003fde06 	br	4c50 <__alt_data_end+0xfffe4c50>
    4cd8:	29c00217 	ldw	r7,8(r5)
    4cdc:	10c5883a 	add	r2,r2,r3
    4ce0:	00c00074 	movhi	r3,1
    4ce4:	18ff2004 	addi	r3,r3,-896
    4ce8:	38c03b26 	beq	r7,r3,4dd8 <_free_r+0x278>
    4cec:	2a000317 	ldw	r8,12(r5)
    4cf0:	11400054 	ori	r5,r2,1
    4cf4:	3087883a 	add	r3,r6,r2
    4cf8:	3a000315 	stw	r8,12(r7)
    4cfc:	41c00215 	stw	r7,8(r8)
    4d00:	31400115 	stw	r5,4(r6)
    4d04:	18800015 	stw	r2,0(r3)
    4d08:	003fbd06 	br	4c00 <__alt_data_end+0xfffe4c00>
    4d0c:	39c0004c 	andi	r7,r7,1
    4d10:	10c5883a 	add	r2,r2,r3
    4d14:	3800071e 	bne	r7,zero,4d34 <_free_r+0x1d4>
    4d18:	81fffe17 	ldw	r7,-8(r16)
    4d1c:	31cdc83a 	sub	r6,r6,r7
    4d20:	30c00317 	ldw	r3,12(r6)
    4d24:	31400217 	ldw	r5,8(r6)
    4d28:	11c5883a 	add	r2,r2,r7
    4d2c:	28c00315 	stw	r3,12(r5)
    4d30:	19400215 	stw	r5,8(r3)
    4d34:	10c00054 	ori	r3,r2,1
    4d38:	30c00115 	stw	r3,4(r6)
    4d3c:	00c00074 	movhi	r3,1
    4d40:	18c4a604 	addi	r3,r3,4760
    4d44:	18c00017 	ldw	r3,0(r3)
    4d48:	21800215 	stw	r6,8(r4)
    4d4c:	10ffc036 	bltu	r2,r3,4c50 <__alt_data_end+0xfffe4c50>
    4d50:	00800074 	movhi	r2,1
    4d54:	108b7204 	addi	r2,r2,11720
    4d58:	11400017 	ldw	r5,0(r2)
    4d5c:	8809883a 	mov	r4,r17
    4d60:	0004a3c0 	call	4a3c <_malloc_trim_r>
    4d64:	003fba06 	br	4c50 <__alt_data_end+0xfffe4c50>
    4d68:	28c9883a 	add	r4,r5,r3
    4d6c:	21000117 	ldw	r4,4(r4)
    4d70:	2100004c 	andi	r4,r4,1
    4d74:	2000391e 	bne	r4,zero,4e5c <_free_r+0x2fc>
    4d78:	29c00217 	ldw	r7,8(r5)
    4d7c:	29000317 	ldw	r4,12(r5)
    4d80:	1885883a 	add	r2,r3,r2
    4d84:	10c00054 	ori	r3,r2,1
    4d88:	39000315 	stw	r4,12(r7)
    4d8c:	21c00215 	stw	r7,8(r4)
    4d90:	30c00115 	stw	r3,4(r6)
    4d94:	308d883a 	add	r6,r6,r2
    4d98:	30800015 	stw	r2,0(r6)
    4d9c:	003fac06 	br	4c50 <__alt_data_end+0xfffe4c50>
    4da0:	00c00504 	movi	r3,20
    4da4:	19401536 	bltu	r3,r5,4dfc <_free_r+0x29c>
    4da8:	28c01704 	addi	r3,r5,92
    4dac:	18c7883a 	add	r3,r3,r3
    4db0:	294016c4 	addi	r5,r5,91
    4db4:	003fb406 	br	4c88 <__alt_data_end+0xfffe4c88>
    4db8:	280bd0ba 	srai	r5,r5,2
    4dbc:	00c00044 	movi	r3,1
    4dc0:	38800117 	ldw	r2,4(r7)
    4dc4:	194a983a 	sll	r5,r3,r5
    4dc8:	2007883a 	mov	r3,r4
    4dcc:	2884b03a 	or	r2,r5,r2
    4dd0:	38800115 	stw	r2,4(r7)
    4dd4:	003fbb06 	br	4cc4 <__alt_data_end+0xfffe4cc4>
    4dd8:	21800515 	stw	r6,20(r4)
    4ddc:	21800415 	stw	r6,16(r4)
    4de0:	10c00054 	ori	r3,r2,1
    4de4:	31c00315 	stw	r7,12(r6)
    4de8:	31c00215 	stw	r7,8(r6)
    4dec:	30c00115 	stw	r3,4(r6)
    4df0:	308d883a 	add	r6,r6,r2
    4df4:	30800015 	stw	r2,0(r6)
    4df8:	003f9506 	br	4c50 <__alt_data_end+0xfffe4c50>
    4dfc:	00c01504 	movi	r3,84
    4e00:	19400536 	bltu	r3,r5,4e18 <_free_r+0x2b8>
    4e04:	100ad33a 	srli	r5,r2,12
    4e08:	28c01bc4 	addi	r3,r5,111
    4e0c:	18c7883a 	add	r3,r3,r3
    4e10:	29401b84 	addi	r5,r5,110
    4e14:	003f9c06 	br	4c88 <__alt_data_end+0xfffe4c88>
    4e18:	00c05504 	movi	r3,340
    4e1c:	19400536 	bltu	r3,r5,4e34 <_free_r+0x2d4>
    4e20:	100ad3fa 	srli	r5,r2,15
    4e24:	28c01e04 	addi	r3,r5,120
    4e28:	18c7883a 	add	r3,r3,r3
    4e2c:	29401dc4 	addi	r5,r5,119
    4e30:	003f9506 	br	4c88 <__alt_data_end+0xfffe4c88>
    4e34:	00c15504 	movi	r3,1364
    4e38:	19400536 	bltu	r3,r5,4e50 <_free_r+0x2f0>
    4e3c:	100ad4ba 	srli	r5,r2,18
    4e40:	28c01f44 	addi	r3,r5,125
    4e44:	18c7883a 	add	r3,r3,r3
    4e48:	29401f04 	addi	r5,r5,124
    4e4c:	003f8e06 	br	4c88 <__alt_data_end+0xfffe4c88>
    4e50:	00c03f84 	movi	r3,254
    4e54:	01401f84 	movi	r5,126
    4e58:	003f8b06 	br	4c88 <__alt_data_end+0xfffe4c88>
    4e5c:	10c00054 	ori	r3,r2,1
    4e60:	30c00115 	stw	r3,4(r6)
    4e64:	308d883a 	add	r6,r6,r2
    4e68:	30800015 	stw	r2,0(r6)
    4e6c:	003f7806 	br	4c50 <__alt_data_end+0xfffe4c50>

00004e70 <_fwalk>:
    4e70:	defff704 	addi	sp,sp,-36
    4e74:	dd000415 	stw	r20,16(sp)
    4e78:	dfc00815 	stw	ra,32(sp)
    4e7c:	ddc00715 	stw	r23,28(sp)
    4e80:	dd800615 	stw	r22,24(sp)
    4e84:	dd400515 	stw	r21,20(sp)
    4e88:	dcc00315 	stw	r19,12(sp)
    4e8c:	dc800215 	stw	r18,8(sp)
    4e90:	dc400115 	stw	r17,4(sp)
    4e94:	dc000015 	stw	r16,0(sp)
    4e98:	2500b804 	addi	r20,r4,736
    4e9c:	a0002326 	beq	r20,zero,4f2c <_fwalk+0xbc>
    4ea0:	282b883a 	mov	r21,r5
    4ea4:	002f883a 	mov	r23,zero
    4ea8:	05800044 	movi	r22,1
    4eac:	04ffffc4 	movi	r19,-1
    4eb0:	a4400117 	ldw	r17,4(r20)
    4eb4:	a4800217 	ldw	r18,8(r20)
    4eb8:	8c7fffc4 	addi	r17,r17,-1
    4ebc:	88000d16 	blt	r17,zero,4ef4 <_fwalk+0x84>
    4ec0:	94000304 	addi	r16,r18,12
    4ec4:	94800384 	addi	r18,r18,14
    4ec8:	8080000b 	ldhu	r2,0(r16)
    4ecc:	8c7fffc4 	addi	r17,r17,-1
    4ed0:	813ffd04 	addi	r4,r16,-12
    4ed4:	b080042e 	bgeu	r22,r2,4ee8 <_fwalk+0x78>
    4ed8:	9080000f 	ldh	r2,0(r18)
    4edc:	14c00226 	beq	r2,r19,4ee8 <_fwalk+0x78>
    4ee0:	a83ee83a 	callr	r21
    4ee4:	b8aeb03a 	or	r23,r23,r2
    4ee8:	84001a04 	addi	r16,r16,104
    4eec:	94801a04 	addi	r18,r18,104
    4ef0:	8cfff51e 	bne	r17,r19,4ec8 <__alt_data_end+0xfffe4ec8>
    4ef4:	a5000017 	ldw	r20,0(r20)
    4ef8:	a03fed1e 	bne	r20,zero,4eb0 <__alt_data_end+0xfffe4eb0>
    4efc:	b805883a 	mov	r2,r23
    4f00:	dfc00817 	ldw	ra,32(sp)
    4f04:	ddc00717 	ldw	r23,28(sp)
    4f08:	dd800617 	ldw	r22,24(sp)
    4f0c:	dd400517 	ldw	r21,20(sp)
    4f10:	dd000417 	ldw	r20,16(sp)
    4f14:	dcc00317 	ldw	r19,12(sp)
    4f18:	dc800217 	ldw	r18,8(sp)
    4f1c:	dc400117 	ldw	r17,4(sp)
    4f20:	dc000017 	ldw	r16,0(sp)
    4f24:	dec00904 	addi	sp,sp,36
    4f28:	f800283a 	ret
    4f2c:	002f883a 	mov	r23,zero
    4f30:	003ff206 	br	4efc <__alt_data_end+0xfffe4efc>

00004f34 <_fwalk_reent>:
    4f34:	defff704 	addi	sp,sp,-36
    4f38:	dd000415 	stw	r20,16(sp)
    4f3c:	dfc00815 	stw	ra,32(sp)
    4f40:	ddc00715 	stw	r23,28(sp)
    4f44:	dd800615 	stw	r22,24(sp)
    4f48:	dd400515 	stw	r21,20(sp)
    4f4c:	dcc00315 	stw	r19,12(sp)
    4f50:	dc800215 	stw	r18,8(sp)
    4f54:	dc400115 	stw	r17,4(sp)
    4f58:	dc000015 	stw	r16,0(sp)
    4f5c:	2500b804 	addi	r20,r4,736
    4f60:	a0002326 	beq	r20,zero,4ff0 <_fwalk_reent+0xbc>
    4f64:	282b883a 	mov	r21,r5
    4f68:	2027883a 	mov	r19,r4
    4f6c:	002f883a 	mov	r23,zero
    4f70:	05800044 	movi	r22,1
    4f74:	04bfffc4 	movi	r18,-1
    4f78:	a4400117 	ldw	r17,4(r20)
    4f7c:	a4000217 	ldw	r16,8(r20)
    4f80:	8c7fffc4 	addi	r17,r17,-1
    4f84:	88000c16 	blt	r17,zero,4fb8 <_fwalk_reent+0x84>
    4f88:	84000304 	addi	r16,r16,12
    4f8c:	8080000b 	ldhu	r2,0(r16)
    4f90:	8c7fffc4 	addi	r17,r17,-1
    4f94:	817ffd04 	addi	r5,r16,-12
    4f98:	b080052e 	bgeu	r22,r2,4fb0 <_fwalk_reent+0x7c>
    4f9c:	8080008f 	ldh	r2,2(r16)
    4fa0:	9809883a 	mov	r4,r19
    4fa4:	14800226 	beq	r2,r18,4fb0 <_fwalk_reent+0x7c>
    4fa8:	a83ee83a 	callr	r21
    4fac:	b8aeb03a 	or	r23,r23,r2
    4fb0:	84001a04 	addi	r16,r16,104
    4fb4:	8cbff51e 	bne	r17,r18,4f8c <__alt_data_end+0xfffe4f8c>
    4fb8:	a5000017 	ldw	r20,0(r20)
    4fbc:	a03fee1e 	bne	r20,zero,4f78 <__alt_data_end+0xfffe4f78>
    4fc0:	b805883a 	mov	r2,r23
    4fc4:	dfc00817 	ldw	ra,32(sp)
    4fc8:	ddc00717 	ldw	r23,28(sp)
    4fcc:	dd800617 	ldw	r22,24(sp)
    4fd0:	dd400517 	ldw	r21,20(sp)
    4fd4:	dd000417 	ldw	r20,16(sp)
    4fd8:	dcc00317 	ldw	r19,12(sp)
    4fdc:	dc800217 	ldw	r18,8(sp)
    4fe0:	dc400117 	ldw	r17,4(sp)
    4fe4:	dc000017 	ldw	r16,0(sp)
    4fe8:	dec00904 	addi	sp,sp,36
    4fec:	f800283a 	ret
    4ff0:	002f883a 	mov	r23,zero
    4ff4:	003ff206 	br	4fc0 <__alt_data_end+0xfffe4fc0>

00004ff8 <_setlocale_r>:
    4ff8:	30001b26 	beq	r6,zero,5068 <_setlocale_r+0x70>
    4ffc:	01400074 	movhi	r5,1
    5000:	defffe04 	addi	sp,sp,-8
    5004:	297d5604 	addi	r5,r5,-2728
    5008:	3009883a 	mov	r4,r6
    500c:	dc000015 	stw	r16,0(sp)
    5010:	dfc00115 	stw	ra,4(sp)
    5014:	3021883a 	mov	r16,r6
    5018:	0006ff00 	call	6ff0 <strcmp>
    501c:	1000061e 	bne	r2,zero,5038 <_setlocale_r+0x40>
    5020:	00800074 	movhi	r2,1
    5024:	10bd5504 	addi	r2,r2,-2732
    5028:	dfc00117 	ldw	ra,4(sp)
    502c:	dc000017 	ldw	r16,0(sp)
    5030:	dec00204 	addi	sp,sp,8
    5034:	f800283a 	ret
    5038:	01400074 	movhi	r5,1
    503c:	297d5504 	addi	r5,r5,-2732
    5040:	8009883a 	mov	r4,r16
    5044:	0006ff00 	call	6ff0 <strcmp>
    5048:	103ff526 	beq	r2,zero,5020 <__alt_data_end+0xfffe5020>
    504c:	01400074 	movhi	r5,1
    5050:	297d4004 	addi	r5,r5,-2816
    5054:	8009883a 	mov	r4,r16
    5058:	0006ff00 	call	6ff0 <strcmp>
    505c:	103ff026 	beq	r2,zero,5020 <__alt_data_end+0xfffe5020>
    5060:	0005883a 	mov	r2,zero
    5064:	003ff006 	br	5028 <__alt_data_end+0xfffe5028>
    5068:	00800074 	movhi	r2,1
    506c:	10bd5504 	addi	r2,r2,-2732
    5070:	f800283a 	ret

00005074 <__locale_charset>:
    5074:	00800074 	movhi	r2,1
    5078:	10bf0804 	addi	r2,r2,-992
    507c:	f800283a 	ret

00005080 <__locale_mb_cur_max>:
    5080:	00800074 	movhi	r2,1
    5084:	1084a404 	addi	r2,r2,4752
    5088:	10800017 	ldw	r2,0(r2)
    508c:	f800283a 	ret

00005090 <__locale_msgcharset>:
    5090:	00800074 	movhi	r2,1
    5094:	10bf0004 	addi	r2,r2,-1024
    5098:	f800283a 	ret

0000509c <__locale_cjk_lang>:
    509c:	0005883a 	mov	r2,zero
    50a0:	f800283a 	ret

000050a4 <_localeconv_r>:
    50a4:	00800074 	movhi	r2,1
    50a8:	10bf1004 	addi	r2,r2,-960
    50ac:	f800283a 	ret

000050b0 <setlocale>:
    50b0:	00800074 	movhi	r2,1
    50b4:	1084a304 	addi	r2,r2,4748
    50b8:	280d883a 	mov	r6,r5
    50bc:	200b883a 	mov	r5,r4
    50c0:	11000017 	ldw	r4,0(r2)
    50c4:	0004ff81 	jmpi	4ff8 <_setlocale_r>

000050c8 <localeconv>:
    50c8:	00800074 	movhi	r2,1
    50cc:	10bf1004 	addi	r2,r2,-960
    50d0:	f800283a 	ret

000050d4 <__smakebuf_r>:
    50d4:	2880030b 	ldhu	r2,12(r5)
    50d8:	10c0008c 	andi	r3,r2,2
    50dc:	1800411e 	bne	r3,zero,51e4 <__smakebuf_r+0x110>
    50e0:	deffec04 	addi	sp,sp,-80
    50e4:	dc000f15 	stw	r16,60(sp)
    50e8:	2821883a 	mov	r16,r5
    50ec:	2940038f 	ldh	r5,14(r5)
    50f0:	dc401015 	stw	r17,64(sp)
    50f4:	dfc01315 	stw	ra,76(sp)
    50f8:	dcc01215 	stw	r19,72(sp)
    50fc:	dc801115 	stw	r18,68(sp)
    5100:	2023883a 	mov	r17,r4
    5104:	28001c16 	blt	r5,zero,5178 <__smakebuf_r+0xa4>
    5108:	d80d883a 	mov	r6,sp
    510c:	0008c300 	call	8c30 <_fstat_r>
    5110:	10001816 	blt	r2,zero,5174 <__smakebuf_r+0xa0>
    5114:	d8800117 	ldw	r2,4(sp)
    5118:	00e00014 	movui	r3,32768
    511c:	10bc000c 	andi	r2,r2,61440
    5120:	14c80020 	cmpeqi	r19,r2,8192
    5124:	10c03726 	beq	r2,r3,5204 <__smakebuf_r+0x130>
    5128:	80c0030b 	ldhu	r3,12(r16)
    512c:	18c20014 	ori	r3,r3,2048
    5130:	80c0030d 	sth	r3,12(r16)
    5134:	00c80004 	movi	r3,8192
    5138:	10c0521e 	bne	r2,r3,5284 <__smakebuf_r+0x1b0>
    513c:	8140038f 	ldh	r5,14(r16)
    5140:	8809883a 	mov	r4,r17
    5144:	00091480 	call	9148 <_isatty_r>
    5148:	10004c26 	beq	r2,zero,527c <__smakebuf_r+0x1a8>
    514c:	8080030b 	ldhu	r2,12(r16)
    5150:	80c010c4 	addi	r3,r16,67
    5154:	80c00015 	stw	r3,0(r16)
    5158:	10800054 	ori	r2,r2,1
    515c:	8080030d 	sth	r2,12(r16)
    5160:	00800044 	movi	r2,1
    5164:	80c00415 	stw	r3,16(r16)
    5168:	80800515 	stw	r2,20(r16)
    516c:	04810004 	movi	r18,1024
    5170:	00000706 	br	5190 <__smakebuf_r+0xbc>
    5174:	8080030b 	ldhu	r2,12(r16)
    5178:	10c0200c 	andi	r3,r2,128
    517c:	18001f1e 	bne	r3,zero,51fc <__smakebuf_r+0x128>
    5180:	04810004 	movi	r18,1024
    5184:	10820014 	ori	r2,r2,2048
    5188:	8080030d 	sth	r2,12(r16)
    518c:	0027883a 	mov	r19,zero
    5190:	900b883a 	mov	r5,r18
    5194:	8809883a 	mov	r4,r17
    5198:	00052900 	call	5290 <_malloc_r>
    519c:	10002c26 	beq	r2,zero,5250 <__smakebuf_r+0x17c>
    51a0:	80c0030b 	ldhu	r3,12(r16)
    51a4:	01000034 	movhi	r4,0
    51a8:	2111a904 	addi	r4,r4,18084
    51ac:	89000f15 	stw	r4,60(r17)
    51b0:	18c02014 	ori	r3,r3,128
    51b4:	80c0030d 	sth	r3,12(r16)
    51b8:	80800015 	stw	r2,0(r16)
    51bc:	80800415 	stw	r2,16(r16)
    51c0:	84800515 	stw	r18,20(r16)
    51c4:	98001a1e 	bne	r19,zero,5230 <__smakebuf_r+0x15c>
    51c8:	dfc01317 	ldw	ra,76(sp)
    51cc:	dcc01217 	ldw	r19,72(sp)
    51d0:	dc801117 	ldw	r18,68(sp)
    51d4:	dc401017 	ldw	r17,64(sp)
    51d8:	dc000f17 	ldw	r16,60(sp)
    51dc:	dec01404 	addi	sp,sp,80
    51e0:	f800283a 	ret
    51e4:	288010c4 	addi	r2,r5,67
    51e8:	28800015 	stw	r2,0(r5)
    51ec:	28800415 	stw	r2,16(r5)
    51f0:	00800044 	movi	r2,1
    51f4:	28800515 	stw	r2,20(r5)
    51f8:	f800283a 	ret
    51fc:	04801004 	movi	r18,64
    5200:	003fe006 	br	5184 <__alt_data_end+0xfffe5184>
    5204:	81000a17 	ldw	r4,40(r16)
    5208:	00c00034 	movhi	r3,0
    520c:	18dbe304 	addi	r3,r3,28556
    5210:	20ffc51e 	bne	r4,r3,5128 <__alt_data_end+0xfffe5128>
    5214:	8080030b 	ldhu	r2,12(r16)
    5218:	04810004 	movi	r18,1024
    521c:	84801315 	stw	r18,76(r16)
    5220:	1484b03a 	or	r2,r2,r18
    5224:	8080030d 	sth	r2,12(r16)
    5228:	0027883a 	mov	r19,zero
    522c:	003fd806 	br	5190 <__alt_data_end+0xfffe5190>
    5230:	8140038f 	ldh	r5,14(r16)
    5234:	8809883a 	mov	r4,r17
    5238:	00091480 	call	9148 <_isatty_r>
    523c:	103fe226 	beq	r2,zero,51c8 <__alt_data_end+0xfffe51c8>
    5240:	8080030b 	ldhu	r2,12(r16)
    5244:	10800054 	ori	r2,r2,1
    5248:	8080030d 	sth	r2,12(r16)
    524c:	003fde06 	br	51c8 <__alt_data_end+0xfffe51c8>
    5250:	8080030b 	ldhu	r2,12(r16)
    5254:	10c0800c 	andi	r3,r2,512
    5258:	183fdb1e 	bne	r3,zero,51c8 <__alt_data_end+0xfffe51c8>
    525c:	10800094 	ori	r2,r2,2
    5260:	80c010c4 	addi	r3,r16,67
    5264:	8080030d 	sth	r2,12(r16)
    5268:	00800044 	movi	r2,1
    526c:	80c00015 	stw	r3,0(r16)
    5270:	80c00415 	stw	r3,16(r16)
    5274:	80800515 	stw	r2,20(r16)
    5278:	003fd306 	br	51c8 <__alt_data_end+0xfffe51c8>
    527c:	04810004 	movi	r18,1024
    5280:	003fc306 	br	5190 <__alt_data_end+0xfffe5190>
    5284:	0027883a 	mov	r19,zero
    5288:	04810004 	movi	r18,1024
    528c:	003fc006 	br	5190 <__alt_data_end+0xfffe5190>

00005290 <_malloc_r>:
    5290:	defff504 	addi	sp,sp,-44
    5294:	dc800315 	stw	r18,12(sp)
    5298:	dfc00a15 	stw	ra,40(sp)
    529c:	df000915 	stw	fp,36(sp)
    52a0:	ddc00815 	stw	r23,32(sp)
    52a4:	dd800715 	stw	r22,28(sp)
    52a8:	dd400615 	stw	r21,24(sp)
    52ac:	dd000515 	stw	r20,20(sp)
    52b0:	dcc00415 	stw	r19,16(sp)
    52b4:	dc400215 	stw	r17,8(sp)
    52b8:	dc000115 	stw	r16,4(sp)
    52bc:	288002c4 	addi	r2,r5,11
    52c0:	00c00584 	movi	r3,22
    52c4:	2025883a 	mov	r18,r4
    52c8:	18807f2e 	bgeu	r3,r2,54c8 <_malloc_r+0x238>
    52cc:	047ffe04 	movi	r17,-8
    52d0:	1462703a 	and	r17,r2,r17
    52d4:	8800a316 	blt	r17,zero,5564 <_malloc_r+0x2d4>
    52d8:	8940a236 	bltu	r17,r5,5564 <_malloc_r+0x2d4>
    52dc:	000d2f00 	call	d2f0 <__malloc_lock>
    52e0:	00807dc4 	movi	r2,503
    52e4:	1441e92e 	bgeu	r2,r17,5a8c <_malloc_r+0x7fc>
    52e8:	8804d27a 	srli	r2,r17,9
    52ec:	1000a126 	beq	r2,zero,5574 <_malloc_r+0x2e4>
    52f0:	00c00104 	movi	r3,4
    52f4:	18811e36 	bltu	r3,r2,5770 <_malloc_r+0x4e0>
    52f8:	8804d1ba 	srli	r2,r17,6
    52fc:	12000e44 	addi	r8,r2,57
    5300:	11c00e04 	addi	r7,r2,56
    5304:	4209883a 	add	r4,r8,r8
    5308:	04c00074 	movhi	r19,1
    530c:	2109883a 	add	r4,r4,r4
    5310:	9cff1e04 	addi	r19,r19,-904
    5314:	2109883a 	add	r4,r4,r4
    5318:	9909883a 	add	r4,r19,r4
    531c:	24000117 	ldw	r16,4(r4)
    5320:	213ffe04 	addi	r4,r4,-8
    5324:	24009726 	beq	r4,r16,5584 <_malloc_r+0x2f4>
    5328:	80800117 	ldw	r2,4(r16)
    532c:	01bfff04 	movi	r6,-4
    5330:	014003c4 	movi	r5,15
    5334:	1184703a 	and	r2,r2,r6
    5338:	1447c83a 	sub	r3,r2,r17
    533c:	28c00716 	blt	r5,r3,535c <_malloc_r+0xcc>
    5340:	1800920e 	bge	r3,zero,558c <_malloc_r+0x2fc>
    5344:	84000317 	ldw	r16,12(r16)
    5348:	24008e26 	beq	r4,r16,5584 <_malloc_r+0x2f4>
    534c:	80800117 	ldw	r2,4(r16)
    5350:	1184703a 	and	r2,r2,r6
    5354:	1447c83a 	sub	r3,r2,r17
    5358:	28fff90e 	bge	r5,r3,5340 <__alt_data_end+0xfffe5340>
    535c:	3809883a 	mov	r4,r7
    5360:	01800074 	movhi	r6,1
    5364:	9c000417 	ldw	r16,16(r19)
    5368:	31bf1e04 	addi	r6,r6,-904
    536c:	32000204 	addi	r8,r6,8
    5370:	82013426 	beq	r16,r8,5844 <_malloc_r+0x5b4>
    5374:	80c00117 	ldw	r3,4(r16)
    5378:	00bfff04 	movi	r2,-4
    537c:	188e703a 	and	r7,r3,r2
    5380:	3c45c83a 	sub	r2,r7,r17
    5384:	00c003c4 	movi	r3,15
    5388:	18811f16 	blt	r3,r2,5808 <_malloc_r+0x578>
    538c:	32000515 	stw	r8,20(r6)
    5390:	32000415 	stw	r8,16(r6)
    5394:	10007f0e 	bge	r2,zero,5594 <_malloc_r+0x304>
    5398:	00807fc4 	movi	r2,511
    539c:	11c0fd36 	bltu	r2,r7,5794 <_malloc_r+0x504>
    53a0:	3806d0fa 	srli	r3,r7,3
    53a4:	01c00044 	movi	r7,1
    53a8:	30800117 	ldw	r2,4(r6)
    53ac:	19400044 	addi	r5,r3,1
    53b0:	294b883a 	add	r5,r5,r5
    53b4:	1807d0ba 	srai	r3,r3,2
    53b8:	294b883a 	add	r5,r5,r5
    53bc:	294b883a 	add	r5,r5,r5
    53c0:	298b883a 	add	r5,r5,r6
    53c4:	38c6983a 	sll	r3,r7,r3
    53c8:	29c00017 	ldw	r7,0(r5)
    53cc:	2a7ffe04 	addi	r9,r5,-8
    53d0:	1886b03a 	or	r3,r3,r2
    53d4:	82400315 	stw	r9,12(r16)
    53d8:	81c00215 	stw	r7,8(r16)
    53dc:	30c00115 	stw	r3,4(r6)
    53e0:	2c000015 	stw	r16,0(r5)
    53e4:	3c000315 	stw	r16,12(r7)
    53e8:	2005d0ba 	srai	r2,r4,2
    53ec:	01400044 	movi	r5,1
    53f0:	288a983a 	sll	r5,r5,r2
    53f4:	19406f36 	bltu	r3,r5,55b4 <_malloc_r+0x324>
    53f8:	28c4703a 	and	r2,r5,r3
    53fc:	10000a1e 	bne	r2,zero,5428 <_malloc_r+0x198>
    5400:	00bfff04 	movi	r2,-4
    5404:	294b883a 	add	r5,r5,r5
    5408:	2088703a 	and	r4,r4,r2
    540c:	28c4703a 	and	r2,r5,r3
    5410:	21000104 	addi	r4,r4,4
    5414:	1000041e 	bne	r2,zero,5428 <_malloc_r+0x198>
    5418:	294b883a 	add	r5,r5,r5
    541c:	28c4703a 	and	r2,r5,r3
    5420:	21000104 	addi	r4,r4,4
    5424:	103ffc26 	beq	r2,zero,5418 <__alt_data_end+0xfffe5418>
    5428:	02bfff04 	movi	r10,-4
    542c:	024003c4 	movi	r9,15
    5430:	21800044 	addi	r6,r4,1
    5434:	318d883a 	add	r6,r6,r6
    5438:	318d883a 	add	r6,r6,r6
    543c:	318d883a 	add	r6,r6,r6
    5440:	998d883a 	add	r6,r19,r6
    5444:	333ffe04 	addi	r12,r6,-8
    5448:	2017883a 	mov	r11,r4
    544c:	31800104 	addi	r6,r6,4
    5450:	34000017 	ldw	r16,0(r6)
    5454:	31fffd04 	addi	r7,r6,-12
    5458:	81c0041e 	bne	r16,r7,546c <_malloc_r+0x1dc>
    545c:	0000fb06 	br	584c <_malloc_r+0x5bc>
    5460:	1801030e 	bge	r3,zero,5870 <_malloc_r+0x5e0>
    5464:	84000317 	ldw	r16,12(r16)
    5468:	81c0f826 	beq	r16,r7,584c <_malloc_r+0x5bc>
    546c:	80800117 	ldw	r2,4(r16)
    5470:	1284703a 	and	r2,r2,r10
    5474:	1447c83a 	sub	r3,r2,r17
    5478:	48fff90e 	bge	r9,r3,5460 <__alt_data_end+0xfffe5460>
    547c:	80800317 	ldw	r2,12(r16)
    5480:	81000217 	ldw	r4,8(r16)
    5484:	89400054 	ori	r5,r17,1
    5488:	81400115 	stw	r5,4(r16)
    548c:	20800315 	stw	r2,12(r4)
    5490:	11000215 	stw	r4,8(r2)
    5494:	8463883a 	add	r17,r16,r17
    5498:	9c400515 	stw	r17,20(r19)
    549c:	9c400415 	stw	r17,16(r19)
    54a0:	18800054 	ori	r2,r3,1
    54a4:	88800115 	stw	r2,4(r17)
    54a8:	8a000315 	stw	r8,12(r17)
    54ac:	8a000215 	stw	r8,8(r17)
    54b0:	88e3883a 	add	r17,r17,r3
    54b4:	88c00015 	stw	r3,0(r17)
    54b8:	9009883a 	mov	r4,r18
    54bc:	000d3140 	call	d314 <__malloc_unlock>
    54c0:	80800204 	addi	r2,r16,8
    54c4:	00001b06 	br	5534 <_malloc_r+0x2a4>
    54c8:	04400404 	movi	r17,16
    54cc:	89402536 	bltu	r17,r5,5564 <_malloc_r+0x2d4>
    54d0:	000d2f00 	call	d2f0 <__malloc_lock>
    54d4:	00800184 	movi	r2,6
    54d8:	01000084 	movi	r4,2
    54dc:	04c00074 	movhi	r19,1
    54e0:	1085883a 	add	r2,r2,r2
    54e4:	9cff1e04 	addi	r19,r19,-904
    54e8:	1085883a 	add	r2,r2,r2
    54ec:	9885883a 	add	r2,r19,r2
    54f0:	14000117 	ldw	r16,4(r2)
    54f4:	10fffe04 	addi	r3,r2,-8
    54f8:	80c0d926 	beq	r16,r3,5860 <_malloc_r+0x5d0>
    54fc:	80c00117 	ldw	r3,4(r16)
    5500:	81000317 	ldw	r4,12(r16)
    5504:	00bfff04 	movi	r2,-4
    5508:	1884703a 	and	r2,r3,r2
    550c:	81400217 	ldw	r5,8(r16)
    5510:	8085883a 	add	r2,r16,r2
    5514:	10c00117 	ldw	r3,4(r2)
    5518:	29000315 	stw	r4,12(r5)
    551c:	21400215 	stw	r5,8(r4)
    5520:	18c00054 	ori	r3,r3,1
    5524:	10c00115 	stw	r3,4(r2)
    5528:	9009883a 	mov	r4,r18
    552c:	000d3140 	call	d314 <__malloc_unlock>
    5530:	80800204 	addi	r2,r16,8
    5534:	dfc00a17 	ldw	ra,40(sp)
    5538:	df000917 	ldw	fp,36(sp)
    553c:	ddc00817 	ldw	r23,32(sp)
    5540:	dd800717 	ldw	r22,28(sp)
    5544:	dd400617 	ldw	r21,24(sp)
    5548:	dd000517 	ldw	r20,20(sp)
    554c:	dcc00417 	ldw	r19,16(sp)
    5550:	dc800317 	ldw	r18,12(sp)
    5554:	dc400217 	ldw	r17,8(sp)
    5558:	dc000117 	ldw	r16,4(sp)
    555c:	dec00b04 	addi	sp,sp,44
    5560:	f800283a 	ret
    5564:	00800304 	movi	r2,12
    5568:	90800015 	stw	r2,0(r18)
    556c:	0005883a 	mov	r2,zero
    5570:	003ff006 	br	5534 <__alt_data_end+0xfffe5534>
    5574:	01002004 	movi	r4,128
    5578:	02001004 	movi	r8,64
    557c:	01c00fc4 	movi	r7,63
    5580:	003f6106 	br	5308 <__alt_data_end+0xfffe5308>
    5584:	4009883a 	mov	r4,r8
    5588:	003f7506 	br	5360 <__alt_data_end+0xfffe5360>
    558c:	81000317 	ldw	r4,12(r16)
    5590:	003fde06 	br	550c <__alt_data_end+0xfffe550c>
    5594:	81c5883a 	add	r2,r16,r7
    5598:	11400117 	ldw	r5,4(r2)
    559c:	9009883a 	mov	r4,r18
    55a0:	29400054 	ori	r5,r5,1
    55a4:	11400115 	stw	r5,4(r2)
    55a8:	000d3140 	call	d314 <__malloc_unlock>
    55ac:	80800204 	addi	r2,r16,8
    55b0:	003fe006 	br	5534 <__alt_data_end+0xfffe5534>
    55b4:	9c000217 	ldw	r16,8(r19)
    55b8:	00bfff04 	movi	r2,-4
    55bc:	85800117 	ldw	r22,4(r16)
    55c0:	b0ac703a 	and	r22,r22,r2
    55c4:	b4400336 	bltu	r22,r17,55d4 <_malloc_r+0x344>
    55c8:	b445c83a 	sub	r2,r22,r17
    55cc:	00c003c4 	movi	r3,15
    55d0:	18805d16 	blt	r3,r2,5748 <_malloc_r+0x4b8>
    55d4:	05c00074 	movhi	r23,1
    55d8:	00800074 	movhi	r2,1
    55dc:	108b7204 	addi	r2,r2,11720
    55e0:	bdc4a504 	addi	r23,r23,4756
    55e4:	15400017 	ldw	r21,0(r2)
    55e8:	b8c00017 	ldw	r3,0(r23)
    55ec:	00bfffc4 	movi	r2,-1
    55f0:	858d883a 	add	r6,r16,r22
    55f4:	8d6b883a 	add	r21,r17,r21
    55f8:	1880ea26 	beq	r3,r2,59a4 <_malloc_r+0x714>
    55fc:	ad4403c4 	addi	r21,r21,4111
    5600:	00bc0004 	movi	r2,-4096
    5604:	a8aa703a 	and	r21,r21,r2
    5608:	a80b883a 	mov	r5,r21
    560c:	9009883a 	mov	r4,r18
    5610:	d9800015 	stw	r6,0(sp)
    5614:	0006e600 	call	6e60 <_sbrk_r>
    5618:	1029883a 	mov	r20,r2
    561c:	00bfffc4 	movi	r2,-1
    5620:	d9800017 	ldw	r6,0(sp)
    5624:	a080e826 	beq	r20,r2,59c8 <_malloc_r+0x738>
    5628:	a180a636 	bltu	r20,r6,58c4 <_malloc_r+0x634>
    562c:	07000074 	movhi	fp,1
    5630:	e70b7b04 	addi	fp,fp,11756
    5634:	e0800017 	ldw	r2,0(fp)
    5638:	a887883a 	add	r3,r21,r2
    563c:	e0c00015 	stw	r3,0(fp)
    5640:	3500e626 	beq	r6,r20,59dc <_malloc_r+0x74c>
    5644:	b9000017 	ldw	r4,0(r23)
    5648:	00bfffc4 	movi	r2,-1
    564c:	2080ee26 	beq	r4,r2,5a08 <_malloc_r+0x778>
    5650:	a185c83a 	sub	r2,r20,r6
    5654:	10c5883a 	add	r2,r2,r3
    5658:	e0800015 	stw	r2,0(fp)
    565c:	a0c001cc 	andi	r3,r20,7
    5660:	1800bc26 	beq	r3,zero,5954 <_malloc_r+0x6c4>
    5664:	a0e9c83a 	sub	r20,r20,r3
    5668:	00840204 	movi	r2,4104
    566c:	a5000204 	addi	r20,r20,8
    5670:	10c7c83a 	sub	r3,r2,r3
    5674:	a545883a 	add	r2,r20,r21
    5678:	1083ffcc 	andi	r2,r2,4095
    567c:	18abc83a 	sub	r21,r3,r2
    5680:	a80b883a 	mov	r5,r21
    5684:	9009883a 	mov	r4,r18
    5688:	0006e600 	call	6e60 <_sbrk_r>
    568c:	00ffffc4 	movi	r3,-1
    5690:	10c0e126 	beq	r2,r3,5a18 <_malloc_r+0x788>
    5694:	1505c83a 	sub	r2,r2,r20
    5698:	1545883a 	add	r2,r2,r21
    569c:	10800054 	ori	r2,r2,1
    56a0:	e0c00017 	ldw	r3,0(fp)
    56a4:	9d000215 	stw	r20,8(r19)
    56a8:	a0800115 	stw	r2,4(r20)
    56ac:	a8c7883a 	add	r3,r21,r3
    56b0:	e0c00015 	stw	r3,0(fp)
    56b4:	84c00e26 	beq	r16,r19,56f0 <_malloc_r+0x460>
    56b8:	018003c4 	movi	r6,15
    56bc:	3580a72e 	bgeu	r6,r22,595c <_malloc_r+0x6cc>
    56c0:	81400117 	ldw	r5,4(r16)
    56c4:	013ffe04 	movi	r4,-8
    56c8:	b0bffd04 	addi	r2,r22,-12
    56cc:	1104703a 	and	r2,r2,r4
    56d0:	2900004c 	andi	r4,r5,1
    56d4:	2088b03a 	or	r4,r4,r2
    56d8:	81000115 	stw	r4,4(r16)
    56dc:	01400144 	movi	r5,5
    56e0:	8089883a 	add	r4,r16,r2
    56e4:	21400115 	stw	r5,4(r4)
    56e8:	21400215 	stw	r5,8(r4)
    56ec:	3080cd36 	bltu	r6,r2,5a24 <_malloc_r+0x794>
    56f0:	00800074 	movhi	r2,1
    56f4:	108b7104 	addi	r2,r2,11716
    56f8:	11000017 	ldw	r4,0(r2)
    56fc:	20c0012e 	bgeu	r4,r3,5704 <_malloc_r+0x474>
    5700:	10c00015 	stw	r3,0(r2)
    5704:	00800074 	movhi	r2,1
    5708:	108b7004 	addi	r2,r2,11712
    570c:	11000017 	ldw	r4,0(r2)
    5710:	9c000217 	ldw	r16,8(r19)
    5714:	20c0012e 	bgeu	r4,r3,571c <_malloc_r+0x48c>
    5718:	10c00015 	stw	r3,0(r2)
    571c:	80c00117 	ldw	r3,4(r16)
    5720:	00bfff04 	movi	r2,-4
    5724:	1886703a 	and	r3,r3,r2
    5728:	1c45c83a 	sub	r2,r3,r17
    572c:	1c400236 	bltu	r3,r17,5738 <_malloc_r+0x4a8>
    5730:	00c003c4 	movi	r3,15
    5734:	18800416 	blt	r3,r2,5748 <_malloc_r+0x4b8>
    5738:	9009883a 	mov	r4,r18
    573c:	000d3140 	call	d314 <__malloc_unlock>
    5740:	0005883a 	mov	r2,zero
    5744:	003f7b06 	br	5534 <__alt_data_end+0xfffe5534>
    5748:	88c00054 	ori	r3,r17,1
    574c:	80c00115 	stw	r3,4(r16)
    5750:	8463883a 	add	r17,r16,r17
    5754:	10800054 	ori	r2,r2,1
    5758:	9c400215 	stw	r17,8(r19)
    575c:	88800115 	stw	r2,4(r17)
    5760:	9009883a 	mov	r4,r18
    5764:	000d3140 	call	d314 <__malloc_unlock>
    5768:	80800204 	addi	r2,r16,8
    576c:	003f7106 	br	5534 <__alt_data_end+0xfffe5534>
    5770:	00c00504 	movi	r3,20
    5774:	18804a2e 	bgeu	r3,r2,58a0 <_malloc_r+0x610>
    5778:	00c01504 	movi	r3,84
    577c:	18806e36 	bltu	r3,r2,5938 <_malloc_r+0x6a8>
    5780:	8804d33a 	srli	r2,r17,12
    5784:	12001bc4 	addi	r8,r2,111
    5788:	11c01b84 	addi	r7,r2,110
    578c:	4209883a 	add	r4,r8,r8
    5790:	003edd06 	br	5308 <__alt_data_end+0xfffe5308>
    5794:	3804d27a 	srli	r2,r7,9
    5798:	00c00104 	movi	r3,4
    579c:	1880442e 	bgeu	r3,r2,58b0 <_malloc_r+0x620>
    57a0:	00c00504 	movi	r3,20
    57a4:	18808136 	bltu	r3,r2,59ac <_malloc_r+0x71c>
    57a8:	11401704 	addi	r5,r2,92
    57ac:	10c016c4 	addi	r3,r2,91
    57b0:	294b883a 	add	r5,r5,r5
    57b4:	294b883a 	add	r5,r5,r5
    57b8:	294b883a 	add	r5,r5,r5
    57bc:	994b883a 	add	r5,r19,r5
    57c0:	28800017 	ldw	r2,0(r5)
    57c4:	01800074 	movhi	r6,1
    57c8:	297ffe04 	addi	r5,r5,-8
    57cc:	31bf1e04 	addi	r6,r6,-904
    57d0:	28806526 	beq	r5,r2,5968 <_malloc_r+0x6d8>
    57d4:	01bfff04 	movi	r6,-4
    57d8:	10c00117 	ldw	r3,4(r2)
    57dc:	1986703a 	and	r3,r3,r6
    57e0:	38c0022e 	bgeu	r7,r3,57ec <_malloc_r+0x55c>
    57e4:	10800217 	ldw	r2,8(r2)
    57e8:	28bffb1e 	bne	r5,r2,57d8 <__alt_data_end+0xfffe57d8>
    57ec:	11400317 	ldw	r5,12(r2)
    57f0:	98c00117 	ldw	r3,4(r19)
    57f4:	81400315 	stw	r5,12(r16)
    57f8:	80800215 	stw	r2,8(r16)
    57fc:	2c000215 	stw	r16,8(r5)
    5800:	14000315 	stw	r16,12(r2)
    5804:	003ef806 	br	53e8 <__alt_data_end+0xfffe53e8>
    5808:	88c00054 	ori	r3,r17,1
    580c:	80c00115 	stw	r3,4(r16)
    5810:	8463883a 	add	r17,r16,r17
    5814:	34400515 	stw	r17,20(r6)
    5818:	34400415 	stw	r17,16(r6)
    581c:	10c00054 	ori	r3,r2,1
    5820:	8a000315 	stw	r8,12(r17)
    5824:	8a000215 	stw	r8,8(r17)
    5828:	88c00115 	stw	r3,4(r17)
    582c:	88a3883a 	add	r17,r17,r2
    5830:	88800015 	stw	r2,0(r17)
    5834:	9009883a 	mov	r4,r18
    5838:	000d3140 	call	d314 <__malloc_unlock>
    583c:	80800204 	addi	r2,r16,8
    5840:	003f3c06 	br	5534 <__alt_data_end+0xfffe5534>
    5844:	30c00117 	ldw	r3,4(r6)
    5848:	003ee706 	br	53e8 <__alt_data_end+0xfffe53e8>
    584c:	5ac00044 	addi	r11,r11,1
    5850:	588000cc 	andi	r2,r11,3
    5854:	31800204 	addi	r6,r6,8
    5858:	103efd1e 	bne	r2,zero,5450 <__alt_data_end+0xfffe5450>
    585c:	00002406 	br	58f0 <_malloc_r+0x660>
    5860:	14000317 	ldw	r16,12(r2)
    5864:	143f251e 	bne	r2,r16,54fc <__alt_data_end+0xfffe54fc>
    5868:	21000084 	addi	r4,r4,2
    586c:	003ebc06 	br	5360 <__alt_data_end+0xfffe5360>
    5870:	8085883a 	add	r2,r16,r2
    5874:	10c00117 	ldw	r3,4(r2)
    5878:	81000317 	ldw	r4,12(r16)
    587c:	81400217 	ldw	r5,8(r16)
    5880:	18c00054 	ori	r3,r3,1
    5884:	10c00115 	stw	r3,4(r2)
    5888:	29000315 	stw	r4,12(r5)
    588c:	21400215 	stw	r5,8(r4)
    5890:	9009883a 	mov	r4,r18
    5894:	000d3140 	call	d314 <__malloc_unlock>
    5898:	80800204 	addi	r2,r16,8
    589c:	003f2506 	br	5534 <__alt_data_end+0xfffe5534>
    58a0:	12001704 	addi	r8,r2,92
    58a4:	11c016c4 	addi	r7,r2,91
    58a8:	4209883a 	add	r4,r8,r8
    58ac:	003e9606 	br	5308 <__alt_data_end+0xfffe5308>
    58b0:	3804d1ba 	srli	r2,r7,6
    58b4:	11400e44 	addi	r5,r2,57
    58b8:	10c00e04 	addi	r3,r2,56
    58bc:	294b883a 	add	r5,r5,r5
    58c0:	003fbc06 	br	57b4 <__alt_data_end+0xfffe57b4>
    58c4:	84ff5926 	beq	r16,r19,562c <__alt_data_end+0xfffe562c>
    58c8:	00800074 	movhi	r2,1
    58cc:	10bf1e04 	addi	r2,r2,-904
    58d0:	14000217 	ldw	r16,8(r2)
    58d4:	00bfff04 	movi	r2,-4
    58d8:	80c00117 	ldw	r3,4(r16)
    58dc:	1886703a 	and	r3,r3,r2
    58e0:	003f9106 	br	5728 <__alt_data_end+0xfffe5728>
    58e4:	60800217 	ldw	r2,8(r12)
    58e8:	213fffc4 	addi	r4,r4,-1
    58ec:	1300651e 	bne	r2,r12,5a84 <_malloc_r+0x7f4>
    58f0:	208000cc 	andi	r2,r4,3
    58f4:	633ffe04 	addi	r12,r12,-8
    58f8:	103ffa1e 	bne	r2,zero,58e4 <__alt_data_end+0xfffe58e4>
    58fc:	98800117 	ldw	r2,4(r19)
    5900:	0146303a 	nor	r3,zero,r5
    5904:	1884703a 	and	r2,r3,r2
    5908:	98800115 	stw	r2,4(r19)
    590c:	294b883a 	add	r5,r5,r5
    5910:	117f2836 	bltu	r2,r5,55b4 <__alt_data_end+0xfffe55b4>
    5914:	283f2726 	beq	r5,zero,55b4 <__alt_data_end+0xfffe55b4>
    5918:	2886703a 	and	r3,r5,r2
    591c:	5809883a 	mov	r4,r11
    5920:	183ec31e 	bne	r3,zero,5430 <__alt_data_end+0xfffe5430>
    5924:	294b883a 	add	r5,r5,r5
    5928:	2886703a 	and	r3,r5,r2
    592c:	21000104 	addi	r4,r4,4
    5930:	183ffc26 	beq	r3,zero,5924 <__alt_data_end+0xfffe5924>
    5934:	003ebe06 	br	5430 <__alt_data_end+0xfffe5430>
    5938:	00c05504 	movi	r3,340
    593c:	18801236 	bltu	r3,r2,5988 <_malloc_r+0x6f8>
    5940:	8804d3fa 	srli	r2,r17,15
    5944:	12001e04 	addi	r8,r2,120
    5948:	11c01dc4 	addi	r7,r2,119
    594c:	4209883a 	add	r4,r8,r8
    5950:	003e6d06 	br	5308 <__alt_data_end+0xfffe5308>
    5954:	00c40004 	movi	r3,4096
    5958:	003f4606 	br	5674 <__alt_data_end+0xfffe5674>
    595c:	00800044 	movi	r2,1
    5960:	a0800115 	stw	r2,4(r20)
    5964:	003f7406 	br	5738 <__alt_data_end+0xfffe5738>
    5968:	1805d0ba 	srai	r2,r3,2
    596c:	01c00044 	movi	r7,1
    5970:	30c00117 	ldw	r3,4(r6)
    5974:	388e983a 	sll	r7,r7,r2
    5978:	2805883a 	mov	r2,r5
    597c:	38c6b03a 	or	r3,r7,r3
    5980:	30c00115 	stw	r3,4(r6)
    5984:	003f9b06 	br	57f4 <__alt_data_end+0xfffe57f4>
    5988:	00c15504 	movi	r3,1364
    598c:	18801a36 	bltu	r3,r2,59f8 <_malloc_r+0x768>
    5990:	8804d4ba 	srli	r2,r17,18
    5994:	12001f44 	addi	r8,r2,125
    5998:	11c01f04 	addi	r7,r2,124
    599c:	4209883a 	add	r4,r8,r8
    59a0:	003e5906 	br	5308 <__alt_data_end+0xfffe5308>
    59a4:	ad400404 	addi	r21,r21,16
    59a8:	003f1706 	br	5608 <__alt_data_end+0xfffe5608>
    59ac:	00c01504 	movi	r3,84
    59b0:	18802336 	bltu	r3,r2,5a40 <_malloc_r+0x7b0>
    59b4:	3804d33a 	srli	r2,r7,12
    59b8:	11401bc4 	addi	r5,r2,111
    59bc:	10c01b84 	addi	r3,r2,110
    59c0:	294b883a 	add	r5,r5,r5
    59c4:	003f7b06 	br	57b4 <__alt_data_end+0xfffe57b4>
    59c8:	9c000217 	ldw	r16,8(r19)
    59cc:	00bfff04 	movi	r2,-4
    59d0:	80c00117 	ldw	r3,4(r16)
    59d4:	1886703a 	and	r3,r3,r2
    59d8:	003f5306 	br	5728 <__alt_data_end+0xfffe5728>
    59dc:	3083ffcc 	andi	r2,r6,4095
    59e0:	103f181e 	bne	r2,zero,5644 <__alt_data_end+0xfffe5644>
    59e4:	99000217 	ldw	r4,8(r19)
    59e8:	b545883a 	add	r2,r22,r21
    59ec:	10800054 	ori	r2,r2,1
    59f0:	20800115 	stw	r2,4(r4)
    59f4:	003f3e06 	br	56f0 <__alt_data_end+0xfffe56f0>
    59f8:	01003f84 	movi	r4,254
    59fc:	02001fc4 	movi	r8,127
    5a00:	01c01f84 	movi	r7,126
    5a04:	003e4006 	br	5308 <__alt_data_end+0xfffe5308>
    5a08:	00800074 	movhi	r2,1
    5a0c:	1084a504 	addi	r2,r2,4756
    5a10:	15000015 	stw	r20,0(r2)
    5a14:	003f1106 	br	565c <__alt_data_end+0xfffe565c>
    5a18:	00800044 	movi	r2,1
    5a1c:	002b883a 	mov	r21,zero
    5a20:	003f1f06 	br	56a0 <__alt_data_end+0xfffe56a0>
    5a24:	81400204 	addi	r5,r16,8
    5a28:	9009883a 	mov	r4,r18
    5a2c:	0004b600 	call	4b60 <_free_r>
    5a30:	00800074 	movhi	r2,1
    5a34:	108b7b04 	addi	r2,r2,11756
    5a38:	10c00017 	ldw	r3,0(r2)
    5a3c:	003f2c06 	br	56f0 <__alt_data_end+0xfffe56f0>
    5a40:	00c05504 	movi	r3,340
    5a44:	18800536 	bltu	r3,r2,5a5c <_malloc_r+0x7cc>
    5a48:	3804d3fa 	srli	r2,r7,15
    5a4c:	11401e04 	addi	r5,r2,120
    5a50:	10c01dc4 	addi	r3,r2,119
    5a54:	294b883a 	add	r5,r5,r5
    5a58:	003f5606 	br	57b4 <__alt_data_end+0xfffe57b4>
    5a5c:	00c15504 	movi	r3,1364
    5a60:	18800536 	bltu	r3,r2,5a78 <_malloc_r+0x7e8>
    5a64:	3804d4ba 	srli	r2,r7,18
    5a68:	11401f44 	addi	r5,r2,125
    5a6c:	10c01f04 	addi	r3,r2,124
    5a70:	294b883a 	add	r5,r5,r5
    5a74:	003f4f06 	br	57b4 <__alt_data_end+0xfffe57b4>
    5a78:	01403f84 	movi	r5,254
    5a7c:	00c01f84 	movi	r3,126
    5a80:	003f4c06 	br	57b4 <__alt_data_end+0xfffe57b4>
    5a84:	98800117 	ldw	r2,4(r19)
    5a88:	003fa006 	br	590c <__alt_data_end+0xfffe590c>
    5a8c:	8808d0fa 	srli	r4,r17,3
    5a90:	20800044 	addi	r2,r4,1
    5a94:	1085883a 	add	r2,r2,r2
    5a98:	003e9006 	br	54dc <__alt_data_end+0xfffe54dc>

00005a9c <memchr>:
    5a9c:	208000cc 	andi	r2,r4,3
    5aa0:	280f883a 	mov	r7,r5
    5aa4:	10003426 	beq	r2,zero,5b78 <memchr+0xdc>
    5aa8:	30bfffc4 	addi	r2,r6,-1
    5aac:	30001a26 	beq	r6,zero,5b18 <memchr+0x7c>
    5ab0:	20c00003 	ldbu	r3,0(r4)
    5ab4:	29803fcc 	andi	r6,r5,255
    5ab8:	30c0051e 	bne	r6,r3,5ad0 <memchr+0x34>
    5abc:	00001806 	br	5b20 <memchr+0x84>
    5ac0:	10001526 	beq	r2,zero,5b18 <memchr+0x7c>
    5ac4:	20c00003 	ldbu	r3,0(r4)
    5ac8:	10bfffc4 	addi	r2,r2,-1
    5acc:	30c01426 	beq	r6,r3,5b20 <memchr+0x84>
    5ad0:	21000044 	addi	r4,r4,1
    5ad4:	20c000cc 	andi	r3,r4,3
    5ad8:	183ff91e 	bne	r3,zero,5ac0 <__alt_data_end+0xfffe5ac0>
    5adc:	020000c4 	movi	r8,3
    5ae0:	40801136 	bltu	r8,r2,5b28 <memchr+0x8c>
    5ae4:	10000c26 	beq	r2,zero,5b18 <memchr+0x7c>
    5ae8:	20c00003 	ldbu	r3,0(r4)
    5aec:	29403fcc 	andi	r5,r5,255
    5af0:	28c00b26 	beq	r5,r3,5b20 <memchr+0x84>
    5af4:	20c00044 	addi	r3,r4,1
    5af8:	39803fcc 	andi	r6,r7,255
    5afc:	2089883a 	add	r4,r4,r2
    5b00:	00000306 	br	5b10 <memchr+0x74>
    5b04:	18c00044 	addi	r3,r3,1
    5b08:	197fffc3 	ldbu	r5,-1(r3)
    5b0c:	31400526 	beq	r6,r5,5b24 <memchr+0x88>
    5b10:	1805883a 	mov	r2,r3
    5b14:	20fffb1e 	bne	r4,r3,5b04 <__alt_data_end+0xfffe5b04>
    5b18:	0005883a 	mov	r2,zero
    5b1c:	f800283a 	ret
    5b20:	2005883a 	mov	r2,r4
    5b24:	f800283a 	ret
    5b28:	28c03fcc 	andi	r3,r5,255
    5b2c:	1812923a 	slli	r9,r3,8
    5b30:	02ffbff4 	movhi	r11,65279
    5b34:	02a02074 	movhi	r10,32897
    5b38:	48d2b03a 	or	r9,r9,r3
    5b3c:	4806943a 	slli	r3,r9,16
    5b40:	5affbfc4 	addi	r11,r11,-257
    5b44:	52a02004 	addi	r10,r10,-32640
    5b48:	48d2b03a 	or	r9,r9,r3
    5b4c:	20c00017 	ldw	r3,0(r4)
    5b50:	48c6f03a 	xor	r3,r9,r3
    5b54:	1acd883a 	add	r6,r3,r11
    5b58:	00c6303a 	nor	r3,zero,r3
    5b5c:	30c6703a 	and	r3,r6,r3
    5b60:	1a86703a 	and	r3,r3,r10
    5b64:	183fe01e 	bne	r3,zero,5ae8 <__alt_data_end+0xfffe5ae8>
    5b68:	10bfff04 	addi	r2,r2,-4
    5b6c:	21000104 	addi	r4,r4,4
    5b70:	40bff636 	bltu	r8,r2,5b4c <__alt_data_end+0xfffe5b4c>
    5b74:	003fdb06 	br	5ae4 <__alt_data_end+0xfffe5ae4>
    5b78:	3005883a 	mov	r2,r6
    5b7c:	003fd706 	br	5adc <__alt_data_end+0xfffe5adc>

00005b80 <memcpy>:
    5b80:	defffd04 	addi	sp,sp,-12
    5b84:	dfc00215 	stw	ra,8(sp)
    5b88:	dc400115 	stw	r17,4(sp)
    5b8c:	dc000015 	stw	r16,0(sp)
    5b90:	00c003c4 	movi	r3,15
    5b94:	2005883a 	mov	r2,r4
    5b98:	1980452e 	bgeu	r3,r6,5cb0 <memcpy+0x130>
    5b9c:	2906b03a 	or	r3,r5,r4
    5ba0:	18c000cc 	andi	r3,r3,3
    5ba4:	1800441e 	bne	r3,zero,5cb8 <memcpy+0x138>
    5ba8:	347ffc04 	addi	r17,r6,-16
    5bac:	8822d13a 	srli	r17,r17,4
    5bb0:	28c00104 	addi	r3,r5,4
    5bb4:	23400104 	addi	r13,r4,4
    5bb8:	8820913a 	slli	r16,r17,4
    5bbc:	2b000204 	addi	r12,r5,8
    5bc0:	22c00204 	addi	r11,r4,8
    5bc4:	84000504 	addi	r16,r16,20
    5bc8:	2a800304 	addi	r10,r5,12
    5bcc:	22400304 	addi	r9,r4,12
    5bd0:	2c21883a 	add	r16,r5,r16
    5bd4:	2811883a 	mov	r8,r5
    5bd8:	200f883a 	mov	r7,r4
    5bdc:	41000017 	ldw	r4,0(r8)
    5be0:	1fc00017 	ldw	ra,0(r3)
    5be4:	63c00017 	ldw	r15,0(r12)
    5be8:	39000015 	stw	r4,0(r7)
    5bec:	53800017 	ldw	r14,0(r10)
    5bf0:	6fc00015 	stw	ra,0(r13)
    5bf4:	5bc00015 	stw	r15,0(r11)
    5bf8:	4b800015 	stw	r14,0(r9)
    5bfc:	18c00404 	addi	r3,r3,16
    5c00:	39c00404 	addi	r7,r7,16
    5c04:	42000404 	addi	r8,r8,16
    5c08:	6b400404 	addi	r13,r13,16
    5c0c:	63000404 	addi	r12,r12,16
    5c10:	5ac00404 	addi	r11,r11,16
    5c14:	52800404 	addi	r10,r10,16
    5c18:	4a400404 	addi	r9,r9,16
    5c1c:	1c3fef1e 	bne	r3,r16,5bdc <__alt_data_end+0xfffe5bdc>
    5c20:	89c00044 	addi	r7,r17,1
    5c24:	380e913a 	slli	r7,r7,4
    5c28:	310003cc 	andi	r4,r6,15
    5c2c:	02c000c4 	movi	r11,3
    5c30:	11c7883a 	add	r3,r2,r7
    5c34:	29cb883a 	add	r5,r5,r7
    5c38:	5900212e 	bgeu	r11,r4,5cc0 <memcpy+0x140>
    5c3c:	1813883a 	mov	r9,r3
    5c40:	2811883a 	mov	r8,r5
    5c44:	200f883a 	mov	r7,r4
    5c48:	42800017 	ldw	r10,0(r8)
    5c4c:	4a400104 	addi	r9,r9,4
    5c50:	39ffff04 	addi	r7,r7,-4
    5c54:	4abfff15 	stw	r10,-4(r9)
    5c58:	42000104 	addi	r8,r8,4
    5c5c:	59fffa36 	bltu	r11,r7,5c48 <__alt_data_end+0xfffe5c48>
    5c60:	213fff04 	addi	r4,r4,-4
    5c64:	2008d0ba 	srli	r4,r4,2
    5c68:	318000cc 	andi	r6,r6,3
    5c6c:	21000044 	addi	r4,r4,1
    5c70:	2109883a 	add	r4,r4,r4
    5c74:	2109883a 	add	r4,r4,r4
    5c78:	1907883a 	add	r3,r3,r4
    5c7c:	290b883a 	add	r5,r5,r4
    5c80:	30000626 	beq	r6,zero,5c9c <memcpy+0x11c>
    5c84:	198d883a 	add	r6,r3,r6
    5c88:	29c00003 	ldbu	r7,0(r5)
    5c8c:	18c00044 	addi	r3,r3,1
    5c90:	29400044 	addi	r5,r5,1
    5c94:	19ffffc5 	stb	r7,-1(r3)
    5c98:	19bffb1e 	bne	r3,r6,5c88 <__alt_data_end+0xfffe5c88>
    5c9c:	dfc00217 	ldw	ra,8(sp)
    5ca0:	dc400117 	ldw	r17,4(sp)
    5ca4:	dc000017 	ldw	r16,0(sp)
    5ca8:	dec00304 	addi	sp,sp,12
    5cac:	f800283a 	ret
    5cb0:	2007883a 	mov	r3,r4
    5cb4:	003ff206 	br	5c80 <__alt_data_end+0xfffe5c80>
    5cb8:	2007883a 	mov	r3,r4
    5cbc:	003ff106 	br	5c84 <__alt_data_end+0xfffe5c84>
    5cc0:	200d883a 	mov	r6,r4
    5cc4:	003fee06 	br	5c80 <__alt_data_end+0xfffe5c80>

00005cc8 <memset>:
    5cc8:	20c000cc 	andi	r3,r4,3
    5ccc:	2005883a 	mov	r2,r4
    5cd0:	18004426 	beq	r3,zero,5de4 <memset+0x11c>
    5cd4:	31ffffc4 	addi	r7,r6,-1
    5cd8:	30004026 	beq	r6,zero,5ddc <memset+0x114>
    5cdc:	2813883a 	mov	r9,r5
    5ce0:	200d883a 	mov	r6,r4
    5ce4:	2007883a 	mov	r3,r4
    5ce8:	00000406 	br	5cfc <memset+0x34>
    5cec:	3a3fffc4 	addi	r8,r7,-1
    5cf0:	31800044 	addi	r6,r6,1
    5cf4:	38003926 	beq	r7,zero,5ddc <memset+0x114>
    5cf8:	400f883a 	mov	r7,r8
    5cfc:	18c00044 	addi	r3,r3,1
    5d00:	32400005 	stb	r9,0(r6)
    5d04:	1a0000cc 	andi	r8,r3,3
    5d08:	403ff81e 	bne	r8,zero,5cec <__alt_data_end+0xfffe5cec>
    5d0c:	010000c4 	movi	r4,3
    5d10:	21c02d2e 	bgeu	r4,r7,5dc8 <memset+0x100>
    5d14:	29003fcc 	andi	r4,r5,255
    5d18:	200c923a 	slli	r6,r4,8
    5d1c:	3108b03a 	or	r4,r6,r4
    5d20:	200c943a 	slli	r6,r4,16
    5d24:	218cb03a 	or	r6,r4,r6
    5d28:	010003c4 	movi	r4,15
    5d2c:	21c0182e 	bgeu	r4,r7,5d90 <memset+0xc8>
    5d30:	3b3ffc04 	addi	r12,r7,-16
    5d34:	6018d13a 	srli	r12,r12,4
    5d38:	1a000104 	addi	r8,r3,4
    5d3c:	1ac00204 	addi	r11,r3,8
    5d40:	6008913a 	slli	r4,r12,4
    5d44:	1a800304 	addi	r10,r3,12
    5d48:	1813883a 	mov	r9,r3
    5d4c:	21000504 	addi	r4,r4,20
    5d50:	1909883a 	add	r4,r3,r4
    5d54:	49800015 	stw	r6,0(r9)
    5d58:	41800015 	stw	r6,0(r8)
    5d5c:	59800015 	stw	r6,0(r11)
    5d60:	51800015 	stw	r6,0(r10)
    5d64:	42000404 	addi	r8,r8,16
    5d68:	4a400404 	addi	r9,r9,16
    5d6c:	5ac00404 	addi	r11,r11,16
    5d70:	52800404 	addi	r10,r10,16
    5d74:	413ff71e 	bne	r8,r4,5d54 <__alt_data_end+0xfffe5d54>
    5d78:	63000044 	addi	r12,r12,1
    5d7c:	6018913a 	slli	r12,r12,4
    5d80:	39c003cc 	andi	r7,r7,15
    5d84:	010000c4 	movi	r4,3
    5d88:	1b07883a 	add	r3,r3,r12
    5d8c:	21c00e2e 	bgeu	r4,r7,5dc8 <memset+0x100>
    5d90:	1813883a 	mov	r9,r3
    5d94:	3811883a 	mov	r8,r7
    5d98:	010000c4 	movi	r4,3
    5d9c:	49800015 	stw	r6,0(r9)
    5da0:	423fff04 	addi	r8,r8,-4
    5da4:	4a400104 	addi	r9,r9,4
    5da8:	223ffc36 	bltu	r4,r8,5d9c <__alt_data_end+0xfffe5d9c>
    5dac:	393fff04 	addi	r4,r7,-4
    5db0:	2008d0ba 	srli	r4,r4,2
    5db4:	39c000cc 	andi	r7,r7,3
    5db8:	21000044 	addi	r4,r4,1
    5dbc:	2109883a 	add	r4,r4,r4
    5dc0:	2109883a 	add	r4,r4,r4
    5dc4:	1907883a 	add	r3,r3,r4
    5dc8:	38000526 	beq	r7,zero,5de0 <memset+0x118>
    5dcc:	19cf883a 	add	r7,r3,r7
    5dd0:	19400005 	stb	r5,0(r3)
    5dd4:	18c00044 	addi	r3,r3,1
    5dd8:	38fffd1e 	bne	r7,r3,5dd0 <__alt_data_end+0xfffe5dd0>
    5ddc:	f800283a 	ret
    5de0:	f800283a 	ret
    5de4:	2007883a 	mov	r3,r4
    5de8:	300f883a 	mov	r7,r6
    5dec:	003fc706 	br	5d0c <__alt_data_end+0xfffe5d0c>

00005df0 <_Balloc>:
    5df0:	20801317 	ldw	r2,76(r4)
    5df4:	defffc04 	addi	sp,sp,-16
    5df8:	dc400115 	stw	r17,4(sp)
    5dfc:	dc000015 	stw	r16,0(sp)
    5e00:	dfc00315 	stw	ra,12(sp)
    5e04:	dc800215 	stw	r18,8(sp)
    5e08:	2023883a 	mov	r17,r4
    5e0c:	2821883a 	mov	r16,r5
    5e10:	10000f26 	beq	r2,zero,5e50 <_Balloc+0x60>
    5e14:	8407883a 	add	r3,r16,r16
    5e18:	18c7883a 	add	r3,r3,r3
    5e1c:	10c7883a 	add	r3,r2,r3
    5e20:	18800017 	ldw	r2,0(r3)
    5e24:	10001126 	beq	r2,zero,5e6c <_Balloc+0x7c>
    5e28:	11000017 	ldw	r4,0(r2)
    5e2c:	19000015 	stw	r4,0(r3)
    5e30:	10000415 	stw	zero,16(r2)
    5e34:	10000315 	stw	zero,12(r2)
    5e38:	dfc00317 	ldw	ra,12(sp)
    5e3c:	dc800217 	ldw	r18,8(sp)
    5e40:	dc400117 	ldw	r17,4(sp)
    5e44:	dc000017 	ldw	r16,0(sp)
    5e48:	dec00404 	addi	sp,sp,16
    5e4c:	f800283a 	ret
    5e50:	01800844 	movi	r6,33
    5e54:	01400104 	movi	r5,4
    5e58:	00088600 	call	8860 <_calloc_r>
    5e5c:	88801315 	stw	r2,76(r17)
    5e60:	103fec1e 	bne	r2,zero,5e14 <__alt_data_end+0xfffe5e14>
    5e64:	0005883a 	mov	r2,zero
    5e68:	003ff306 	br	5e38 <__alt_data_end+0xfffe5e38>
    5e6c:	01400044 	movi	r5,1
    5e70:	2c24983a 	sll	r18,r5,r16
    5e74:	8809883a 	mov	r4,r17
    5e78:	91800144 	addi	r6,r18,5
    5e7c:	318d883a 	add	r6,r6,r6
    5e80:	318d883a 	add	r6,r6,r6
    5e84:	00088600 	call	8860 <_calloc_r>
    5e88:	103ff626 	beq	r2,zero,5e64 <__alt_data_end+0xfffe5e64>
    5e8c:	14000115 	stw	r16,4(r2)
    5e90:	14800215 	stw	r18,8(r2)
    5e94:	003fe606 	br	5e30 <__alt_data_end+0xfffe5e30>

00005e98 <_Bfree>:
    5e98:	28000826 	beq	r5,zero,5ebc <_Bfree+0x24>
    5e9c:	28c00117 	ldw	r3,4(r5)
    5ea0:	20801317 	ldw	r2,76(r4)
    5ea4:	18c7883a 	add	r3,r3,r3
    5ea8:	18c7883a 	add	r3,r3,r3
    5eac:	10c5883a 	add	r2,r2,r3
    5eb0:	10c00017 	ldw	r3,0(r2)
    5eb4:	28c00015 	stw	r3,0(r5)
    5eb8:	11400015 	stw	r5,0(r2)
    5ebc:	f800283a 	ret

00005ec0 <__multadd>:
    5ec0:	defffa04 	addi	sp,sp,-24
    5ec4:	dc800315 	stw	r18,12(sp)
    5ec8:	dc400215 	stw	r17,8(sp)
    5ecc:	dc000115 	stw	r16,4(sp)
    5ed0:	2823883a 	mov	r17,r5
    5ed4:	2c000417 	ldw	r16,16(r5)
    5ed8:	dfc00515 	stw	ra,20(sp)
    5edc:	dcc00415 	stw	r19,16(sp)
    5ee0:	2025883a 	mov	r18,r4
    5ee4:	29400504 	addi	r5,r5,20
    5ee8:	0011883a 	mov	r8,zero
    5eec:	28c00017 	ldw	r3,0(r5)
    5ef0:	29400104 	addi	r5,r5,4
    5ef4:	42000044 	addi	r8,r8,1
    5ef8:	18bfffcc 	andi	r2,r3,65535
    5efc:	1185383a 	mul	r2,r2,r6
    5f00:	1806d43a 	srli	r3,r3,16
    5f04:	11cf883a 	add	r7,r2,r7
    5f08:	3808d43a 	srli	r4,r7,16
    5f0c:	1987383a 	mul	r3,r3,r6
    5f10:	38bfffcc 	andi	r2,r7,65535
    5f14:	1907883a 	add	r3,r3,r4
    5f18:	1808943a 	slli	r4,r3,16
    5f1c:	180ed43a 	srli	r7,r3,16
    5f20:	2085883a 	add	r2,r4,r2
    5f24:	28bfff15 	stw	r2,-4(r5)
    5f28:	443ff016 	blt	r8,r16,5eec <__alt_data_end+0xfffe5eec>
    5f2c:	38000926 	beq	r7,zero,5f54 <__multadd+0x94>
    5f30:	88800217 	ldw	r2,8(r17)
    5f34:	80800f0e 	bge	r16,r2,5f74 <__multadd+0xb4>
    5f38:	80800144 	addi	r2,r16,5
    5f3c:	1085883a 	add	r2,r2,r2
    5f40:	1085883a 	add	r2,r2,r2
    5f44:	8885883a 	add	r2,r17,r2
    5f48:	11c00015 	stw	r7,0(r2)
    5f4c:	84000044 	addi	r16,r16,1
    5f50:	8c000415 	stw	r16,16(r17)
    5f54:	8805883a 	mov	r2,r17
    5f58:	dfc00517 	ldw	ra,20(sp)
    5f5c:	dcc00417 	ldw	r19,16(sp)
    5f60:	dc800317 	ldw	r18,12(sp)
    5f64:	dc400217 	ldw	r17,8(sp)
    5f68:	dc000117 	ldw	r16,4(sp)
    5f6c:	dec00604 	addi	sp,sp,24
    5f70:	f800283a 	ret
    5f74:	89400117 	ldw	r5,4(r17)
    5f78:	9009883a 	mov	r4,r18
    5f7c:	d9c00015 	stw	r7,0(sp)
    5f80:	29400044 	addi	r5,r5,1
    5f84:	0005df00 	call	5df0 <_Balloc>
    5f88:	89800417 	ldw	r6,16(r17)
    5f8c:	89400304 	addi	r5,r17,12
    5f90:	11000304 	addi	r4,r2,12
    5f94:	31800084 	addi	r6,r6,2
    5f98:	318d883a 	add	r6,r6,r6
    5f9c:	318d883a 	add	r6,r6,r6
    5fa0:	1027883a 	mov	r19,r2
    5fa4:	0005b800 	call	5b80 <memcpy>
    5fa8:	d9c00017 	ldw	r7,0(sp)
    5fac:	88000a26 	beq	r17,zero,5fd8 <__multadd+0x118>
    5fb0:	88c00117 	ldw	r3,4(r17)
    5fb4:	90801317 	ldw	r2,76(r18)
    5fb8:	18c7883a 	add	r3,r3,r3
    5fbc:	18c7883a 	add	r3,r3,r3
    5fc0:	10c5883a 	add	r2,r2,r3
    5fc4:	10c00017 	ldw	r3,0(r2)
    5fc8:	88c00015 	stw	r3,0(r17)
    5fcc:	14400015 	stw	r17,0(r2)
    5fd0:	9823883a 	mov	r17,r19
    5fd4:	003fd806 	br	5f38 <__alt_data_end+0xfffe5f38>
    5fd8:	9823883a 	mov	r17,r19
    5fdc:	003fd606 	br	5f38 <__alt_data_end+0xfffe5f38>

00005fe0 <__s2b>:
    5fe0:	defff904 	addi	sp,sp,-28
    5fe4:	dc400115 	stw	r17,4(sp)
    5fe8:	dc000015 	stw	r16,0(sp)
    5fec:	2023883a 	mov	r17,r4
    5ff0:	2821883a 	mov	r16,r5
    5ff4:	39000204 	addi	r4,r7,8
    5ff8:	01400244 	movi	r5,9
    5ffc:	dcc00315 	stw	r19,12(sp)
    6000:	dc800215 	stw	r18,8(sp)
    6004:	dfc00615 	stw	ra,24(sp)
    6008:	dd400515 	stw	r21,20(sp)
    600c:	dd000415 	stw	r20,16(sp)
    6010:	3825883a 	mov	r18,r7
    6014:	3027883a 	mov	r19,r6
    6018:	00005280 	call	528 <__divsi3>
    601c:	00c00044 	movi	r3,1
    6020:	000b883a 	mov	r5,zero
    6024:	1880030e 	bge	r3,r2,6034 <__s2b+0x54>
    6028:	18c7883a 	add	r3,r3,r3
    602c:	29400044 	addi	r5,r5,1
    6030:	18bffd16 	blt	r3,r2,6028 <__alt_data_end+0xfffe6028>
    6034:	8809883a 	mov	r4,r17
    6038:	0005df00 	call	5df0 <_Balloc>
    603c:	d8c00717 	ldw	r3,28(sp)
    6040:	10c00515 	stw	r3,20(r2)
    6044:	00c00044 	movi	r3,1
    6048:	10c00415 	stw	r3,16(r2)
    604c:	00c00244 	movi	r3,9
    6050:	1cc0210e 	bge	r3,r19,60d8 <__s2b+0xf8>
    6054:	80eb883a 	add	r21,r16,r3
    6058:	a829883a 	mov	r20,r21
    605c:	84e1883a 	add	r16,r16,r19
    6060:	a1c00007 	ldb	r7,0(r20)
    6064:	01800284 	movi	r6,10
    6068:	a5000044 	addi	r20,r20,1
    606c:	100b883a 	mov	r5,r2
    6070:	39fff404 	addi	r7,r7,-48
    6074:	8809883a 	mov	r4,r17
    6078:	0005ec00 	call	5ec0 <__multadd>
    607c:	a43ff81e 	bne	r20,r16,6060 <__alt_data_end+0xfffe6060>
    6080:	ace1883a 	add	r16,r21,r19
    6084:	843ffe04 	addi	r16,r16,-8
    6088:	9c800a0e 	bge	r19,r18,60b4 <__s2b+0xd4>
    608c:	94e5c83a 	sub	r18,r18,r19
    6090:	84a5883a 	add	r18,r16,r18
    6094:	81c00007 	ldb	r7,0(r16)
    6098:	01800284 	movi	r6,10
    609c:	84000044 	addi	r16,r16,1
    60a0:	100b883a 	mov	r5,r2
    60a4:	39fff404 	addi	r7,r7,-48
    60a8:	8809883a 	mov	r4,r17
    60ac:	0005ec00 	call	5ec0 <__multadd>
    60b0:	84bff81e 	bne	r16,r18,6094 <__alt_data_end+0xfffe6094>
    60b4:	dfc00617 	ldw	ra,24(sp)
    60b8:	dd400517 	ldw	r21,20(sp)
    60bc:	dd000417 	ldw	r20,16(sp)
    60c0:	dcc00317 	ldw	r19,12(sp)
    60c4:	dc800217 	ldw	r18,8(sp)
    60c8:	dc400117 	ldw	r17,4(sp)
    60cc:	dc000017 	ldw	r16,0(sp)
    60d0:	dec00704 	addi	sp,sp,28
    60d4:	f800283a 	ret
    60d8:	84000284 	addi	r16,r16,10
    60dc:	1827883a 	mov	r19,r3
    60e0:	003fe906 	br	6088 <__alt_data_end+0xfffe6088>

000060e4 <__hi0bits>:
    60e4:	20bfffec 	andhi	r2,r4,65535
    60e8:	1000141e 	bne	r2,zero,613c <__hi0bits+0x58>
    60ec:	2008943a 	slli	r4,r4,16
    60f0:	00800404 	movi	r2,16
    60f4:	20ffc02c 	andhi	r3,r4,65280
    60f8:	1800021e 	bne	r3,zero,6104 <__hi0bits+0x20>
    60fc:	2008923a 	slli	r4,r4,8
    6100:	10800204 	addi	r2,r2,8
    6104:	20fc002c 	andhi	r3,r4,61440
    6108:	1800021e 	bne	r3,zero,6114 <__hi0bits+0x30>
    610c:	2008913a 	slli	r4,r4,4
    6110:	10800104 	addi	r2,r2,4
    6114:	20f0002c 	andhi	r3,r4,49152
    6118:	1800031e 	bne	r3,zero,6128 <__hi0bits+0x44>
    611c:	2109883a 	add	r4,r4,r4
    6120:	10800084 	addi	r2,r2,2
    6124:	2109883a 	add	r4,r4,r4
    6128:	20000316 	blt	r4,zero,6138 <__hi0bits+0x54>
    612c:	2110002c 	andhi	r4,r4,16384
    6130:	2000041e 	bne	r4,zero,6144 <__hi0bits+0x60>
    6134:	00800804 	movi	r2,32
    6138:	f800283a 	ret
    613c:	0005883a 	mov	r2,zero
    6140:	003fec06 	br	60f4 <__alt_data_end+0xfffe60f4>
    6144:	10800044 	addi	r2,r2,1
    6148:	f800283a 	ret

0000614c <__lo0bits>:
    614c:	20c00017 	ldw	r3,0(r4)
    6150:	188001cc 	andi	r2,r3,7
    6154:	10000826 	beq	r2,zero,6178 <__lo0bits+0x2c>
    6158:	1880004c 	andi	r2,r3,1
    615c:	1000211e 	bne	r2,zero,61e4 <__lo0bits+0x98>
    6160:	1880008c 	andi	r2,r3,2
    6164:	1000211e 	bne	r2,zero,61ec <__lo0bits+0xa0>
    6168:	1806d0ba 	srli	r3,r3,2
    616c:	00800084 	movi	r2,2
    6170:	20c00015 	stw	r3,0(r4)
    6174:	f800283a 	ret
    6178:	18bfffcc 	andi	r2,r3,65535
    617c:	10001326 	beq	r2,zero,61cc <__lo0bits+0x80>
    6180:	0005883a 	mov	r2,zero
    6184:	19403fcc 	andi	r5,r3,255
    6188:	2800021e 	bne	r5,zero,6194 <__lo0bits+0x48>
    618c:	1806d23a 	srli	r3,r3,8
    6190:	10800204 	addi	r2,r2,8
    6194:	194003cc 	andi	r5,r3,15
    6198:	2800021e 	bne	r5,zero,61a4 <__lo0bits+0x58>
    619c:	1806d13a 	srli	r3,r3,4
    61a0:	10800104 	addi	r2,r2,4
    61a4:	194000cc 	andi	r5,r3,3
    61a8:	2800021e 	bne	r5,zero,61b4 <__lo0bits+0x68>
    61ac:	1806d0ba 	srli	r3,r3,2
    61b0:	10800084 	addi	r2,r2,2
    61b4:	1940004c 	andi	r5,r3,1
    61b8:	2800081e 	bne	r5,zero,61dc <__lo0bits+0x90>
    61bc:	1806d07a 	srli	r3,r3,1
    61c0:	1800051e 	bne	r3,zero,61d8 <__lo0bits+0x8c>
    61c4:	00800804 	movi	r2,32
    61c8:	f800283a 	ret
    61cc:	1806d43a 	srli	r3,r3,16
    61d0:	00800404 	movi	r2,16
    61d4:	003feb06 	br	6184 <__alt_data_end+0xfffe6184>
    61d8:	10800044 	addi	r2,r2,1
    61dc:	20c00015 	stw	r3,0(r4)
    61e0:	f800283a 	ret
    61e4:	0005883a 	mov	r2,zero
    61e8:	f800283a 	ret
    61ec:	1806d07a 	srli	r3,r3,1
    61f0:	00800044 	movi	r2,1
    61f4:	20c00015 	stw	r3,0(r4)
    61f8:	f800283a 	ret

000061fc <__i2b>:
    61fc:	defffd04 	addi	sp,sp,-12
    6200:	dc000015 	stw	r16,0(sp)
    6204:	04000044 	movi	r16,1
    6208:	dc400115 	stw	r17,4(sp)
    620c:	2823883a 	mov	r17,r5
    6210:	800b883a 	mov	r5,r16
    6214:	dfc00215 	stw	ra,8(sp)
    6218:	0005df00 	call	5df0 <_Balloc>
    621c:	14400515 	stw	r17,20(r2)
    6220:	14000415 	stw	r16,16(r2)
    6224:	dfc00217 	ldw	ra,8(sp)
    6228:	dc400117 	ldw	r17,4(sp)
    622c:	dc000017 	ldw	r16,0(sp)
    6230:	dec00304 	addi	sp,sp,12
    6234:	f800283a 	ret

00006238 <__multiply>:
    6238:	defffa04 	addi	sp,sp,-24
    623c:	dcc00315 	stw	r19,12(sp)
    6240:	dc800215 	stw	r18,8(sp)
    6244:	34c00417 	ldw	r19,16(r6)
    6248:	2c800417 	ldw	r18,16(r5)
    624c:	dd000415 	stw	r20,16(sp)
    6250:	dc400115 	stw	r17,4(sp)
    6254:	dfc00515 	stw	ra,20(sp)
    6258:	dc000015 	stw	r16,0(sp)
    625c:	2829883a 	mov	r20,r5
    6260:	3023883a 	mov	r17,r6
    6264:	94c0050e 	bge	r18,r19,627c <__multiply+0x44>
    6268:	9007883a 	mov	r3,r18
    626c:	3029883a 	mov	r20,r6
    6270:	9825883a 	mov	r18,r19
    6274:	2823883a 	mov	r17,r5
    6278:	1827883a 	mov	r19,r3
    627c:	a0800217 	ldw	r2,8(r20)
    6280:	94e1883a 	add	r16,r18,r19
    6284:	a1400117 	ldw	r5,4(r20)
    6288:	1400010e 	bge	r2,r16,6290 <__multiply+0x58>
    628c:	29400044 	addi	r5,r5,1
    6290:	0005df00 	call	5df0 <_Balloc>
    6294:	8415883a 	add	r10,r16,r16
    6298:	12c00504 	addi	r11,r2,20
    629c:	5295883a 	add	r10,r10,r10
    62a0:	5a95883a 	add	r10,r11,r10
    62a4:	5807883a 	mov	r3,r11
    62a8:	5a80032e 	bgeu	r11,r10,62b8 <__multiply+0x80>
    62ac:	18000015 	stw	zero,0(r3)
    62b0:	18c00104 	addi	r3,r3,4
    62b4:	1abffd36 	bltu	r3,r10,62ac <__alt_data_end+0xfffe62ac>
    62b8:	9ce7883a 	add	r19,r19,r19
    62bc:	94a5883a 	add	r18,r18,r18
    62c0:	89800504 	addi	r6,r17,20
    62c4:	9ce7883a 	add	r19,r19,r19
    62c8:	a3400504 	addi	r13,r20,20
    62cc:	94a5883a 	add	r18,r18,r18
    62d0:	34d9883a 	add	r12,r6,r19
    62d4:	6c93883a 	add	r9,r13,r18
    62d8:	3300422e 	bgeu	r6,r12,63e4 <__multiply+0x1ac>
    62dc:	37c00017 	ldw	ra,0(r6)
    62e0:	fbffffcc 	andi	r15,ra,65535
    62e4:	78001b26 	beq	r15,zero,6354 <__multiply+0x11c>
    62e8:	5811883a 	mov	r8,r11
    62ec:	681d883a 	mov	r14,r13
    62f0:	000f883a 	mov	r7,zero
    62f4:	71000017 	ldw	r4,0(r14)
    62f8:	40c00017 	ldw	r3,0(r8)
    62fc:	73800104 	addi	r14,r14,4
    6300:	217fffcc 	andi	r5,r4,65535
    6304:	2bcb383a 	mul	r5,r5,r15
    6308:	2008d43a 	srli	r4,r4,16
    630c:	1c7fffcc 	andi	r17,r3,65535
    6310:	2c4b883a 	add	r5,r5,r17
    6314:	29cb883a 	add	r5,r5,r7
    6318:	23c9383a 	mul	r4,r4,r15
    631c:	1806d43a 	srli	r3,r3,16
    6320:	280ed43a 	srli	r7,r5,16
    6324:	297fffcc 	andi	r5,r5,65535
    6328:	20c7883a 	add	r3,r4,r3
    632c:	19c7883a 	add	r3,r3,r7
    6330:	1808943a 	slli	r4,r3,16
    6334:	4023883a 	mov	r17,r8
    6338:	180ed43a 	srli	r7,r3,16
    633c:	214ab03a 	or	r5,r4,r5
    6340:	41400015 	stw	r5,0(r8)
    6344:	42000104 	addi	r8,r8,4
    6348:	727fea36 	bltu	r14,r9,62f4 <__alt_data_end+0xfffe62f4>
    634c:	89c00115 	stw	r7,4(r17)
    6350:	37c00017 	ldw	ra,0(r6)
    6354:	f83ed43a 	srli	ra,ra,16
    6358:	f8001f26 	beq	ra,zero,63d8 <__multiply+0x1a0>
    635c:	58c00017 	ldw	r3,0(r11)
    6360:	681d883a 	mov	r14,r13
    6364:	581f883a 	mov	r15,r11
    6368:	1811883a 	mov	r8,r3
    636c:	5825883a 	mov	r18,r11
    6370:	000f883a 	mov	r7,zero
    6374:	00000106 	br	637c <__multiply+0x144>
    6378:	8825883a 	mov	r18,r17
    637c:	7140000b 	ldhu	r5,0(r14)
    6380:	4010d43a 	srli	r8,r8,16
    6384:	193fffcc 	andi	r4,r3,65535
    6388:	2fcb383a 	mul	r5,r5,ra
    638c:	7bc00104 	addi	r15,r15,4
    6390:	73800104 	addi	r14,r14,4
    6394:	2a0b883a 	add	r5,r5,r8
    6398:	29cb883a 	add	r5,r5,r7
    639c:	2806943a 	slli	r3,r5,16
    63a0:	94400104 	addi	r17,r18,4
    63a4:	280ad43a 	srli	r5,r5,16
    63a8:	1908b03a 	or	r4,r3,r4
    63ac:	793fff15 	stw	r4,-4(r15)
    63b0:	70ffff17 	ldw	r3,-4(r14)
    63b4:	8a000017 	ldw	r8,0(r17)
    63b8:	1806d43a 	srli	r3,r3,16
    63bc:	413fffcc 	andi	r4,r8,65535
    63c0:	1fc7383a 	mul	r3,r3,ra
    63c4:	1907883a 	add	r3,r3,r4
    63c8:	1947883a 	add	r3,r3,r5
    63cc:	180ed43a 	srli	r7,r3,16
    63d0:	727fe936 	bltu	r14,r9,6378 <__alt_data_end+0xfffe6378>
    63d4:	90c00115 	stw	r3,4(r18)
    63d8:	31800104 	addi	r6,r6,4
    63dc:	5ac00104 	addi	r11,r11,4
    63e0:	333fbe36 	bltu	r6,r12,62dc <__alt_data_end+0xfffe62dc>
    63e4:	0400090e 	bge	zero,r16,640c <__multiply+0x1d4>
    63e8:	50ffff17 	ldw	r3,-4(r10)
    63ec:	52bfff04 	addi	r10,r10,-4
    63f0:	18000326 	beq	r3,zero,6400 <__multiply+0x1c8>
    63f4:	00000506 	br	640c <__multiply+0x1d4>
    63f8:	50c00017 	ldw	r3,0(r10)
    63fc:	1800031e 	bne	r3,zero,640c <__multiply+0x1d4>
    6400:	843fffc4 	addi	r16,r16,-1
    6404:	52bfff04 	addi	r10,r10,-4
    6408:	803ffb1e 	bne	r16,zero,63f8 <__alt_data_end+0xfffe63f8>
    640c:	14000415 	stw	r16,16(r2)
    6410:	dfc00517 	ldw	ra,20(sp)
    6414:	dd000417 	ldw	r20,16(sp)
    6418:	dcc00317 	ldw	r19,12(sp)
    641c:	dc800217 	ldw	r18,8(sp)
    6420:	dc400117 	ldw	r17,4(sp)
    6424:	dc000017 	ldw	r16,0(sp)
    6428:	dec00604 	addi	sp,sp,24
    642c:	f800283a 	ret

00006430 <__pow5mult>:
    6430:	defffa04 	addi	sp,sp,-24
    6434:	dcc00315 	stw	r19,12(sp)
    6438:	dc000015 	stw	r16,0(sp)
    643c:	dfc00515 	stw	ra,20(sp)
    6440:	dd000415 	stw	r20,16(sp)
    6444:	dc800215 	stw	r18,8(sp)
    6448:	dc400115 	stw	r17,4(sp)
    644c:	308000cc 	andi	r2,r6,3
    6450:	3021883a 	mov	r16,r6
    6454:	2027883a 	mov	r19,r4
    6458:	10002f1e 	bne	r2,zero,6518 <__pow5mult+0xe8>
    645c:	2825883a 	mov	r18,r5
    6460:	8021d0ba 	srai	r16,r16,2
    6464:	80001a26 	beq	r16,zero,64d0 <__pow5mult+0xa0>
    6468:	9c401217 	ldw	r17,72(r19)
    646c:	8800061e 	bne	r17,zero,6488 <__pow5mult+0x58>
    6470:	00003406 	br	6544 <__pow5mult+0x114>
    6474:	8021d07a 	srai	r16,r16,1
    6478:	80001526 	beq	r16,zero,64d0 <__pow5mult+0xa0>
    647c:	88800017 	ldw	r2,0(r17)
    6480:	10001c26 	beq	r2,zero,64f4 <__pow5mult+0xc4>
    6484:	1023883a 	mov	r17,r2
    6488:	8080004c 	andi	r2,r16,1
    648c:	103ff926 	beq	r2,zero,6474 <__alt_data_end+0xfffe6474>
    6490:	880d883a 	mov	r6,r17
    6494:	900b883a 	mov	r5,r18
    6498:	9809883a 	mov	r4,r19
    649c:	00062380 	call	6238 <__multiply>
    64a0:	90001b26 	beq	r18,zero,6510 <__pow5mult+0xe0>
    64a4:	91000117 	ldw	r4,4(r18)
    64a8:	98c01317 	ldw	r3,76(r19)
    64ac:	8021d07a 	srai	r16,r16,1
    64b0:	2109883a 	add	r4,r4,r4
    64b4:	2109883a 	add	r4,r4,r4
    64b8:	1907883a 	add	r3,r3,r4
    64bc:	19000017 	ldw	r4,0(r3)
    64c0:	91000015 	stw	r4,0(r18)
    64c4:	1c800015 	stw	r18,0(r3)
    64c8:	1025883a 	mov	r18,r2
    64cc:	803feb1e 	bne	r16,zero,647c <__alt_data_end+0xfffe647c>
    64d0:	9005883a 	mov	r2,r18
    64d4:	dfc00517 	ldw	ra,20(sp)
    64d8:	dd000417 	ldw	r20,16(sp)
    64dc:	dcc00317 	ldw	r19,12(sp)
    64e0:	dc800217 	ldw	r18,8(sp)
    64e4:	dc400117 	ldw	r17,4(sp)
    64e8:	dc000017 	ldw	r16,0(sp)
    64ec:	dec00604 	addi	sp,sp,24
    64f0:	f800283a 	ret
    64f4:	880d883a 	mov	r6,r17
    64f8:	880b883a 	mov	r5,r17
    64fc:	9809883a 	mov	r4,r19
    6500:	00062380 	call	6238 <__multiply>
    6504:	88800015 	stw	r2,0(r17)
    6508:	10000015 	stw	zero,0(r2)
    650c:	003fdd06 	br	6484 <__alt_data_end+0xfffe6484>
    6510:	1025883a 	mov	r18,r2
    6514:	003fd706 	br	6474 <__alt_data_end+0xfffe6474>
    6518:	10bfffc4 	addi	r2,r2,-1
    651c:	1085883a 	add	r2,r2,r2
    6520:	00c00074 	movhi	r3,1
    6524:	18fd5904 	addi	r3,r3,-2716
    6528:	1085883a 	add	r2,r2,r2
    652c:	1885883a 	add	r2,r3,r2
    6530:	11800017 	ldw	r6,0(r2)
    6534:	000f883a 	mov	r7,zero
    6538:	0005ec00 	call	5ec0 <__multadd>
    653c:	1025883a 	mov	r18,r2
    6540:	003fc706 	br	6460 <__alt_data_end+0xfffe6460>
    6544:	05000044 	movi	r20,1
    6548:	a00b883a 	mov	r5,r20
    654c:	9809883a 	mov	r4,r19
    6550:	0005df00 	call	5df0 <_Balloc>
    6554:	1023883a 	mov	r17,r2
    6558:	00809c44 	movi	r2,625
    655c:	88800515 	stw	r2,20(r17)
    6560:	8d000415 	stw	r20,16(r17)
    6564:	9c401215 	stw	r17,72(r19)
    6568:	88000015 	stw	zero,0(r17)
    656c:	003fc606 	br	6488 <__alt_data_end+0xfffe6488>

00006570 <__lshift>:
    6570:	defff904 	addi	sp,sp,-28
    6574:	dd400515 	stw	r21,20(sp)
    6578:	dcc00315 	stw	r19,12(sp)
    657c:	302bd17a 	srai	r21,r6,5
    6580:	2cc00417 	ldw	r19,16(r5)
    6584:	28800217 	ldw	r2,8(r5)
    6588:	dd000415 	stw	r20,16(sp)
    658c:	ace7883a 	add	r19,r21,r19
    6590:	dc800215 	stw	r18,8(sp)
    6594:	dc400115 	stw	r17,4(sp)
    6598:	dc000015 	stw	r16,0(sp)
    659c:	dfc00615 	stw	ra,24(sp)
    65a0:	9c000044 	addi	r16,r19,1
    65a4:	2823883a 	mov	r17,r5
    65a8:	3029883a 	mov	r20,r6
    65ac:	2025883a 	mov	r18,r4
    65b0:	29400117 	ldw	r5,4(r5)
    65b4:	1400030e 	bge	r2,r16,65c4 <__lshift+0x54>
    65b8:	1085883a 	add	r2,r2,r2
    65bc:	29400044 	addi	r5,r5,1
    65c0:	143ffd16 	blt	r2,r16,65b8 <__alt_data_end+0xfffe65b8>
    65c4:	9009883a 	mov	r4,r18
    65c8:	0005df00 	call	5df0 <_Balloc>
    65cc:	10c00504 	addi	r3,r2,20
    65d0:	0540070e 	bge	zero,r21,65f0 <__lshift+0x80>
    65d4:	ad6b883a 	add	r21,r21,r21
    65d8:	ad6b883a 	add	r21,r21,r21
    65dc:	1809883a 	mov	r4,r3
    65e0:	1d47883a 	add	r3,r3,r21
    65e4:	20000015 	stw	zero,0(r4)
    65e8:	21000104 	addi	r4,r4,4
    65ec:	193ffd1e 	bne	r3,r4,65e4 <__alt_data_end+0xfffe65e4>
    65f0:	8a000417 	ldw	r8,16(r17)
    65f4:	89000504 	addi	r4,r17,20
    65f8:	a18007cc 	andi	r6,r20,31
    65fc:	4211883a 	add	r8,r8,r8
    6600:	4211883a 	add	r8,r8,r8
    6604:	2211883a 	add	r8,r4,r8
    6608:	30002326 	beq	r6,zero,6698 <__lshift+0x128>
    660c:	02400804 	movi	r9,32
    6610:	4993c83a 	sub	r9,r9,r6
    6614:	000b883a 	mov	r5,zero
    6618:	21c00017 	ldw	r7,0(r4)
    661c:	1815883a 	mov	r10,r3
    6620:	18c00104 	addi	r3,r3,4
    6624:	398e983a 	sll	r7,r7,r6
    6628:	21000104 	addi	r4,r4,4
    662c:	394ab03a 	or	r5,r7,r5
    6630:	197fff15 	stw	r5,-4(r3)
    6634:	217fff17 	ldw	r5,-4(r4)
    6638:	2a4ad83a 	srl	r5,r5,r9
    663c:	223ff636 	bltu	r4,r8,6618 <__alt_data_end+0xfffe6618>
    6640:	51400115 	stw	r5,4(r10)
    6644:	28001a1e 	bne	r5,zero,66b0 <__lshift+0x140>
    6648:	843fffc4 	addi	r16,r16,-1
    664c:	14000415 	stw	r16,16(r2)
    6650:	88000826 	beq	r17,zero,6674 <__lshift+0x104>
    6654:	89000117 	ldw	r4,4(r17)
    6658:	90c01317 	ldw	r3,76(r18)
    665c:	2109883a 	add	r4,r4,r4
    6660:	2109883a 	add	r4,r4,r4
    6664:	1907883a 	add	r3,r3,r4
    6668:	19000017 	ldw	r4,0(r3)
    666c:	89000015 	stw	r4,0(r17)
    6670:	1c400015 	stw	r17,0(r3)
    6674:	dfc00617 	ldw	ra,24(sp)
    6678:	dd400517 	ldw	r21,20(sp)
    667c:	dd000417 	ldw	r20,16(sp)
    6680:	dcc00317 	ldw	r19,12(sp)
    6684:	dc800217 	ldw	r18,8(sp)
    6688:	dc400117 	ldw	r17,4(sp)
    668c:	dc000017 	ldw	r16,0(sp)
    6690:	dec00704 	addi	sp,sp,28
    6694:	f800283a 	ret
    6698:	21400017 	ldw	r5,0(r4)
    669c:	18c00104 	addi	r3,r3,4
    66a0:	21000104 	addi	r4,r4,4
    66a4:	197fff15 	stw	r5,-4(r3)
    66a8:	223ffb36 	bltu	r4,r8,6698 <__alt_data_end+0xfffe6698>
    66ac:	003fe606 	br	6648 <__alt_data_end+0xfffe6648>
    66b0:	9c000084 	addi	r16,r19,2
    66b4:	003fe406 	br	6648 <__alt_data_end+0xfffe6648>

000066b8 <__mcmp>:
    66b8:	20800417 	ldw	r2,16(r4)
    66bc:	28c00417 	ldw	r3,16(r5)
    66c0:	10c5c83a 	sub	r2,r2,r3
    66c4:	1000111e 	bne	r2,zero,670c <__mcmp+0x54>
    66c8:	18c7883a 	add	r3,r3,r3
    66cc:	18c7883a 	add	r3,r3,r3
    66d0:	21000504 	addi	r4,r4,20
    66d4:	29400504 	addi	r5,r5,20
    66d8:	20c5883a 	add	r2,r4,r3
    66dc:	28cb883a 	add	r5,r5,r3
    66e0:	00000106 	br	66e8 <__mcmp+0x30>
    66e4:	20800a2e 	bgeu	r4,r2,6710 <__mcmp+0x58>
    66e8:	10bfff04 	addi	r2,r2,-4
    66ec:	297fff04 	addi	r5,r5,-4
    66f0:	11800017 	ldw	r6,0(r2)
    66f4:	28c00017 	ldw	r3,0(r5)
    66f8:	30fffa26 	beq	r6,r3,66e4 <__alt_data_end+0xfffe66e4>
    66fc:	30c00236 	bltu	r6,r3,6708 <__mcmp+0x50>
    6700:	00800044 	movi	r2,1
    6704:	f800283a 	ret
    6708:	00bfffc4 	movi	r2,-1
    670c:	f800283a 	ret
    6710:	0005883a 	mov	r2,zero
    6714:	f800283a 	ret

00006718 <__mdiff>:
    6718:	28c00417 	ldw	r3,16(r5)
    671c:	30800417 	ldw	r2,16(r6)
    6720:	defffa04 	addi	sp,sp,-24
    6724:	dcc00315 	stw	r19,12(sp)
    6728:	dc800215 	stw	r18,8(sp)
    672c:	dfc00515 	stw	ra,20(sp)
    6730:	dd000415 	stw	r20,16(sp)
    6734:	dc400115 	stw	r17,4(sp)
    6738:	dc000015 	stw	r16,0(sp)
    673c:	1887c83a 	sub	r3,r3,r2
    6740:	2825883a 	mov	r18,r5
    6744:	3027883a 	mov	r19,r6
    6748:	1800141e 	bne	r3,zero,679c <__mdiff+0x84>
    674c:	1085883a 	add	r2,r2,r2
    6750:	1085883a 	add	r2,r2,r2
    6754:	2a000504 	addi	r8,r5,20
    6758:	34000504 	addi	r16,r6,20
    675c:	4087883a 	add	r3,r8,r2
    6760:	8085883a 	add	r2,r16,r2
    6764:	00000106 	br	676c <__mdiff+0x54>
    6768:	40c0592e 	bgeu	r8,r3,68d0 <__mdiff+0x1b8>
    676c:	18ffff04 	addi	r3,r3,-4
    6770:	10bfff04 	addi	r2,r2,-4
    6774:	19c00017 	ldw	r7,0(r3)
    6778:	11400017 	ldw	r5,0(r2)
    677c:	397ffa26 	beq	r7,r5,6768 <__alt_data_end+0xfffe6768>
    6780:	3940592e 	bgeu	r7,r5,68e8 <__mdiff+0x1d0>
    6784:	9005883a 	mov	r2,r18
    6788:	4023883a 	mov	r17,r8
    678c:	9825883a 	mov	r18,r19
    6790:	05000044 	movi	r20,1
    6794:	1027883a 	mov	r19,r2
    6798:	00000406 	br	67ac <__mdiff+0x94>
    679c:	18005616 	blt	r3,zero,68f8 <__mdiff+0x1e0>
    67a0:	34400504 	addi	r17,r6,20
    67a4:	2c000504 	addi	r16,r5,20
    67a8:	0029883a 	mov	r20,zero
    67ac:	91400117 	ldw	r5,4(r18)
    67b0:	0005df00 	call	5df0 <_Balloc>
    67b4:	92400417 	ldw	r9,16(r18)
    67b8:	9b000417 	ldw	r12,16(r19)
    67bc:	12c00504 	addi	r11,r2,20
    67c0:	4a51883a 	add	r8,r9,r9
    67c4:	6319883a 	add	r12,r12,r12
    67c8:	4211883a 	add	r8,r8,r8
    67cc:	6319883a 	add	r12,r12,r12
    67d0:	15000315 	stw	r20,12(r2)
    67d4:	8211883a 	add	r8,r16,r8
    67d8:	8b19883a 	add	r12,r17,r12
    67dc:	0007883a 	mov	r3,zero
    67e0:	81400017 	ldw	r5,0(r16)
    67e4:	89c00017 	ldw	r7,0(r17)
    67e8:	59800104 	addi	r6,r11,4
    67ec:	293fffcc 	andi	r4,r5,65535
    67f0:	20c7883a 	add	r3,r4,r3
    67f4:	393fffcc 	andi	r4,r7,65535
    67f8:	1909c83a 	sub	r4,r3,r4
    67fc:	280ad43a 	srli	r5,r5,16
    6800:	380ed43a 	srli	r7,r7,16
    6804:	2007d43a 	srai	r3,r4,16
    6808:	213fffcc 	andi	r4,r4,65535
    680c:	29cbc83a 	sub	r5,r5,r7
    6810:	28c7883a 	add	r3,r5,r3
    6814:	180a943a 	slli	r5,r3,16
    6818:	8c400104 	addi	r17,r17,4
    681c:	84000104 	addi	r16,r16,4
    6820:	2908b03a 	or	r4,r5,r4
    6824:	59000015 	stw	r4,0(r11)
    6828:	1807d43a 	srai	r3,r3,16
    682c:	3015883a 	mov	r10,r6
    6830:	3017883a 	mov	r11,r6
    6834:	8b3fea36 	bltu	r17,r12,67e0 <__alt_data_end+0xfffe67e0>
    6838:	8200162e 	bgeu	r16,r8,6894 <__mdiff+0x17c>
    683c:	8017883a 	mov	r11,r16
    6840:	59400017 	ldw	r5,0(r11)
    6844:	31800104 	addi	r6,r6,4
    6848:	5ac00104 	addi	r11,r11,4
    684c:	293fffcc 	andi	r4,r5,65535
    6850:	20c7883a 	add	r3,r4,r3
    6854:	280ed43a 	srli	r7,r5,16
    6858:	180bd43a 	srai	r5,r3,16
    685c:	193fffcc 	andi	r4,r3,65535
    6860:	3947883a 	add	r3,r7,r5
    6864:	180a943a 	slli	r5,r3,16
    6868:	1807d43a 	srai	r3,r3,16
    686c:	2908b03a 	or	r4,r5,r4
    6870:	313fff15 	stw	r4,-4(r6)
    6874:	5a3ff236 	bltu	r11,r8,6840 <__alt_data_end+0xfffe6840>
    6878:	0406303a 	nor	r3,zero,r16
    687c:	1a07883a 	add	r3,r3,r8
    6880:	1806d0ba 	srli	r3,r3,2
    6884:	18c00044 	addi	r3,r3,1
    6888:	18c7883a 	add	r3,r3,r3
    688c:	18c7883a 	add	r3,r3,r3
    6890:	50d5883a 	add	r10,r10,r3
    6894:	50ffff04 	addi	r3,r10,-4
    6898:	2000041e 	bne	r4,zero,68ac <__mdiff+0x194>
    689c:	18ffff04 	addi	r3,r3,-4
    68a0:	19000017 	ldw	r4,0(r3)
    68a4:	4a7fffc4 	addi	r9,r9,-1
    68a8:	203ffc26 	beq	r4,zero,689c <__alt_data_end+0xfffe689c>
    68ac:	12400415 	stw	r9,16(r2)
    68b0:	dfc00517 	ldw	ra,20(sp)
    68b4:	dd000417 	ldw	r20,16(sp)
    68b8:	dcc00317 	ldw	r19,12(sp)
    68bc:	dc800217 	ldw	r18,8(sp)
    68c0:	dc400117 	ldw	r17,4(sp)
    68c4:	dc000017 	ldw	r16,0(sp)
    68c8:	dec00604 	addi	sp,sp,24
    68cc:	f800283a 	ret
    68d0:	000b883a 	mov	r5,zero
    68d4:	0005df00 	call	5df0 <_Balloc>
    68d8:	00c00044 	movi	r3,1
    68dc:	10c00415 	stw	r3,16(r2)
    68e0:	10000515 	stw	zero,20(r2)
    68e4:	003ff206 	br	68b0 <__alt_data_end+0xfffe68b0>
    68e8:	8023883a 	mov	r17,r16
    68ec:	0029883a 	mov	r20,zero
    68f0:	4021883a 	mov	r16,r8
    68f4:	003fad06 	br	67ac <__alt_data_end+0xfffe67ac>
    68f8:	9005883a 	mov	r2,r18
    68fc:	94400504 	addi	r17,r18,20
    6900:	9c000504 	addi	r16,r19,20
    6904:	9825883a 	mov	r18,r19
    6908:	05000044 	movi	r20,1
    690c:	1027883a 	mov	r19,r2
    6910:	003fa606 	br	67ac <__alt_data_end+0xfffe67ac>

00006914 <__ulp>:
    6914:	295ffc2c 	andhi	r5,r5,32752
    6918:	00bf3034 	movhi	r2,64704
    691c:	2887883a 	add	r3,r5,r2
    6920:	00c0020e 	bge	zero,r3,692c <__ulp+0x18>
    6924:	0005883a 	mov	r2,zero
    6928:	f800283a 	ret
    692c:	00c7c83a 	sub	r3,zero,r3
    6930:	1807d53a 	srai	r3,r3,20
    6934:	008004c4 	movi	r2,19
    6938:	10c00b0e 	bge	r2,r3,6968 <__ulp+0x54>
    693c:	18bffb04 	addi	r2,r3,-20
    6940:	01000784 	movi	r4,30
    6944:	0007883a 	mov	r3,zero
    6948:	20800516 	blt	r4,r2,6960 <__ulp+0x4c>
    694c:	010007c4 	movi	r4,31
    6950:	2089c83a 	sub	r4,r4,r2
    6954:	00800044 	movi	r2,1
    6958:	1104983a 	sll	r2,r2,r4
    695c:	f800283a 	ret
    6960:	00800044 	movi	r2,1
    6964:	f800283a 	ret
    6968:	01400234 	movhi	r5,8
    696c:	28c7d83a 	sra	r3,r5,r3
    6970:	0005883a 	mov	r2,zero
    6974:	f800283a 	ret

00006978 <__b2d>:
    6978:	defffa04 	addi	sp,sp,-24
    697c:	dc000015 	stw	r16,0(sp)
    6980:	24000417 	ldw	r16,16(r4)
    6984:	dc400115 	stw	r17,4(sp)
    6988:	24400504 	addi	r17,r4,20
    698c:	8421883a 	add	r16,r16,r16
    6990:	8421883a 	add	r16,r16,r16
    6994:	8c21883a 	add	r16,r17,r16
    6998:	dc800215 	stw	r18,8(sp)
    699c:	84bfff17 	ldw	r18,-4(r16)
    69a0:	dd000415 	stw	r20,16(sp)
    69a4:	dcc00315 	stw	r19,12(sp)
    69a8:	9009883a 	mov	r4,r18
    69ac:	2829883a 	mov	r20,r5
    69b0:	dfc00515 	stw	ra,20(sp)
    69b4:	00060e40 	call	60e4 <__hi0bits>
    69b8:	00c00804 	movi	r3,32
    69bc:	1889c83a 	sub	r4,r3,r2
    69c0:	a1000015 	stw	r4,0(r20)
    69c4:	01000284 	movi	r4,10
    69c8:	84ffff04 	addi	r19,r16,-4
    69cc:	20801216 	blt	r4,r2,6a18 <__b2d+0xa0>
    69d0:	018002c4 	movi	r6,11
    69d4:	308dc83a 	sub	r6,r6,r2
    69d8:	9186d83a 	srl	r3,r18,r6
    69dc:	18cffc34 	orhi	r3,r3,16368
    69e0:	8cc0212e 	bgeu	r17,r19,6a68 <__b2d+0xf0>
    69e4:	813ffe17 	ldw	r4,-8(r16)
    69e8:	218cd83a 	srl	r6,r4,r6
    69ec:	10800544 	addi	r2,r2,21
    69f0:	9084983a 	sll	r2,r18,r2
    69f4:	1184b03a 	or	r2,r2,r6
    69f8:	dfc00517 	ldw	ra,20(sp)
    69fc:	dd000417 	ldw	r20,16(sp)
    6a00:	dcc00317 	ldw	r19,12(sp)
    6a04:	dc800217 	ldw	r18,8(sp)
    6a08:	dc400117 	ldw	r17,4(sp)
    6a0c:	dc000017 	ldw	r16,0(sp)
    6a10:	dec00604 	addi	sp,sp,24
    6a14:	f800283a 	ret
    6a18:	8cc00f2e 	bgeu	r17,r19,6a58 <__b2d+0xe0>
    6a1c:	117ffd44 	addi	r5,r2,-11
    6a20:	80bffe17 	ldw	r2,-8(r16)
    6a24:	28000e26 	beq	r5,zero,6a60 <__b2d+0xe8>
    6a28:	1949c83a 	sub	r4,r3,r5
    6a2c:	9164983a 	sll	r18,r18,r5
    6a30:	1106d83a 	srl	r3,r2,r4
    6a34:	81bffe04 	addi	r6,r16,-8
    6a38:	948ffc34 	orhi	r18,r18,16368
    6a3c:	90c6b03a 	or	r3,r18,r3
    6a40:	89800e2e 	bgeu	r17,r6,6a7c <__b2d+0x104>
    6a44:	81bffd17 	ldw	r6,-12(r16)
    6a48:	1144983a 	sll	r2,r2,r5
    6a4c:	310ad83a 	srl	r5,r6,r4
    6a50:	2884b03a 	or	r2,r5,r2
    6a54:	003fe806 	br	69f8 <__alt_data_end+0xfffe69f8>
    6a58:	10bffd44 	addi	r2,r2,-11
    6a5c:	1000041e 	bne	r2,zero,6a70 <__b2d+0xf8>
    6a60:	90cffc34 	orhi	r3,r18,16368
    6a64:	003fe406 	br	69f8 <__alt_data_end+0xfffe69f8>
    6a68:	000d883a 	mov	r6,zero
    6a6c:	003fdf06 	br	69ec <__alt_data_end+0xfffe69ec>
    6a70:	90a4983a 	sll	r18,r18,r2
    6a74:	0005883a 	mov	r2,zero
    6a78:	003ff906 	br	6a60 <__alt_data_end+0xfffe6a60>
    6a7c:	1144983a 	sll	r2,r2,r5
    6a80:	003fdd06 	br	69f8 <__alt_data_end+0xfffe69f8>

00006a84 <__d2b>:
    6a84:	defff804 	addi	sp,sp,-32
    6a88:	dc000215 	stw	r16,8(sp)
    6a8c:	3021883a 	mov	r16,r6
    6a90:	dc400315 	stw	r17,12(sp)
    6a94:	8022907a 	slli	r17,r16,1
    6a98:	dd000615 	stw	r20,24(sp)
    6a9c:	2829883a 	mov	r20,r5
    6aa0:	01400044 	movi	r5,1
    6aa4:	dcc00515 	stw	r19,20(sp)
    6aa8:	dc800415 	stw	r18,16(sp)
    6aac:	dfc00715 	stw	ra,28(sp)
    6ab0:	3825883a 	mov	r18,r7
    6ab4:	8822d57a 	srli	r17,r17,21
    6ab8:	0005df00 	call	5df0 <_Balloc>
    6abc:	1027883a 	mov	r19,r2
    6ac0:	00800434 	movhi	r2,16
    6ac4:	10bfffc4 	addi	r2,r2,-1
    6ac8:	808c703a 	and	r6,r16,r2
    6acc:	88000126 	beq	r17,zero,6ad4 <__d2b+0x50>
    6ad0:	31800434 	orhi	r6,r6,16
    6ad4:	d9800015 	stw	r6,0(sp)
    6ad8:	a0002426 	beq	r20,zero,6b6c <__d2b+0xe8>
    6adc:	d9000104 	addi	r4,sp,4
    6ae0:	dd000115 	stw	r20,4(sp)
    6ae4:	000614c0 	call	614c <__lo0bits>
    6ae8:	d8c00017 	ldw	r3,0(sp)
    6aec:	10002f1e 	bne	r2,zero,6bac <__d2b+0x128>
    6af0:	d9000117 	ldw	r4,4(sp)
    6af4:	99000515 	stw	r4,20(r19)
    6af8:	1821003a 	cmpeq	r16,r3,zero
    6afc:	01000084 	movi	r4,2
    6b00:	2421c83a 	sub	r16,r4,r16
    6b04:	98c00615 	stw	r3,24(r19)
    6b08:	9c000415 	stw	r16,16(r19)
    6b0c:	88001f1e 	bne	r17,zero,6b8c <__d2b+0x108>
    6b10:	10bef384 	addi	r2,r2,-1074
    6b14:	90800015 	stw	r2,0(r18)
    6b18:	00900034 	movhi	r2,16384
    6b1c:	10bfffc4 	addi	r2,r2,-1
    6b20:	8085883a 	add	r2,r16,r2
    6b24:	1085883a 	add	r2,r2,r2
    6b28:	1085883a 	add	r2,r2,r2
    6b2c:	9885883a 	add	r2,r19,r2
    6b30:	11000517 	ldw	r4,20(r2)
    6b34:	8020917a 	slli	r16,r16,5
    6b38:	00060e40 	call	60e4 <__hi0bits>
    6b3c:	d8c00817 	ldw	r3,32(sp)
    6b40:	8085c83a 	sub	r2,r16,r2
    6b44:	18800015 	stw	r2,0(r3)
    6b48:	9805883a 	mov	r2,r19
    6b4c:	dfc00717 	ldw	ra,28(sp)
    6b50:	dd000617 	ldw	r20,24(sp)
    6b54:	dcc00517 	ldw	r19,20(sp)
    6b58:	dc800417 	ldw	r18,16(sp)
    6b5c:	dc400317 	ldw	r17,12(sp)
    6b60:	dc000217 	ldw	r16,8(sp)
    6b64:	dec00804 	addi	sp,sp,32
    6b68:	f800283a 	ret
    6b6c:	d809883a 	mov	r4,sp
    6b70:	000614c0 	call	614c <__lo0bits>
    6b74:	d8c00017 	ldw	r3,0(sp)
    6b78:	04000044 	movi	r16,1
    6b7c:	9c000415 	stw	r16,16(r19)
    6b80:	98c00515 	stw	r3,20(r19)
    6b84:	10800804 	addi	r2,r2,32
    6b88:	883fe126 	beq	r17,zero,6b10 <__alt_data_end+0xfffe6b10>
    6b8c:	00c00d44 	movi	r3,53
    6b90:	8c7ef344 	addi	r17,r17,-1075
    6b94:	88a3883a 	add	r17,r17,r2
    6b98:	1885c83a 	sub	r2,r3,r2
    6b9c:	d8c00817 	ldw	r3,32(sp)
    6ba0:	94400015 	stw	r17,0(r18)
    6ba4:	18800015 	stw	r2,0(r3)
    6ba8:	003fe706 	br	6b48 <__alt_data_end+0xfffe6b48>
    6bac:	01000804 	movi	r4,32
    6bb0:	2089c83a 	sub	r4,r4,r2
    6bb4:	1908983a 	sll	r4,r3,r4
    6bb8:	d9400117 	ldw	r5,4(sp)
    6bbc:	1886d83a 	srl	r3,r3,r2
    6bc0:	2148b03a 	or	r4,r4,r5
    6bc4:	99000515 	stw	r4,20(r19)
    6bc8:	d8c00015 	stw	r3,0(sp)
    6bcc:	003fca06 	br	6af8 <__alt_data_end+0xfffe6af8>

00006bd0 <__ratio>:
    6bd0:	defff904 	addi	sp,sp,-28
    6bd4:	dc400315 	stw	r17,12(sp)
    6bd8:	2823883a 	mov	r17,r5
    6bdc:	d9400104 	addi	r5,sp,4
    6be0:	dfc00615 	stw	ra,24(sp)
    6be4:	dcc00515 	stw	r19,20(sp)
    6be8:	dc800415 	stw	r18,16(sp)
    6bec:	2027883a 	mov	r19,r4
    6bf0:	dc000215 	stw	r16,8(sp)
    6bf4:	00069780 	call	6978 <__b2d>
    6bf8:	d80b883a 	mov	r5,sp
    6bfc:	8809883a 	mov	r4,r17
    6c00:	1025883a 	mov	r18,r2
    6c04:	1821883a 	mov	r16,r3
    6c08:	00069780 	call	6978 <__b2d>
    6c0c:	8a000417 	ldw	r8,16(r17)
    6c10:	99000417 	ldw	r4,16(r19)
    6c14:	d9400117 	ldw	r5,4(sp)
    6c18:	2209c83a 	sub	r4,r4,r8
    6c1c:	2010917a 	slli	r8,r4,5
    6c20:	d9000017 	ldw	r4,0(sp)
    6c24:	2909c83a 	sub	r4,r5,r4
    6c28:	4109883a 	add	r4,r8,r4
    6c2c:	01000e0e 	bge	zero,r4,6c68 <__ratio+0x98>
    6c30:	2008953a 	slli	r4,r4,20
    6c34:	2421883a 	add	r16,r4,r16
    6c38:	100d883a 	mov	r6,r2
    6c3c:	180f883a 	mov	r7,r3
    6c40:	9009883a 	mov	r4,r18
    6c44:	800b883a 	mov	r5,r16
    6c48:	000afb80 	call	afb8 <__divdf3>
    6c4c:	dfc00617 	ldw	ra,24(sp)
    6c50:	dcc00517 	ldw	r19,20(sp)
    6c54:	dc800417 	ldw	r18,16(sp)
    6c58:	dc400317 	ldw	r17,12(sp)
    6c5c:	dc000217 	ldw	r16,8(sp)
    6c60:	dec00704 	addi	sp,sp,28
    6c64:	f800283a 	ret
    6c68:	2008953a 	slli	r4,r4,20
    6c6c:	1907c83a 	sub	r3,r3,r4
    6c70:	003ff106 	br	6c38 <__alt_data_end+0xfffe6c38>

00006c74 <_mprec_log10>:
    6c74:	defffe04 	addi	sp,sp,-8
    6c78:	dc000015 	stw	r16,0(sp)
    6c7c:	dfc00115 	stw	ra,4(sp)
    6c80:	008005c4 	movi	r2,23
    6c84:	2021883a 	mov	r16,r4
    6c88:	11000d0e 	bge	r2,r4,6cc0 <_mprec_log10+0x4c>
    6c8c:	0005883a 	mov	r2,zero
    6c90:	00cffc34 	movhi	r3,16368
    6c94:	843fffc4 	addi	r16,r16,-1
    6c98:	000d883a 	mov	r6,zero
    6c9c:	01d00934 	movhi	r7,16420
    6ca0:	1009883a 	mov	r4,r2
    6ca4:	180b883a 	mov	r5,r3
    6ca8:	000baf80 	call	baf8 <__muldf3>
    6cac:	803ff91e 	bne	r16,zero,6c94 <__alt_data_end+0xfffe6c94>
    6cb0:	dfc00117 	ldw	ra,4(sp)
    6cb4:	dc000017 	ldw	r16,0(sp)
    6cb8:	dec00204 	addi	sp,sp,8
    6cbc:	f800283a 	ret
    6cc0:	202090fa 	slli	r16,r4,3
    6cc4:	00800074 	movhi	r2,1
    6cc8:	10bd7004 	addi	r2,r2,-2624
    6ccc:	1421883a 	add	r16,r2,r16
    6cd0:	80800017 	ldw	r2,0(r16)
    6cd4:	80c00117 	ldw	r3,4(r16)
    6cd8:	dfc00117 	ldw	ra,4(sp)
    6cdc:	dc000017 	ldw	r16,0(sp)
    6ce0:	dec00204 	addi	sp,sp,8
    6ce4:	f800283a 	ret

00006ce8 <__copybits>:
    6ce8:	297fffc4 	addi	r5,r5,-1
    6cec:	280fd17a 	srai	r7,r5,5
    6cf0:	30c00417 	ldw	r3,16(r6)
    6cf4:	30800504 	addi	r2,r6,20
    6cf8:	39c00044 	addi	r7,r7,1
    6cfc:	18c7883a 	add	r3,r3,r3
    6d00:	39cf883a 	add	r7,r7,r7
    6d04:	18c7883a 	add	r3,r3,r3
    6d08:	39cf883a 	add	r7,r7,r7
    6d0c:	10c7883a 	add	r3,r2,r3
    6d10:	21cf883a 	add	r7,r4,r7
    6d14:	10c00d2e 	bgeu	r2,r3,6d4c <__copybits+0x64>
    6d18:	200b883a 	mov	r5,r4
    6d1c:	12000017 	ldw	r8,0(r2)
    6d20:	29400104 	addi	r5,r5,4
    6d24:	10800104 	addi	r2,r2,4
    6d28:	2a3fff15 	stw	r8,-4(r5)
    6d2c:	10fffb36 	bltu	r2,r3,6d1c <__alt_data_end+0xfffe6d1c>
    6d30:	1985c83a 	sub	r2,r3,r6
    6d34:	10bffac4 	addi	r2,r2,-21
    6d38:	1004d0ba 	srli	r2,r2,2
    6d3c:	10800044 	addi	r2,r2,1
    6d40:	1085883a 	add	r2,r2,r2
    6d44:	1085883a 	add	r2,r2,r2
    6d48:	2089883a 	add	r4,r4,r2
    6d4c:	21c0032e 	bgeu	r4,r7,6d5c <__copybits+0x74>
    6d50:	20000015 	stw	zero,0(r4)
    6d54:	21000104 	addi	r4,r4,4
    6d58:	21fffd36 	bltu	r4,r7,6d50 <__alt_data_end+0xfffe6d50>
    6d5c:	f800283a 	ret

00006d60 <__any_on>:
    6d60:	20c00417 	ldw	r3,16(r4)
    6d64:	2805d17a 	srai	r2,r5,5
    6d68:	21000504 	addi	r4,r4,20
    6d6c:	18800d0e 	bge	r3,r2,6da4 <__any_on+0x44>
    6d70:	18c7883a 	add	r3,r3,r3
    6d74:	18c7883a 	add	r3,r3,r3
    6d78:	20c7883a 	add	r3,r4,r3
    6d7c:	20c0192e 	bgeu	r4,r3,6de4 <__any_on+0x84>
    6d80:	18bfff17 	ldw	r2,-4(r3)
    6d84:	18ffff04 	addi	r3,r3,-4
    6d88:	1000041e 	bne	r2,zero,6d9c <__any_on+0x3c>
    6d8c:	20c0142e 	bgeu	r4,r3,6de0 <__any_on+0x80>
    6d90:	18ffff04 	addi	r3,r3,-4
    6d94:	19400017 	ldw	r5,0(r3)
    6d98:	283ffc26 	beq	r5,zero,6d8c <__alt_data_end+0xfffe6d8c>
    6d9c:	00800044 	movi	r2,1
    6da0:	f800283a 	ret
    6da4:	10c00a0e 	bge	r2,r3,6dd0 <__any_on+0x70>
    6da8:	1085883a 	add	r2,r2,r2
    6dac:	1085883a 	add	r2,r2,r2
    6db0:	294007cc 	andi	r5,r5,31
    6db4:	2087883a 	add	r3,r4,r2
    6db8:	283ff026 	beq	r5,zero,6d7c <__alt_data_end+0xfffe6d7c>
    6dbc:	19800017 	ldw	r6,0(r3)
    6dc0:	3144d83a 	srl	r2,r6,r5
    6dc4:	114a983a 	sll	r5,r2,r5
    6dc8:	317ff41e 	bne	r6,r5,6d9c <__alt_data_end+0xfffe6d9c>
    6dcc:	003feb06 	br	6d7c <__alt_data_end+0xfffe6d7c>
    6dd0:	1085883a 	add	r2,r2,r2
    6dd4:	1085883a 	add	r2,r2,r2
    6dd8:	2087883a 	add	r3,r4,r2
    6ddc:	003fe706 	br	6d7c <__alt_data_end+0xfffe6d7c>
    6de0:	f800283a 	ret
    6de4:	0005883a 	mov	r2,zero
    6de8:	f800283a 	ret

00006dec <__fpclassifyd>:
    6dec:	00a00034 	movhi	r2,32768
    6df0:	10bfffc4 	addi	r2,r2,-1
    6df4:	2884703a 	and	r2,r5,r2
    6df8:	10000726 	beq	r2,zero,6e18 <__fpclassifyd+0x2c>
    6dfc:	00fffc34 	movhi	r3,65520
    6e00:	019ff834 	movhi	r6,32736
    6e04:	28c7883a 	add	r3,r5,r3
    6e08:	31bfffc4 	addi	r6,r6,-1
    6e0c:	30c00536 	bltu	r6,r3,6e24 <__fpclassifyd+0x38>
    6e10:	00800104 	movi	r2,4
    6e14:	f800283a 	ret
    6e18:	2000021e 	bne	r4,zero,6e24 <__fpclassifyd+0x38>
    6e1c:	00800084 	movi	r2,2
    6e20:	f800283a 	ret
    6e24:	00dffc34 	movhi	r3,32752
    6e28:	019ff834 	movhi	r6,32736
    6e2c:	28cb883a 	add	r5,r5,r3
    6e30:	31bfffc4 	addi	r6,r6,-1
    6e34:	317ff62e 	bgeu	r6,r5,6e10 <__alt_data_end+0xfffe6e10>
    6e38:	01400434 	movhi	r5,16
    6e3c:	297fffc4 	addi	r5,r5,-1
    6e40:	28800236 	bltu	r5,r2,6e4c <__fpclassifyd+0x60>
    6e44:	008000c4 	movi	r2,3
    6e48:	f800283a 	ret
    6e4c:	10c00226 	beq	r2,r3,6e58 <__fpclassifyd+0x6c>
    6e50:	0005883a 	mov	r2,zero
    6e54:	f800283a 	ret
    6e58:	2005003a 	cmpeq	r2,r4,zero
    6e5c:	f800283a 	ret

00006e60 <_sbrk_r>:
    6e60:	defffd04 	addi	sp,sp,-12
    6e64:	dc000015 	stw	r16,0(sp)
    6e68:	04000074 	movhi	r16,1
    6e6c:	dc400115 	stw	r17,4(sp)
    6e70:	840b7304 	addi	r16,r16,11724
    6e74:	2023883a 	mov	r17,r4
    6e78:	2809883a 	mov	r4,r5
    6e7c:	dfc00215 	stw	ra,8(sp)
    6e80:	80000015 	stw	zero,0(r16)
    6e84:	000d4d40 	call	d4d4 <sbrk>
    6e88:	00ffffc4 	movi	r3,-1
    6e8c:	10c00526 	beq	r2,r3,6ea4 <_sbrk_r+0x44>
    6e90:	dfc00217 	ldw	ra,8(sp)
    6e94:	dc400117 	ldw	r17,4(sp)
    6e98:	dc000017 	ldw	r16,0(sp)
    6e9c:	dec00304 	addi	sp,sp,12
    6ea0:	f800283a 	ret
    6ea4:	80c00017 	ldw	r3,0(r16)
    6ea8:	183ff926 	beq	r3,zero,6e90 <__alt_data_end+0xfffe6e90>
    6eac:	88c00015 	stw	r3,0(r17)
    6eb0:	003ff706 	br	6e90 <__alt_data_end+0xfffe6e90>

00006eb4 <__sread>:
    6eb4:	defffe04 	addi	sp,sp,-8
    6eb8:	dc000015 	stw	r16,0(sp)
    6ebc:	2821883a 	mov	r16,r5
    6ec0:	2940038f 	ldh	r5,14(r5)
    6ec4:	dfc00115 	stw	ra,4(sp)
    6ec8:	00093580 	call	9358 <_read_r>
    6ecc:	10000716 	blt	r2,zero,6eec <__sread+0x38>
    6ed0:	80c01417 	ldw	r3,80(r16)
    6ed4:	1887883a 	add	r3,r3,r2
    6ed8:	80c01415 	stw	r3,80(r16)
    6edc:	dfc00117 	ldw	ra,4(sp)
    6ee0:	dc000017 	ldw	r16,0(sp)
    6ee4:	dec00204 	addi	sp,sp,8
    6ee8:	f800283a 	ret
    6eec:	80c0030b 	ldhu	r3,12(r16)
    6ef0:	18fbffcc 	andi	r3,r3,61439
    6ef4:	80c0030d 	sth	r3,12(r16)
    6ef8:	dfc00117 	ldw	ra,4(sp)
    6efc:	dc000017 	ldw	r16,0(sp)
    6f00:	dec00204 	addi	sp,sp,8
    6f04:	f800283a 	ret

00006f08 <__seofread>:
    6f08:	0005883a 	mov	r2,zero
    6f0c:	f800283a 	ret

00006f10 <__swrite>:
    6f10:	2880030b 	ldhu	r2,12(r5)
    6f14:	defffb04 	addi	sp,sp,-20
    6f18:	dcc00315 	stw	r19,12(sp)
    6f1c:	dc800215 	stw	r18,8(sp)
    6f20:	dc400115 	stw	r17,4(sp)
    6f24:	dc000015 	stw	r16,0(sp)
    6f28:	dfc00415 	stw	ra,16(sp)
    6f2c:	10c0400c 	andi	r3,r2,256
    6f30:	2821883a 	mov	r16,r5
    6f34:	2023883a 	mov	r17,r4
    6f38:	3025883a 	mov	r18,r6
    6f3c:	3827883a 	mov	r19,r7
    6f40:	18000526 	beq	r3,zero,6f58 <__swrite+0x48>
    6f44:	2940038f 	ldh	r5,14(r5)
    6f48:	01c00084 	movi	r7,2
    6f4c:	000d883a 	mov	r6,zero
    6f50:	000919c0 	call	919c <_lseek_r>
    6f54:	8080030b 	ldhu	r2,12(r16)
    6f58:	8140038f 	ldh	r5,14(r16)
    6f5c:	10bbffcc 	andi	r2,r2,61439
    6f60:	980f883a 	mov	r7,r19
    6f64:	900d883a 	mov	r6,r18
    6f68:	8809883a 	mov	r4,r17
    6f6c:	8080030d 	sth	r2,12(r16)
    6f70:	dfc00417 	ldw	ra,16(sp)
    6f74:	dcc00317 	ldw	r19,12(sp)
    6f78:	dc800217 	ldw	r18,8(sp)
    6f7c:	dc400117 	ldw	r17,4(sp)
    6f80:	dc000017 	ldw	r16,0(sp)
    6f84:	dec00504 	addi	sp,sp,20
    6f88:	00087ac1 	jmpi	87ac <_write_r>

00006f8c <__sseek>:
    6f8c:	defffe04 	addi	sp,sp,-8
    6f90:	dc000015 	stw	r16,0(sp)
    6f94:	2821883a 	mov	r16,r5
    6f98:	2940038f 	ldh	r5,14(r5)
    6f9c:	dfc00115 	stw	ra,4(sp)
    6fa0:	000919c0 	call	919c <_lseek_r>
    6fa4:	00ffffc4 	movi	r3,-1
    6fa8:	10c00826 	beq	r2,r3,6fcc <__sseek+0x40>
    6fac:	80c0030b 	ldhu	r3,12(r16)
    6fb0:	80801415 	stw	r2,80(r16)
    6fb4:	18c40014 	ori	r3,r3,4096
    6fb8:	80c0030d 	sth	r3,12(r16)
    6fbc:	dfc00117 	ldw	ra,4(sp)
    6fc0:	dc000017 	ldw	r16,0(sp)
    6fc4:	dec00204 	addi	sp,sp,8
    6fc8:	f800283a 	ret
    6fcc:	80c0030b 	ldhu	r3,12(r16)
    6fd0:	18fbffcc 	andi	r3,r3,61439
    6fd4:	80c0030d 	sth	r3,12(r16)
    6fd8:	dfc00117 	ldw	ra,4(sp)
    6fdc:	dc000017 	ldw	r16,0(sp)
    6fe0:	dec00204 	addi	sp,sp,8
    6fe4:	f800283a 	ret

00006fe8 <__sclose>:
    6fe8:	2940038f 	ldh	r5,14(r5)
    6fec:	000880c1 	jmpi	880c <_close_r>

00006ff0 <strcmp>:
    6ff0:	2144b03a 	or	r2,r4,r5
    6ff4:	108000cc 	andi	r2,r2,3
    6ff8:	1000171e 	bne	r2,zero,7058 <strcmp+0x68>
    6ffc:	20800017 	ldw	r2,0(r4)
    7000:	28c00017 	ldw	r3,0(r5)
    7004:	10c0141e 	bne	r2,r3,7058 <strcmp+0x68>
    7008:	027fbff4 	movhi	r9,65279
    700c:	4a7fbfc4 	addi	r9,r9,-257
    7010:	0086303a 	nor	r3,zero,r2
    7014:	02202074 	movhi	r8,32897
    7018:	1245883a 	add	r2,r2,r9
    701c:	42202004 	addi	r8,r8,-32640
    7020:	10c4703a 	and	r2,r2,r3
    7024:	1204703a 	and	r2,r2,r8
    7028:	10000226 	beq	r2,zero,7034 <strcmp+0x44>
    702c:	00002306 	br	70bc <strcmp+0xcc>
    7030:	1000221e 	bne	r2,zero,70bc <strcmp+0xcc>
    7034:	21000104 	addi	r4,r4,4
    7038:	20c00017 	ldw	r3,0(r4)
    703c:	29400104 	addi	r5,r5,4
    7040:	29800017 	ldw	r6,0(r5)
    7044:	1a4f883a 	add	r7,r3,r9
    7048:	00c4303a 	nor	r2,zero,r3
    704c:	3884703a 	and	r2,r7,r2
    7050:	1204703a 	and	r2,r2,r8
    7054:	19bff626 	beq	r3,r6,7030 <__alt_data_end+0xfffe7030>
    7058:	20800003 	ldbu	r2,0(r4)
    705c:	10c03fcc 	andi	r3,r2,255
    7060:	18c0201c 	xori	r3,r3,128
    7064:	18ffe004 	addi	r3,r3,-128
    7068:	18000c26 	beq	r3,zero,709c <strcmp+0xac>
    706c:	29800007 	ldb	r6,0(r5)
    7070:	19800326 	beq	r3,r6,7080 <strcmp+0x90>
    7074:	00001306 	br	70c4 <strcmp+0xd4>
    7078:	29800007 	ldb	r6,0(r5)
    707c:	11800b1e 	bne	r2,r6,70ac <strcmp+0xbc>
    7080:	21000044 	addi	r4,r4,1
    7084:	20c00003 	ldbu	r3,0(r4)
    7088:	29400044 	addi	r5,r5,1
    708c:	18803fcc 	andi	r2,r3,255
    7090:	1080201c 	xori	r2,r2,128
    7094:	10bfe004 	addi	r2,r2,-128
    7098:	103ff71e 	bne	r2,zero,7078 <__alt_data_end+0xfffe7078>
    709c:	0007883a 	mov	r3,zero
    70a0:	28800003 	ldbu	r2,0(r5)
    70a4:	1885c83a 	sub	r2,r3,r2
    70a8:	f800283a 	ret
    70ac:	28800003 	ldbu	r2,0(r5)
    70b0:	18c03fcc 	andi	r3,r3,255
    70b4:	1885c83a 	sub	r2,r3,r2
    70b8:	f800283a 	ret
    70bc:	0005883a 	mov	r2,zero
    70c0:	f800283a 	ret
    70c4:	10c03fcc 	andi	r3,r2,255
    70c8:	003ff506 	br	70a0 <__alt_data_end+0xfffe70a0>

000070cc <strlen>:
    70cc:	208000cc 	andi	r2,r4,3
    70d0:	10002026 	beq	r2,zero,7154 <strlen+0x88>
    70d4:	20800007 	ldb	r2,0(r4)
    70d8:	10002026 	beq	r2,zero,715c <strlen+0x90>
    70dc:	2005883a 	mov	r2,r4
    70e0:	00000206 	br	70ec <strlen+0x20>
    70e4:	10c00007 	ldb	r3,0(r2)
    70e8:	18001826 	beq	r3,zero,714c <strlen+0x80>
    70ec:	10800044 	addi	r2,r2,1
    70f0:	10c000cc 	andi	r3,r2,3
    70f4:	183ffb1e 	bne	r3,zero,70e4 <__alt_data_end+0xfffe70e4>
    70f8:	10c00017 	ldw	r3,0(r2)
    70fc:	01ffbff4 	movhi	r7,65279
    7100:	39ffbfc4 	addi	r7,r7,-257
    7104:	00ca303a 	nor	r5,zero,r3
    7108:	01a02074 	movhi	r6,32897
    710c:	19c7883a 	add	r3,r3,r7
    7110:	31a02004 	addi	r6,r6,-32640
    7114:	1946703a 	and	r3,r3,r5
    7118:	1986703a 	and	r3,r3,r6
    711c:	1800091e 	bne	r3,zero,7144 <strlen+0x78>
    7120:	10800104 	addi	r2,r2,4
    7124:	10c00017 	ldw	r3,0(r2)
    7128:	19cb883a 	add	r5,r3,r7
    712c:	00c6303a 	nor	r3,zero,r3
    7130:	28c6703a 	and	r3,r5,r3
    7134:	1986703a 	and	r3,r3,r6
    7138:	183ff926 	beq	r3,zero,7120 <__alt_data_end+0xfffe7120>
    713c:	00000106 	br	7144 <strlen+0x78>
    7140:	10800044 	addi	r2,r2,1
    7144:	10c00007 	ldb	r3,0(r2)
    7148:	183ffd1e 	bne	r3,zero,7140 <__alt_data_end+0xfffe7140>
    714c:	1105c83a 	sub	r2,r2,r4
    7150:	f800283a 	ret
    7154:	2005883a 	mov	r2,r4
    7158:	003fe706 	br	70f8 <__alt_data_end+0xfffe70f8>
    715c:	0005883a 	mov	r2,zero
    7160:	f800283a 	ret

00007164 <__sprint_r.part.0>:
    7164:	28801917 	ldw	r2,100(r5)
    7168:	defff604 	addi	sp,sp,-40
    716c:	dd400515 	stw	r21,20(sp)
    7170:	dfc00915 	stw	ra,36(sp)
    7174:	df000815 	stw	fp,32(sp)
    7178:	ddc00715 	stw	r23,28(sp)
    717c:	dd800615 	stw	r22,24(sp)
    7180:	dd000415 	stw	r20,16(sp)
    7184:	dcc00315 	stw	r19,12(sp)
    7188:	dc800215 	stw	r18,8(sp)
    718c:	dc400115 	stw	r17,4(sp)
    7190:	dc000015 	stw	r16,0(sp)
    7194:	1088000c 	andi	r2,r2,8192
    7198:	302b883a 	mov	r21,r6
    719c:	10002e26 	beq	r2,zero,7258 <__sprint_r.part.0+0xf4>
    71a0:	30800217 	ldw	r2,8(r6)
    71a4:	35800017 	ldw	r22,0(r6)
    71a8:	10002926 	beq	r2,zero,7250 <__sprint_r.part.0+0xec>
    71ac:	2827883a 	mov	r19,r5
    71b0:	2029883a 	mov	r20,r4
    71b4:	b5c00104 	addi	r23,r22,4
    71b8:	04bfffc4 	movi	r18,-1
    71bc:	bc400017 	ldw	r17,0(r23)
    71c0:	b4000017 	ldw	r16,0(r22)
    71c4:	0039883a 	mov	fp,zero
    71c8:	8822d0ba 	srli	r17,r17,2
    71cc:	8800031e 	bne	r17,zero,71dc <__sprint_r.part.0+0x78>
    71d0:	00001806 	br	7234 <__sprint_r.part.0+0xd0>
    71d4:	84000104 	addi	r16,r16,4
    71d8:	8f001526 	beq	r17,fp,7230 <__sprint_r.part.0+0xcc>
    71dc:	81400017 	ldw	r5,0(r16)
    71e0:	980d883a 	mov	r6,r19
    71e4:	a009883a 	mov	r4,r20
    71e8:	0008b8c0 	call	8b8c <_fputwc_r>
    71ec:	e7000044 	addi	fp,fp,1
    71f0:	14bff81e 	bne	r2,r18,71d4 <__alt_data_end+0xfffe71d4>
    71f4:	9005883a 	mov	r2,r18
    71f8:	a8000215 	stw	zero,8(r21)
    71fc:	a8000115 	stw	zero,4(r21)
    7200:	dfc00917 	ldw	ra,36(sp)
    7204:	df000817 	ldw	fp,32(sp)
    7208:	ddc00717 	ldw	r23,28(sp)
    720c:	dd800617 	ldw	r22,24(sp)
    7210:	dd400517 	ldw	r21,20(sp)
    7214:	dd000417 	ldw	r20,16(sp)
    7218:	dcc00317 	ldw	r19,12(sp)
    721c:	dc800217 	ldw	r18,8(sp)
    7220:	dc400117 	ldw	r17,4(sp)
    7224:	dc000017 	ldw	r16,0(sp)
    7228:	dec00a04 	addi	sp,sp,40
    722c:	f800283a 	ret
    7230:	a8800217 	ldw	r2,8(r21)
    7234:	8c63883a 	add	r17,r17,r17
    7238:	8c63883a 	add	r17,r17,r17
    723c:	1445c83a 	sub	r2,r2,r17
    7240:	a8800215 	stw	r2,8(r21)
    7244:	b5800204 	addi	r22,r22,8
    7248:	bdc00204 	addi	r23,r23,8
    724c:	103fdb1e 	bne	r2,zero,71bc <__alt_data_end+0xfffe71bc>
    7250:	0005883a 	mov	r2,zero
    7254:	003fe806 	br	71f8 <__alt_data_end+0xfffe71f8>
    7258:	0008c8c0 	call	8c8c <__sfvwrite_r>
    725c:	003fe606 	br	71f8 <__alt_data_end+0xfffe71f8>

00007260 <__sprint_r>:
    7260:	30c00217 	ldw	r3,8(r6)
    7264:	18000126 	beq	r3,zero,726c <__sprint_r+0xc>
    7268:	00071641 	jmpi	7164 <__sprint_r.part.0>
    726c:	30000115 	stw	zero,4(r6)
    7270:	0005883a 	mov	r2,zero
    7274:	f800283a 	ret

00007278 <___vfiprintf_internal_r>:
    7278:	deffc904 	addi	sp,sp,-220
    727c:	df003515 	stw	fp,212(sp)
    7280:	dd003115 	stw	r20,196(sp)
    7284:	dfc03615 	stw	ra,216(sp)
    7288:	ddc03415 	stw	r23,208(sp)
    728c:	dd803315 	stw	r22,204(sp)
    7290:	dd403215 	stw	r21,200(sp)
    7294:	dcc03015 	stw	r19,192(sp)
    7298:	dc802f15 	stw	r18,188(sp)
    729c:	dc402e15 	stw	r17,184(sp)
    72a0:	dc002d15 	stw	r16,180(sp)
    72a4:	d9002015 	stw	r4,128(sp)
    72a8:	d9c02215 	stw	r7,136(sp)
    72ac:	2829883a 	mov	r20,r5
    72b0:	3039883a 	mov	fp,r6
    72b4:	20000226 	beq	r4,zero,72c0 <___vfiprintf_internal_r+0x48>
    72b8:	20800e17 	ldw	r2,56(r4)
    72bc:	1000cf26 	beq	r2,zero,75fc <___vfiprintf_internal_r+0x384>
    72c0:	a080030b 	ldhu	r2,12(r20)
    72c4:	10c8000c 	andi	r3,r2,8192
    72c8:	1800061e 	bne	r3,zero,72e4 <___vfiprintf_internal_r+0x6c>
    72cc:	a1001917 	ldw	r4,100(r20)
    72d0:	00f7ffc4 	movi	r3,-8193
    72d4:	10880014 	ori	r2,r2,8192
    72d8:	20c6703a 	and	r3,r4,r3
    72dc:	a080030d 	sth	r2,12(r20)
    72e0:	a0c01915 	stw	r3,100(r20)
    72e4:	10c0020c 	andi	r3,r2,8
    72e8:	1800a926 	beq	r3,zero,7590 <___vfiprintf_internal_r+0x318>
    72ec:	a0c00417 	ldw	r3,16(r20)
    72f0:	1800a726 	beq	r3,zero,7590 <___vfiprintf_internal_r+0x318>
    72f4:	1080068c 	andi	r2,r2,26
    72f8:	00c00284 	movi	r3,10
    72fc:	10c0ac26 	beq	r2,r3,75b0 <___vfiprintf_internal_r+0x338>
    7300:	da801a04 	addi	r10,sp,104
    7304:	da801e15 	stw	r10,120(sp)
    7308:	d8801e17 	ldw	r2,120(sp)
    730c:	da8019c4 	addi	r10,sp,103
    7310:	05800074 	movhi	r22,1
    7314:	05c00074 	movhi	r23,1
    7318:	da801f15 	stw	r10,124(sp)
    731c:	1295c83a 	sub	r10,r2,r10
    7320:	b5bda604 	addi	r22,r22,-2408
    7324:	bdfda204 	addi	r23,r23,-2424
    7328:	dec01a15 	stw	sp,104(sp)
    732c:	d8001c15 	stw	zero,112(sp)
    7330:	d8001b15 	stw	zero,108(sp)
    7334:	d8002615 	stw	zero,152(sp)
    7338:	d8002315 	stw	zero,140(sp)
    733c:	da802715 	stw	r10,156(sp)
    7340:	d811883a 	mov	r8,sp
    7344:	dd002115 	stw	r20,132(sp)
    7348:	e021883a 	mov	r16,fp
    734c:	80800007 	ldb	r2,0(r16)
    7350:	1003ea26 	beq	r2,zero,82fc <___vfiprintf_internal_r+0x1084>
    7354:	00c00944 	movi	r3,37
    7358:	8025883a 	mov	r18,r16
    735c:	10c0021e 	bne	r2,r3,7368 <___vfiprintf_internal_r+0xf0>
    7360:	00001606 	br	73bc <___vfiprintf_internal_r+0x144>
    7364:	10c00326 	beq	r2,r3,7374 <___vfiprintf_internal_r+0xfc>
    7368:	94800044 	addi	r18,r18,1
    736c:	90800007 	ldb	r2,0(r18)
    7370:	103ffc1e 	bne	r2,zero,7364 <__alt_data_end+0xfffe7364>
    7374:	9423c83a 	sub	r17,r18,r16
    7378:	88001026 	beq	r17,zero,73bc <___vfiprintf_internal_r+0x144>
    737c:	d8c01c17 	ldw	r3,112(sp)
    7380:	d8801b17 	ldw	r2,108(sp)
    7384:	44000015 	stw	r16,0(r8)
    7388:	88c7883a 	add	r3,r17,r3
    738c:	10800044 	addi	r2,r2,1
    7390:	44400115 	stw	r17,4(r8)
    7394:	d8c01c15 	stw	r3,112(sp)
    7398:	d8801b15 	stw	r2,108(sp)
    739c:	010001c4 	movi	r4,7
    73a0:	2080760e 	bge	r4,r2,757c <___vfiprintf_internal_r+0x304>
    73a4:	1803821e 	bne	r3,zero,81b0 <___vfiprintf_internal_r+0xf38>
    73a8:	da802317 	ldw	r10,140(sp)
    73ac:	d8001b15 	stw	zero,108(sp)
    73b0:	d811883a 	mov	r8,sp
    73b4:	5455883a 	add	r10,r10,r17
    73b8:	da802315 	stw	r10,140(sp)
    73bc:	90800007 	ldb	r2,0(r18)
    73c0:	10044626 	beq	r2,zero,84dc <___vfiprintf_internal_r+0x1264>
    73c4:	90c00047 	ldb	r3,1(r18)
    73c8:	94000044 	addi	r16,r18,1
    73cc:	d8001d85 	stb	zero,118(sp)
    73d0:	0009883a 	mov	r4,zero
    73d4:	000f883a 	mov	r7,zero
    73d8:	027fffc4 	movi	r9,-1
    73dc:	0023883a 	mov	r17,zero
    73e0:	0029883a 	mov	r20,zero
    73e4:	01401604 	movi	r5,88
    73e8:	01800244 	movi	r6,9
    73ec:	03400a84 	movi	r13,42
    73f0:	03001b04 	movi	r12,108
    73f4:	84000044 	addi	r16,r16,1
    73f8:	18bff804 	addi	r2,r3,-32
    73fc:	28827336 	bltu	r5,r2,7dcc <___vfiprintf_internal_r+0xb54>
    7400:	100490ba 	slli	r2,r2,2
    7404:	02800034 	movhi	r10,0
    7408:	529d0604 	addi	r10,r10,29720
    740c:	1285883a 	add	r2,r2,r10
    7410:	10800017 	ldw	r2,0(r2)
    7414:	1000683a 	jmp	r2
    7418:	00007b00 	call	7b0 <___vfprintf_internal_r+0x68>
    741c:	00007dcc 	andi	zero,zero,503
    7420:	00007dcc 	andi	zero,zero,503
    7424:	00007b20 	cmpeqi	zero,zero,492
    7428:	00007dcc 	andi	zero,zero,503
    742c:	00007dcc 	andi	zero,zero,503
    7430:	00007dcc 	andi	zero,zero,503
    7434:	00007dcc 	andi	zero,zero,503
    7438:	00007dcc 	andi	zero,zero,503
    743c:	00007dcc 	andi	zero,zero,503
    7440:	00007d08 	cmpgei	zero,zero,500
    7444:	00007d24 	muli	zero,zero,500
    7448:	00007dcc 	andi	zero,zero,503
    744c:	0000760c 	andi	zero,zero,472
    7450:	00007d34 	movhi	zero,500
    7454:	00007dcc 	andi	zero,zero,503
    7458:	00007b2c 	andhi	zero,zero,492
    745c:	00007b38 	rdprs	zero,zero,492
    7460:	00007b38 	rdprs	zero,zero,492
    7464:	00007b38 	rdprs	zero,zero,492
    7468:	00007b38 	rdprs	zero,zero,492
    746c:	00007b38 	rdprs	zero,zero,492
    7470:	00007b38 	rdprs	zero,zero,492
    7474:	00007b38 	rdprs	zero,zero,492
    7478:	00007b38 	rdprs	zero,zero,492
    747c:	00007b38 	rdprs	zero,zero,492
    7480:	00007dcc 	andi	zero,zero,503
    7484:	00007dcc 	andi	zero,zero,503
    7488:	00007dcc 	andi	zero,zero,503
    748c:	00007dcc 	andi	zero,zero,503
    7490:	00007dcc 	andi	zero,zero,503
    7494:	00007dcc 	andi	zero,zero,503
    7498:	00007dcc 	andi	zero,zero,503
    749c:	00007dcc 	andi	zero,zero,503
    74a0:	00007dcc 	andi	zero,zero,503
    74a4:	00007dcc 	andi	zero,zero,503
    74a8:	00007b64 	muli	zero,zero,493
    74ac:	00007dcc 	andi	zero,zero,503
    74b0:	00007dcc 	andi	zero,zero,503
    74b4:	00007dcc 	andi	zero,zero,503
    74b8:	00007dcc 	andi	zero,zero,503
    74bc:	00007dcc 	andi	zero,zero,503
    74c0:	00007dcc 	andi	zero,zero,503
    74c4:	00007dcc 	andi	zero,zero,503
    74c8:	00007dcc 	andi	zero,zero,503
    74cc:	00007dcc 	andi	zero,zero,503
    74d0:	00007dcc 	andi	zero,zero,503
    74d4:	00007b9c 	xori	zero,zero,494
    74d8:	00007dcc 	andi	zero,zero,503
    74dc:	00007dcc 	andi	zero,zero,503
    74e0:	00007dcc 	andi	zero,zero,503
    74e4:	00007dcc 	andi	zero,zero,503
    74e8:	00007dcc 	andi	zero,zero,503
    74ec:	00007bf4 	movhi	zero,495
    74f0:	00007dcc 	andi	zero,zero,503
    74f4:	00007dcc 	andi	zero,zero,503
    74f8:	00007c64 	muli	zero,zero,497
    74fc:	00007dcc 	andi	zero,zero,503
    7500:	00007dcc 	andi	zero,zero,503
    7504:	00007dcc 	andi	zero,zero,503
    7508:	00007dcc 	andi	zero,zero,503
    750c:	00007dcc 	andi	zero,zero,503
    7510:	00007dcc 	andi	zero,zero,503
    7514:	00007dcc 	andi	zero,zero,503
    7518:	00007dcc 	andi	zero,zero,503
    751c:	00007dcc 	andi	zero,zero,503
    7520:	00007dcc 	andi	zero,zero,503
    7524:	00007a10 	cmplti	zero,zero,488
    7528:	00007a3c 	xorhi	zero,zero,488
    752c:	00007dcc 	andi	zero,zero,503
    7530:	00007dcc 	andi	zero,zero,503
    7534:	00007dcc 	andi	zero,zero,503
    7538:	00007d74 	movhi	zero,501
    753c:	00007a3c 	xorhi	zero,zero,488
    7540:	00007dcc 	andi	zero,zero,503
    7544:	00007dcc 	andi	zero,zero,503
    7548:	000078d0 	cmplti	zero,zero,483
    754c:	00007dcc 	andi	zero,zero,503
    7550:	000078e0 	cmpeqi	zero,zero,483
    7554:	0000791c 	xori	zero,zero,484
    7558:	00007618 	cmpnei	zero,zero,472
    755c:	000078c4 	movi	zero,483
    7560:	00007dcc 	andi	zero,zero,503
    7564:	00007ca0 	cmpeqi	zero,zero,498
    7568:	00007dcc 	andi	zero,zero,503
    756c:	00007cf8 	rdprs	zero,zero,499
    7570:	00007dcc 	andi	zero,zero,503
    7574:	00007dcc 	andi	zero,zero,503
    7578:	000079bc 	xorhi	zero,zero,486
    757c:	42000204 	addi	r8,r8,8
    7580:	da802317 	ldw	r10,140(sp)
    7584:	5455883a 	add	r10,r10,r17
    7588:	da802315 	stw	r10,140(sp)
    758c:	003f8b06 	br	73bc <__alt_data_end+0xfffe73bc>
    7590:	d9002017 	ldw	r4,128(sp)
    7594:	a00b883a 	mov	r5,r20
    7598:	0002a180 	call	2a18 <__swsetup_r>
    759c:	1003b11e 	bne	r2,zero,8464 <___vfiprintf_internal_r+0x11ec>
    75a0:	a080030b 	ldhu	r2,12(r20)
    75a4:	00c00284 	movi	r3,10
    75a8:	1080068c 	andi	r2,r2,26
    75ac:	10ff541e 	bne	r2,r3,7300 <__alt_data_end+0xfffe7300>
    75b0:	a080038f 	ldh	r2,14(r20)
    75b4:	103f5216 	blt	r2,zero,7300 <__alt_data_end+0xfffe7300>
    75b8:	d9c02217 	ldw	r7,136(sp)
    75bc:	d9002017 	ldw	r4,128(sp)
    75c0:	e00d883a 	mov	r6,fp
    75c4:	a00b883a 	mov	r5,r20
    75c8:	00086f00 	call	86f0 <__sbprintf>
    75cc:	dfc03617 	ldw	ra,216(sp)
    75d0:	df003517 	ldw	fp,212(sp)
    75d4:	ddc03417 	ldw	r23,208(sp)
    75d8:	dd803317 	ldw	r22,204(sp)
    75dc:	dd403217 	ldw	r21,200(sp)
    75e0:	dd003117 	ldw	r20,196(sp)
    75e4:	dcc03017 	ldw	r19,192(sp)
    75e8:	dc802f17 	ldw	r18,188(sp)
    75ec:	dc402e17 	ldw	r17,184(sp)
    75f0:	dc002d17 	ldw	r16,180(sp)
    75f4:	dec03704 	addi	sp,sp,220
    75f8:	f800283a 	ret
    75fc:	00049ec0 	call	49ec <__sinit>
    7600:	003f2f06 	br	72c0 <__alt_data_end+0xfffe72c0>
    7604:	0463c83a 	sub	r17,zero,r17
    7608:	d8802215 	stw	r2,136(sp)
    760c:	a5000114 	ori	r20,r20,4
    7610:	80c00007 	ldb	r3,0(r16)
    7614:	003f7706 	br	73f4 <__alt_data_end+0xfffe73f4>
    7618:	00800c04 	movi	r2,48
    761c:	da802217 	ldw	r10,136(sp)
    7620:	d8801d05 	stb	r2,116(sp)
    7624:	00801e04 	movi	r2,120
    7628:	d8801d45 	stb	r2,117(sp)
    762c:	d8001d85 	stb	zero,118(sp)
    7630:	50c00104 	addi	r3,r10,4
    7634:	54800017 	ldw	r18,0(r10)
    7638:	0027883a 	mov	r19,zero
    763c:	a0800094 	ori	r2,r20,2
    7640:	48030b16 	blt	r9,zero,8270 <___vfiprintf_internal_r+0xff8>
    7644:	00bfdfc4 	movi	r2,-129
    7648:	a096703a 	and	r11,r20,r2
    764c:	d8c02215 	stw	r3,136(sp)
    7650:	5d000094 	ori	r20,r11,2
    7654:	90032b1e 	bne	r18,zero,8304 <___vfiprintf_internal_r+0x108c>
    7658:	00800074 	movhi	r2,1
    765c:	10bd4104 	addi	r2,r2,-2812
    7660:	d8802615 	stw	r2,152(sp)
    7664:	0039883a 	mov	fp,zero
    7668:	48017b1e 	bne	r9,zero,7c58 <___vfiprintf_internal_r+0x9e0>
    766c:	0013883a 	mov	r9,zero
    7670:	0027883a 	mov	r19,zero
    7674:	dd401a04 	addi	r21,sp,104
    7678:	4825883a 	mov	r18,r9
    767c:	4cc0010e 	bge	r9,r19,7684 <___vfiprintf_internal_r+0x40c>
    7680:	9825883a 	mov	r18,r19
    7684:	e7003fcc 	andi	fp,fp,255
    7688:	e700201c 	xori	fp,fp,128
    768c:	e73fe004 	addi	fp,fp,-128
    7690:	e0000126 	beq	fp,zero,7698 <___vfiprintf_internal_r+0x420>
    7694:	94800044 	addi	r18,r18,1
    7698:	a380008c 	andi	r14,r20,2
    769c:	70000126 	beq	r14,zero,76a4 <___vfiprintf_internal_r+0x42c>
    76a0:	94800084 	addi	r18,r18,2
    76a4:	a700210c 	andi	fp,r20,132
    76a8:	e001df1e 	bne	fp,zero,7e28 <___vfiprintf_internal_r+0xbb0>
    76ac:	8c87c83a 	sub	r3,r17,r18
    76b0:	00c1dd0e 	bge	zero,r3,7e28 <___vfiprintf_internal_r+0xbb0>
    76b4:	01c00404 	movi	r7,16
    76b8:	d8801c17 	ldw	r2,112(sp)
    76bc:	38c3ad0e 	bge	r7,r3,8574 <___vfiprintf_internal_r+0x12fc>
    76c0:	02800074 	movhi	r10,1
    76c4:	52bda604 	addi	r10,r10,-2408
    76c8:	dc002915 	stw	r16,164(sp)
    76cc:	d9801b17 	ldw	r6,108(sp)
    76d0:	da802415 	stw	r10,144(sp)
    76d4:	03c001c4 	movi	r15,7
    76d8:	da402515 	stw	r9,148(sp)
    76dc:	db802815 	stw	r14,160(sp)
    76e0:	1821883a 	mov	r16,r3
    76e4:	00000506 	br	76fc <___vfiprintf_internal_r+0x484>
    76e8:	31400084 	addi	r5,r6,2
    76ec:	42000204 	addi	r8,r8,8
    76f0:	200d883a 	mov	r6,r4
    76f4:	843ffc04 	addi	r16,r16,-16
    76f8:	3c000d0e 	bge	r7,r16,7730 <___vfiprintf_internal_r+0x4b8>
    76fc:	10800404 	addi	r2,r2,16
    7700:	31000044 	addi	r4,r6,1
    7704:	45800015 	stw	r22,0(r8)
    7708:	41c00115 	stw	r7,4(r8)
    770c:	d8801c15 	stw	r2,112(sp)
    7710:	d9001b15 	stw	r4,108(sp)
    7714:	793ff40e 	bge	r15,r4,76e8 <__alt_data_end+0xfffe76e8>
    7718:	1001b51e 	bne	r2,zero,7df0 <___vfiprintf_internal_r+0xb78>
    771c:	843ffc04 	addi	r16,r16,-16
    7720:	000d883a 	mov	r6,zero
    7724:	01400044 	movi	r5,1
    7728:	d811883a 	mov	r8,sp
    772c:	3c3ff316 	blt	r7,r16,76fc <__alt_data_end+0xfffe76fc>
    7730:	8007883a 	mov	r3,r16
    7734:	da402517 	ldw	r9,148(sp)
    7738:	db802817 	ldw	r14,160(sp)
    773c:	dc002917 	ldw	r16,164(sp)
    7740:	da802417 	ldw	r10,144(sp)
    7744:	1885883a 	add	r2,r3,r2
    7748:	40c00115 	stw	r3,4(r8)
    774c:	42800015 	stw	r10,0(r8)
    7750:	d8801c15 	stw	r2,112(sp)
    7754:	d9401b15 	stw	r5,108(sp)
    7758:	00c001c4 	movi	r3,7
    775c:	19426016 	blt	r3,r5,80e0 <___vfiprintf_internal_r+0xe68>
    7760:	d8c01d87 	ldb	r3,118(sp)
    7764:	42000204 	addi	r8,r8,8
    7768:	29000044 	addi	r4,r5,1
    776c:	1801b31e 	bne	r3,zero,7e3c <___vfiprintf_internal_r+0xbc4>
    7770:	7001c026 	beq	r14,zero,7e74 <___vfiprintf_internal_r+0xbfc>
    7774:	d8c01d04 	addi	r3,sp,116
    7778:	10800084 	addi	r2,r2,2
    777c:	40c00015 	stw	r3,0(r8)
    7780:	00c00084 	movi	r3,2
    7784:	40c00115 	stw	r3,4(r8)
    7788:	d8801c15 	stw	r2,112(sp)
    778c:	d9001b15 	stw	r4,108(sp)
    7790:	00c001c4 	movi	r3,7
    7794:	1902650e 	bge	r3,r4,812c <___vfiprintf_internal_r+0xeb4>
    7798:	10029a1e 	bne	r2,zero,8204 <___vfiprintf_internal_r+0xf8c>
    779c:	00c02004 	movi	r3,128
    77a0:	01000044 	movi	r4,1
    77a4:	000b883a 	mov	r5,zero
    77a8:	d811883a 	mov	r8,sp
    77ac:	e0c1b31e 	bne	fp,r3,7e7c <___vfiprintf_internal_r+0xc04>
    77b0:	8cb9c83a 	sub	fp,r17,r18
    77b4:	0701b10e 	bge	zero,fp,7e7c <___vfiprintf_internal_r+0xc04>
    77b8:	01c00404 	movi	r7,16
    77bc:	3f03890e 	bge	r7,fp,85e4 <___vfiprintf_internal_r+0x136c>
    77c0:	00c00074 	movhi	r3,1
    77c4:	18fda204 	addi	r3,r3,-2424
    77c8:	d8c02415 	stw	r3,144(sp)
    77cc:	8007883a 	mov	r3,r16
    77d0:	034001c4 	movi	r13,7
    77d4:	e021883a 	mov	r16,fp
    77d8:	da402515 	stw	r9,148(sp)
    77dc:	1839883a 	mov	fp,r3
    77e0:	00000506 	br	77f8 <___vfiprintf_internal_r+0x580>
    77e4:	29800084 	addi	r6,r5,2
    77e8:	42000204 	addi	r8,r8,8
    77ec:	180b883a 	mov	r5,r3
    77f0:	843ffc04 	addi	r16,r16,-16
    77f4:	3c000d0e 	bge	r7,r16,782c <___vfiprintf_internal_r+0x5b4>
    77f8:	10800404 	addi	r2,r2,16
    77fc:	28c00044 	addi	r3,r5,1
    7800:	45c00015 	stw	r23,0(r8)
    7804:	41c00115 	stw	r7,4(r8)
    7808:	d8801c15 	stw	r2,112(sp)
    780c:	d8c01b15 	stw	r3,108(sp)
    7810:	68fff40e 	bge	r13,r3,77e4 <__alt_data_end+0xfffe77e4>
    7814:	1002241e 	bne	r2,zero,80a8 <___vfiprintf_internal_r+0xe30>
    7818:	843ffc04 	addi	r16,r16,-16
    781c:	01800044 	movi	r6,1
    7820:	000b883a 	mov	r5,zero
    7824:	d811883a 	mov	r8,sp
    7828:	3c3ff316 	blt	r7,r16,77f8 <__alt_data_end+0xfffe77f8>
    782c:	da402517 	ldw	r9,148(sp)
    7830:	e007883a 	mov	r3,fp
    7834:	8039883a 	mov	fp,r16
    7838:	1821883a 	mov	r16,r3
    783c:	d8c02417 	ldw	r3,144(sp)
    7840:	1705883a 	add	r2,r2,fp
    7844:	47000115 	stw	fp,4(r8)
    7848:	40c00015 	stw	r3,0(r8)
    784c:	d8801c15 	stw	r2,112(sp)
    7850:	d9801b15 	stw	r6,108(sp)
    7854:	00c001c4 	movi	r3,7
    7858:	19827616 	blt	r3,r6,8234 <___vfiprintf_internal_r+0xfbc>
    785c:	4cf9c83a 	sub	fp,r9,r19
    7860:	42000204 	addi	r8,r8,8
    7864:	31000044 	addi	r4,r6,1
    7868:	300b883a 	mov	r5,r6
    786c:	07018516 	blt	zero,fp,7e84 <___vfiprintf_internal_r+0xc0c>
    7870:	9885883a 	add	r2,r19,r2
    7874:	45400015 	stw	r21,0(r8)
    7878:	44c00115 	stw	r19,4(r8)
    787c:	d8801c15 	stw	r2,112(sp)
    7880:	d9001b15 	stw	r4,108(sp)
    7884:	00c001c4 	movi	r3,7
    7888:	1901dd0e 	bge	r3,r4,8000 <___vfiprintf_internal_r+0xd88>
    788c:	1002401e 	bne	r2,zero,8190 <___vfiprintf_internal_r+0xf18>
    7890:	d8001b15 	stw	zero,108(sp)
    7894:	a2c0010c 	andi	r11,r20,4
    7898:	58000226 	beq	r11,zero,78a4 <___vfiprintf_internal_r+0x62c>
    789c:	8ca7c83a 	sub	r19,r17,r18
    78a0:	04c2f216 	blt	zero,r19,846c <___vfiprintf_internal_r+0x11f4>
    78a4:	8c80010e 	bge	r17,r18,78ac <___vfiprintf_internal_r+0x634>
    78a8:	9023883a 	mov	r17,r18
    78ac:	da802317 	ldw	r10,140(sp)
    78b0:	5455883a 	add	r10,r10,r17
    78b4:	da802315 	stw	r10,140(sp)
    78b8:	d8001b15 	stw	zero,108(sp)
    78bc:	d811883a 	mov	r8,sp
    78c0:	003ea206 	br	734c <__alt_data_end+0xfffe734c>
    78c4:	a5000814 	ori	r20,r20,32
    78c8:	80c00007 	ldb	r3,0(r16)
    78cc:	003ec906 	br	73f4 <__alt_data_end+0xfffe73f4>
    78d0:	80c00007 	ldb	r3,0(r16)
    78d4:	1b030926 	beq	r3,r12,84fc <___vfiprintf_internal_r+0x1284>
    78d8:	a5000414 	ori	r20,r20,16
    78dc:	003ec506 	br	73f4 <__alt_data_end+0xfffe73f4>
    78e0:	21003fcc 	andi	r4,r4,255
    78e4:	20035e1e 	bne	r4,zero,8660 <___vfiprintf_internal_r+0x13e8>
    78e8:	a080080c 	andi	r2,r20,32
    78ec:	1002a526 	beq	r2,zero,8384 <___vfiprintf_internal_r+0x110c>
    78f0:	da802217 	ldw	r10,136(sp)
    78f4:	50800017 	ldw	r2,0(r10)
    78f8:	da802317 	ldw	r10,140(sp)
    78fc:	5007d7fa 	srai	r3,r10,31
    7900:	da802217 	ldw	r10,136(sp)
    7904:	10c00115 	stw	r3,4(r2)
    7908:	52800104 	addi	r10,r10,4
    790c:	da802215 	stw	r10,136(sp)
    7910:	da802317 	ldw	r10,140(sp)
    7914:	12800015 	stw	r10,0(r2)
    7918:	003e8c06 	br	734c <__alt_data_end+0xfffe734c>
    791c:	21003fcc 	andi	r4,r4,255
    7920:	2003511e 	bne	r4,zero,8668 <___vfiprintf_internal_r+0x13f0>
    7924:	a080080c 	andi	r2,r20,32
    7928:	1000a126 	beq	r2,zero,7bb0 <___vfiprintf_internal_r+0x938>
    792c:	da802217 	ldw	r10,136(sp)
    7930:	d8001d85 	stb	zero,118(sp)
    7934:	50800204 	addi	r2,r10,8
    7938:	54800017 	ldw	r18,0(r10)
    793c:	54c00117 	ldw	r19,4(r10)
    7940:	4802b416 	blt	r9,zero,8414 <___vfiprintf_internal_r+0x119c>
    7944:	013fdfc4 	movi	r4,-129
    7948:	94c6b03a 	or	r3,r18,r19
    794c:	d8802215 	stw	r2,136(sp)
    7950:	a128703a 	and	r20,r20,r4
    7954:	1800a226 	beq	r3,zero,7be0 <___vfiprintf_internal_r+0x968>
    7958:	0039883a 	mov	fp,zero
    795c:	dd401a04 	addi	r21,sp,104
    7960:	9006d0fa 	srli	r3,r18,3
    7964:	9808977a 	slli	r4,r19,29
    7968:	9826d0fa 	srli	r19,r19,3
    796c:	948001cc 	andi	r18,r18,7
    7970:	90800c04 	addi	r2,r18,48
    7974:	ad7fffc4 	addi	r21,r21,-1
    7978:	20e4b03a 	or	r18,r4,r3
    797c:	a8800005 	stb	r2,0(r21)
    7980:	94c6b03a 	or	r3,r18,r19
    7984:	183ff61e 	bne	r3,zero,7960 <__alt_data_end+0xfffe7960>
    7988:	a0c0004c 	andi	r3,r20,1
    798c:	18005926 	beq	r3,zero,7af4 <___vfiprintf_internal_r+0x87c>
    7990:	10803fcc 	andi	r2,r2,255
    7994:	1080201c 	xori	r2,r2,128
    7998:	10bfe004 	addi	r2,r2,-128
    799c:	00c00c04 	movi	r3,48
    79a0:	10c05426 	beq	r2,r3,7af4 <___vfiprintf_internal_r+0x87c>
    79a4:	da801e17 	ldw	r10,120(sp)
    79a8:	a8bfffc4 	addi	r2,r21,-1
    79ac:	a8ffffc5 	stb	r3,-1(r21)
    79b0:	50a7c83a 	sub	r19,r10,r2
    79b4:	102b883a 	mov	r21,r2
    79b8:	003f2f06 	br	7678 <__alt_data_end+0xfffe7678>
    79bc:	21003fcc 	andi	r4,r4,255
    79c0:	2003421e 	bne	r4,zero,86cc <___vfiprintf_internal_r+0x1454>
    79c4:	00800074 	movhi	r2,1
    79c8:	10bd4104 	addi	r2,r2,-2812
    79cc:	d8802615 	stw	r2,152(sp)
    79d0:	a080080c 	andi	r2,r20,32
    79d4:	1000aa26 	beq	r2,zero,7c80 <___vfiprintf_internal_r+0xa08>
    79d8:	da802217 	ldw	r10,136(sp)
    79dc:	54800017 	ldw	r18,0(r10)
    79e0:	54c00117 	ldw	r19,4(r10)
    79e4:	52800204 	addi	r10,r10,8
    79e8:	da802215 	stw	r10,136(sp)
    79ec:	a080004c 	andi	r2,r20,1
    79f0:	1001d226 	beq	r2,zero,813c <___vfiprintf_internal_r+0xec4>
    79f4:	94c4b03a 	or	r2,r18,r19
    79f8:	1002351e 	bne	r2,zero,82d0 <___vfiprintf_internal_r+0x1058>
    79fc:	d8001d85 	stb	zero,118(sp)
    7a00:	48022216 	blt	r9,zero,828c <___vfiprintf_internal_r+0x1014>
    7a04:	00bfdfc4 	movi	r2,-129
    7a08:	a0a8703a 	and	r20,r20,r2
    7a0c:	003f1506 	br	7664 <__alt_data_end+0xfffe7664>
    7a10:	da802217 	ldw	r10,136(sp)
    7a14:	04800044 	movi	r18,1
    7a18:	d8001d85 	stb	zero,118(sp)
    7a1c:	50800017 	ldw	r2,0(r10)
    7a20:	52800104 	addi	r10,r10,4
    7a24:	da802215 	stw	r10,136(sp)
    7a28:	d8801005 	stb	r2,64(sp)
    7a2c:	9027883a 	mov	r19,r18
    7a30:	dd401004 	addi	r21,sp,64
    7a34:	0013883a 	mov	r9,zero
    7a38:	003f1706 	br	7698 <__alt_data_end+0xfffe7698>
    7a3c:	21003fcc 	andi	r4,r4,255
    7a40:	2003201e 	bne	r4,zero,86c4 <___vfiprintf_internal_r+0x144c>
    7a44:	a080080c 	andi	r2,r20,32
    7a48:	10004b26 	beq	r2,zero,7b78 <___vfiprintf_internal_r+0x900>
    7a4c:	da802217 	ldw	r10,136(sp)
    7a50:	50800117 	ldw	r2,4(r10)
    7a54:	54800017 	ldw	r18,0(r10)
    7a58:	52800204 	addi	r10,r10,8
    7a5c:	da802215 	stw	r10,136(sp)
    7a60:	1027883a 	mov	r19,r2
    7a64:	10022c16 	blt	r2,zero,8318 <___vfiprintf_internal_r+0x10a0>
    7a68:	df001d83 	ldbu	fp,118(sp)
    7a6c:	48007216 	blt	r9,zero,7c38 <___vfiprintf_internal_r+0x9c0>
    7a70:	00ffdfc4 	movi	r3,-129
    7a74:	94c4b03a 	or	r2,r18,r19
    7a78:	a0e8703a 	and	r20,r20,r3
    7a7c:	1000cc26 	beq	r2,zero,7db0 <___vfiprintf_internal_r+0xb38>
    7a80:	98021026 	beq	r19,zero,82c4 <___vfiprintf_internal_r+0x104c>
    7a84:	dc402415 	stw	r17,144(sp)
    7a88:	dc002515 	stw	r16,148(sp)
    7a8c:	9823883a 	mov	r17,r19
    7a90:	9021883a 	mov	r16,r18
    7a94:	dd401a04 	addi	r21,sp,104
    7a98:	4825883a 	mov	r18,r9
    7a9c:	4027883a 	mov	r19,r8
    7aa0:	8009883a 	mov	r4,r16
    7aa4:	880b883a 	mov	r5,r17
    7aa8:	01800284 	movi	r6,10
    7aac:	000f883a 	mov	r7,zero
    7ab0:	000a1d40 	call	a1d4 <__umoddi3>
    7ab4:	10800c04 	addi	r2,r2,48
    7ab8:	ad7fffc4 	addi	r21,r21,-1
    7abc:	8009883a 	mov	r4,r16
    7ac0:	880b883a 	mov	r5,r17
    7ac4:	a8800005 	stb	r2,0(r21)
    7ac8:	01800284 	movi	r6,10
    7acc:	000f883a 	mov	r7,zero
    7ad0:	0009c5c0 	call	9c5c <__udivdi3>
    7ad4:	1021883a 	mov	r16,r2
    7ad8:	10c4b03a 	or	r2,r2,r3
    7adc:	1823883a 	mov	r17,r3
    7ae0:	103fef1e 	bne	r2,zero,7aa0 <__alt_data_end+0xfffe7aa0>
    7ae4:	dc402417 	ldw	r17,144(sp)
    7ae8:	dc002517 	ldw	r16,148(sp)
    7aec:	9013883a 	mov	r9,r18
    7af0:	9811883a 	mov	r8,r19
    7af4:	da801e17 	ldw	r10,120(sp)
    7af8:	5567c83a 	sub	r19,r10,r21
    7afc:	003ede06 	br	7678 <__alt_data_end+0xfffe7678>
    7b00:	38803fcc 	andi	r2,r7,255
    7b04:	1080201c 	xori	r2,r2,128
    7b08:	10bfe004 	addi	r2,r2,-128
    7b0c:	1002371e 	bne	r2,zero,83ec <___vfiprintf_internal_r+0x1174>
    7b10:	01000044 	movi	r4,1
    7b14:	01c00804 	movi	r7,32
    7b18:	80c00007 	ldb	r3,0(r16)
    7b1c:	003e3506 	br	73f4 <__alt_data_end+0xfffe73f4>
    7b20:	a5000054 	ori	r20,r20,1
    7b24:	80c00007 	ldb	r3,0(r16)
    7b28:	003e3206 	br	73f4 <__alt_data_end+0xfffe73f4>
    7b2c:	a5002014 	ori	r20,r20,128
    7b30:	80c00007 	ldb	r3,0(r16)
    7b34:	003e2f06 	br	73f4 <__alt_data_end+0xfffe73f4>
    7b38:	8015883a 	mov	r10,r16
    7b3c:	0023883a 	mov	r17,zero
    7b40:	18bff404 	addi	r2,r3,-48
    7b44:	50c00007 	ldb	r3,0(r10)
    7b48:	8c4002a4 	muli	r17,r17,10
    7b4c:	84000044 	addi	r16,r16,1
    7b50:	8015883a 	mov	r10,r16
    7b54:	1463883a 	add	r17,r2,r17
    7b58:	18bff404 	addi	r2,r3,-48
    7b5c:	30bff92e 	bgeu	r6,r2,7b44 <__alt_data_end+0xfffe7b44>
    7b60:	003e2506 	br	73f8 <__alt_data_end+0xfffe73f8>
    7b64:	21003fcc 	andi	r4,r4,255
    7b68:	2002d41e 	bne	r4,zero,86bc <___vfiprintf_internal_r+0x1444>
    7b6c:	a5000414 	ori	r20,r20,16
    7b70:	a080080c 	andi	r2,r20,32
    7b74:	103fb51e 	bne	r2,zero,7a4c <__alt_data_end+0xfffe7a4c>
    7b78:	a080040c 	andi	r2,r20,16
    7b7c:	1001f826 	beq	r2,zero,8360 <___vfiprintf_internal_r+0x10e8>
    7b80:	da802217 	ldw	r10,136(sp)
    7b84:	54800017 	ldw	r18,0(r10)
    7b88:	52800104 	addi	r10,r10,4
    7b8c:	da802215 	stw	r10,136(sp)
    7b90:	9027d7fa 	srai	r19,r18,31
    7b94:	9805883a 	mov	r2,r19
    7b98:	003fb206 	br	7a64 <__alt_data_end+0xfffe7a64>
    7b9c:	21003fcc 	andi	r4,r4,255
    7ba0:	2002c41e 	bne	r4,zero,86b4 <___vfiprintf_internal_r+0x143c>
    7ba4:	a5000414 	ori	r20,r20,16
    7ba8:	a080080c 	andi	r2,r20,32
    7bac:	103f5f1e 	bne	r2,zero,792c <__alt_data_end+0xfffe792c>
    7bb0:	a080040c 	andi	r2,r20,16
    7bb4:	10020f26 	beq	r2,zero,83f4 <___vfiprintf_internal_r+0x117c>
    7bb8:	da802217 	ldw	r10,136(sp)
    7bbc:	d8001d85 	stb	zero,118(sp)
    7bc0:	0027883a 	mov	r19,zero
    7bc4:	50800104 	addi	r2,r10,4
    7bc8:	54800017 	ldw	r18,0(r10)
    7bcc:	48021116 	blt	r9,zero,8414 <___vfiprintf_internal_r+0x119c>
    7bd0:	00ffdfc4 	movi	r3,-129
    7bd4:	d8802215 	stw	r2,136(sp)
    7bd8:	a0e8703a 	and	r20,r20,r3
    7bdc:	903f5e1e 	bne	r18,zero,7958 <__alt_data_end+0xfffe7958>
    7be0:	0039883a 	mov	fp,zero
    7be4:	4802a626 	beq	r9,zero,8680 <___vfiprintf_internal_r+0x1408>
    7be8:	0025883a 	mov	r18,zero
    7bec:	0027883a 	mov	r19,zero
    7bf0:	003f5a06 	br	795c <__alt_data_end+0xfffe795c>
    7bf4:	21003fcc 	andi	r4,r4,255
    7bf8:	20029f1e 	bne	r4,zero,8678 <___vfiprintf_internal_r+0x1400>
    7bfc:	a5000414 	ori	r20,r20,16
    7c00:	a080080c 	andi	r2,r20,32
    7c04:	10005e1e 	bne	r2,zero,7d80 <___vfiprintf_internal_r+0xb08>
    7c08:	a080040c 	andi	r2,r20,16
    7c0c:	1001a21e 	bne	r2,zero,8298 <___vfiprintf_internal_r+0x1020>
    7c10:	a080100c 	andi	r2,r20,64
    7c14:	d8001d85 	stb	zero,118(sp)
    7c18:	da802217 	ldw	r10,136(sp)
    7c1c:	1002231e 	bne	r2,zero,84ac <___vfiprintf_internal_r+0x1234>
    7c20:	50800104 	addi	r2,r10,4
    7c24:	54800017 	ldw	r18,0(r10)
    7c28:	0027883a 	mov	r19,zero
    7c2c:	4801a00e 	bge	r9,zero,82b0 <___vfiprintf_internal_r+0x1038>
    7c30:	d8802215 	stw	r2,136(sp)
    7c34:	0039883a 	mov	fp,zero
    7c38:	94c4b03a 	or	r2,r18,r19
    7c3c:	103f901e 	bne	r2,zero,7a80 <__alt_data_end+0xfffe7a80>
    7c40:	00800044 	movi	r2,1
    7c44:	10803fcc 	andi	r2,r2,255
    7c48:	00c00044 	movi	r3,1
    7c4c:	10c05926 	beq	r2,r3,7db4 <___vfiprintf_internal_r+0xb3c>
    7c50:	00c00084 	movi	r3,2
    7c54:	10ffe41e 	bne	r2,r3,7be8 <__alt_data_end+0xfffe7be8>
    7c58:	0025883a 	mov	r18,zero
    7c5c:	0027883a 	mov	r19,zero
    7c60:	00013d06 	br	8158 <___vfiprintf_internal_r+0xee0>
    7c64:	21003fcc 	andi	r4,r4,255
    7c68:	2002811e 	bne	r4,zero,8670 <___vfiprintf_internal_r+0x13f8>
    7c6c:	00800074 	movhi	r2,1
    7c70:	10bd3c04 	addi	r2,r2,-2832
    7c74:	d8802615 	stw	r2,152(sp)
    7c78:	a080080c 	andi	r2,r20,32
    7c7c:	103f561e 	bne	r2,zero,79d8 <__alt_data_end+0xfffe79d8>
    7c80:	a080040c 	andi	r2,r20,16
    7c84:	1001d126 	beq	r2,zero,83cc <___vfiprintf_internal_r+0x1154>
    7c88:	da802217 	ldw	r10,136(sp)
    7c8c:	0027883a 	mov	r19,zero
    7c90:	54800017 	ldw	r18,0(r10)
    7c94:	52800104 	addi	r10,r10,4
    7c98:	da802215 	stw	r10,136(sp)
    7c9c:	003f5306 	br	79ec <__alt_data_end+0xfffe79ec>
    7ca0:	da802217 	ldw	r10,136(sp)
    7ca4:	d8001d85 	stb	zero,118(sp)
    7ca8:	55400017 	ldw	r21,0(r10)
    7cac:	50c00104 	addi	r3,r10,4
    7cb0:	a8024226 	beq	r21,zero,85bc <___vfiprintf_internal_r+0x1344>
    7cb4:	48021816 	blt	r9,zero,8518 <___vfiprintf_internal_r+0x12a0>
    7cb8:	480d883a 	mov	r6,r9
    7cbc:	000b883a 	mov	r5,zero
    7cc0:	a809883a 	mov	r4,r21
    7cc4:	d8c02a15 	stw	r3,168(sp)
    7cc8:	da002b15 	stw	r8,172(sp)
    7ccc:	da402c15 	stw	r9,176(sp)
    7cd0:	0005a9c0 	call	5a9c <memchr>
    7cd4:	d8c02a17 	ldw	r3,168(sp)
    7cd8:	da002b17 	ldw	r8,172(sp)
    7cdc:	da402c17 	ldw	r9,176(sp)
    7ce0:	10024826 	beq	r2,zero,8604 <___vfiprintf_internal_r+0x138c>
    7ce4:	1567c83a 	sub	r19,r2,r21
    7ce8:	df001d83 	ldbu	fp,118(sp)
    7cec:	d8c02215 	stw	r3,136(sp)
    7cf0:	0013883a 	mov	r9,zero
    7cf4:	003e6006 	br	7678 <__alt_data_end+0xfffe7678>
    7cf8:	21003fcc 	andi	r4,r4,255
    7cfc:	203fc026 	beq	r4,zero,7c00 <__alt_data_end+0xfffe7c00>
    7d00:	d9c01d85 	stb	r7,118(sp)
    7d04:	003fbe06 	br	7c00 <__alt_data_end+0xfffe7c00>
    7d08:	da802217 	ldw	r10,136(sp)
    7d0c:	54400017 	ldw	r17,0(r10)
    7d10:	50800104 	addi	r2,r10,4
    7d14:	883e3b16 	blt	r17,zero,7604 <__alt_data_end+0xfffe7604>
    7d18:	d8802215 	stw	r2,136(sp)
    7d1c:	80c00007 	ldb	r3,0(r16)
    7d20:	003db406 	br	73f4 <__alt_data_end+0xfffe73f4>
    7d24:	01000044 	movi	r4,1
    7d28:	01c00ac4 	movi	r7,43
    7d2c:	80c00007 	ldb	r3,0(r16)
    7d30:	003db006 	br	73f4 <__alt_data_end+0xfffe73f4>
    7d34:	80c00007 	ldb	r3,0(r16)
    7d38:	82800044 	addi	r10,r16,1
    7d3c:	1b423c26 	beq	r3,r13,8630 <___vfiprintf_internal_r+0x13b8>
    7d40:	18bff404 	addi	r2,r3,-48
    7d44:	0013883a 	mov	r9,zero
    7d48:	30822b36 	bltu	r6,r2,85f8 <___vfiprintf_internal_r+0x1380>
    7d4c:	50c00007 	ldb	r3,0(r10)
    7d50:	4a4002a4 	muli	r9,r9,10
    7d54:	54000044 	addi	r16,r10,1
    7d58:	8015883a 	mov	r10,r16
    7d5c:	4893883a 	add	r9,r9,r2
    7d60:	18bff404 	addi	r2,r3,-48
    7d64:	30bff92e 	bgeu	r6,r2,7d4c <__alt_data_end+0xfffe7d4c>
    7d68:	483da30e 	bge	r9,zero,73f8 <__alt_data_end+0xfffe73f8>
    7d6c:	027fffc4 	movi	r9,-1
    7d70:	003da106 	br	73f8 <__alt_data_end+0xfffe73f8>
    7d74:	a5001014 	ori	r20,r20,64
    7d78:	80c00007 	ldb	r3,0(r16)
    7d7c:	003d9d06 	br	73f4 <__alt_data_end+0xfffe73f4>
    7d80:	da802217 	ldw	r10,136(sp)
    7d84:	d8001d85 	stb	zero,118(sp)
    7d88:	50c00204 	addi	r3,r10,8
    7d8c:	54800017 	ldw	r18,0(r10)
    7d90:	54c00117 	ldw	r19,4(r10)
    7d94:	4801ca16 	blt	r9,zero,84c0 <___vfiprintf_internal_r+0x1248>
    7d98:	013fdfc4 	movi	r4,-129
    7d9c:	94c4b03a 	or	r2,r18,r19
    7da0:	d8c02215 	stw	r3,136(sp)
    7da4:	a128703a 	and	r20,r20,r4
    7da8:	0039883a 	mov	fp,zero
    7dac:	103f341e 	bne	r2,zero,7a80 <__alt_data_end+0xfffe7a80>
    7db0:	483e2e26 	beq	r9,zero,766c <__alt_data_end+0xfffe766c>
    7db4:	0025883a 	mov	r18,zero
    7db8:	94800c04 	addi	r18,r18,48
    7dbc:	dc8019c5 	stb	r18,103(sp)
    7dc0:	dcc02717 	ldw	r19,156(sp)
    7dc4:	dd4019c4 	addi	r21,sp,103
    7dc8:	003e2b06 	br	7678 <__alt_data_end+0xfffe7678>
    7dcc:	21003fcc 	andi	r4,r4,255
    7dd0:	2002361e 	bne	r4,zero,86ac <___vfiprintf_internal_r+0x1434>
    7dd4:	1801c126 	beq	r3,zero,84dc <___vfiprintf_internal_r+0x1264>
    7dd8:	04800044 	movi	r18,1
    7ddc:	d8c01005 	stb	r3,64(sp)
    7de0:	d8001d85 	stb	zero,118(sp)
    7de4:	9027883a 	mov	r19,r18
    7de8:	dd401004 	addi	r21,sp,64
    7dec:	003f1106 	br	7a34 <__alt_data_end+0xfffe7a34>
    7df0:	d9402117 	ldw	r5,132(sp)
    7df4:	d9002017 	ldw	r4,128(sp)
    7df8:	d9801a04 	addi	r6,sp,104
    7dfc:	d9c02b15 	stw	r7,172(sp)
    7e00:	dbc02a15 	stw	r15,168(sp)
    7e04:	00071640 	call	7164 <__sprint_r.part.0>
    7e08:	d9c02b17 	ldw	r7,172(sp)
    7e0c:	dbc02a17 	ldw	r15,168(sp)
    7e10:	10006d1e 	bne	r2,zero,7fc8 <___vfiprintf_internal_r+0xd50>
    7e14:	d9801b17 	ldw	r6,108(sp)
    7e18:	d8801c17 	ldw	r2,112(sp)
    7e1c:	d811883a 	mov	r8,sp
    7e20:	31400044 	addi	r5,r6,1
    7e24:	003e3306 	br	76f4 <__alt_data_end+0xfffe76f4>
    7e28:	d9401b17 	ldw	r5,108(sp)
    7e2c:	d8801c17 	ldw	r2,112(sp)
    7e30:	29000044 	addi	r4,r5,1
    7e34:	d8c01d87 	ldb	r3,118(sp)
    7e38:	183e4d26 	beq	r3,zero,7770 <__alt_data_end+0xfffe7770>
    7e3c:	00c00044 	movi	r3,1
    7e40:	d9401d84 	addi	r5,sp,118
    7e44:	10c5883a 	add	r2,r2,r3
    7e48:	41400015 	stw	r5,0(r8)
    7e4c:	40c00115 	stw	r3,4(r8)
    7e50:	d8801c15 	stw	r2,112(sp)
    7e54:	d9001b15 	stw	r4,108(sp)
    7e58:	014001c4 	movi	r5,7
    7e5c:	2900a90e 	bge	r5,r4,8104 <___vfiprintf_internal_r+0xe8c>
    7e60:	1000da1e 	bne	r2,zero,81cc <___vfiprintf_internal_r+0xf54>
    7e64:	7000ab1e 	bne	r14,zero,8114 <___vfiprintf_internal_r+0xe9c>
    7e68:	000b883a 	mov	r5,zero
    7e6c:	1809883a 	mov	r4,r3
    7e70:	d811883a 	mov	r8,sp
    7e74:	00c02004 	movi	r3,128
    7e78:	e0fe4d26 	beq	fp,r3,77b0 <__alt_data_end+0xfffe77b0>
    7e7c:	4cf9c83a 	sub	fp,r9,r19
    7e80:	073e7b0e 	bge	zero,fp,7870 <__alt_data_end+0xfffe7870>
    7e84:	01c00404 	movi	r7,16
    7e88:	3f01900e 	bge	r7,fp,84cc <___vfiprintf_internal_r+0x1254>
    7e8c:	00c00074 	movhi	r3,1
    7e90:	18fda204 	addi	r3,r3,-2424
    7e94:	d8c02415 	stw	r3,144(sp)
    7e98:	034001c4 	movi	r13,7
    7e9c:	00000506 	br	7eb4 <___vfiprintf_internal_r+0xc3c>
    7ea0:	29000084 	addi	r4,r5,2
    7ea4:	42000204 	addi	r8,r8,8
    7ea8:	180b883a 	mov	r5,r3
    7eac:	e73ffc04 	addi	fp,fp,-16
    7eb0:	3f000d0e 	bge	r7,fp,7ee8 <___vfiprintf_internal_r+0xc70>
    7eb4:	10800404 	addi	r2,r2,16
    7eb8:	28c00044 	addi	r3,r5,1
    7ebc:	45c00015 	stw	r23,0(r8)
    7ec0:	41c00115 	stw	r7,4(r8)
    7ec4:	d8801c15 	stw	r2,112(sp)
    7ec8:	d8c01b15 	stw	r3,108(sp)
    7ecc:	68fff40e 	bge	r13,r3,7ea0 <__alt_data_end+0xfffe7ea0>
    7ed0:	1000101e 	bne	r2,zero,7f14 <___vfiprintf_internal_r+0xc9c>
    7ed4:	e73ffc04 	addi	fp,fp,-16
    7ed8:	01000044 	movi	r4,1
    7edc:	000b883a 	mov	r5,zero
    7ee0:	d811883a 	mov	r8,sp
    7ee4:	3f3ff316 	blt	r7,fp,7eb4 <__alt_data_end+0xfffe7eb4>
    7ee8:	da802417 	ldw	r10,144(sp)
    7eec:	1705883a 	add	r2,r2,fp
    7ef0:	47000115 	stw	fp,4(r8)
    7ef4:	42800015 	stw	r10,0(r8)
    7ef8:	d8801c15 	stw	r2,112(sp)
    7efc:	d9001b15 	stw	r4,108(sp)
    7f00:	00c001c4 	movi	r3,7
    7f04:	19003616 	blt	r3,r4,7fe0 <___vfiprintf_internal_r+0xd68>
    7f08:	42000204 	addi	r8,r8,8
    7f0c:	21000044 	addi	r4,r4,1
    7f10:	003e5706 	br	7870 <__alt_data_end+0xfffe7870>
    7f14:	d9402117 	ldw	r5,132(sp)
    7f18:	d9002017 	ldw	r4,128(sp)
    7f1c:	d9801a04 	addi	r6,sp,104
    7f20:	d9c02b15 	stw	r7,172(sp)
    7f24:	db402a15 	stw	r13,168(sp)
    7f28:	00071640 	call	7164 <__sprint_r.part.0>
    7f2c:	d9c02b17 	ldw	r7,172(sp)
    7f30:	db402a17 	ldw	r13,168(sp)
    7f34:	1000241e 	bne	r2,zero,7fc8 <___vfiprintf_internal_r+0xd50>
    7f38:	d9401b17 	ldw	r5,108(sp)
    7f3c:	d8801c17 	ldw	r2,112(sp)
    7f40:	d811883a 	mov	r8,sp
    7f44:	29000044 	addi	r4,r5,1
    7f48:	003fd806 	br	7eac <__alt_data_end+0xfffe7eac>
    7f4c:	d9401b17 	ldw	r5,108(sp)
    7f50:	00c00074 	movhi	r3,1
    7f54:	18fda604 	addi	r3,r3,-2408
    7f58:	d8c02415 	stw	r3,144(sp)
    7f5c:	29400044 	addi	r5,r5,1
    7f60:	d8c02417 	ldw	r3,144(sp)
    7f64:	14c5883a 	add	r2,r2,r19
    7f68:	44c00115 	stw	r19,4(r8)
    7f6c:	40c00015 	stw	r3,0(r8)
    7f70:	d8801c15 	stw	r2,112(sp)
    7f74:	d9401b15 	stw	r5,108(sp)
    7f78:	00c001c4 	movi	r3,7
    7f7c:	1940070e 	bge	r3,r5,7f9c <___vfiprintf_internal_r+0xd24>
    7f80:	103e4826 	beq	r2,zero,78a4 <__alt_data_end+0xfffe78a4>
    7f84:	d9402117 	ldw	r5,132(sp)
    7f88:	d9002017 	ldw	r4,128(sp)
    7f8c:	d9801a04 	addi	r6,sp,104
    7f90:	00071640 	call	7164 <__sprint_r.part.0>
    7f94:	10000c1e 	bne	r2,zero,7fc8 <___vfiprintf_internal_r+0xd50>
    7f98:	d8801c17 	ldw	r2,112(sp)
    7f9c:	8c80010e 	bge	r17,r18,7fa4 <___vfiprintf_internal_r+0xd2c>
    7fa0:	9023883a 	mov	r17,r18
    7fa4:	da802317 	ldw	r10,140(sp)
    7fa8:	5455883a 	add	r10,r10,r17
    7fac:	da802315 	stw	r10,140(sp)
    7fb0:	103e4126 	beq	r2,zero,78b8 <__alt_data_end+0xfffe78b8>
    7fb4:	d9402117 	ldw	r5,132(sp)
    7fb8:	d9002017 	ldw	r4,128(sp)
    7fbc:	d9801a04 	addi	r6,sp,104
    7fc0:	00071640 	call	7164 <__sprint_r.part.0>
    7fc4:	103e3c26 	beq	r2,zero,78b8 <__alt_data_end+0xfffe78b8>
    7fc8:	dd002117 	ldw	r20,132(sp)
    7fcc:	a080030b 	ldhu	r2,12(r20)
    7fd0:	1080100c 	andi	r2,r2,64
    7fd4:	1001231e 	bne	r2,zero,8464 <___vfiprintf_internal_r+0x11ec>
    7fd8:	d8802317 	ldw	r2,140(sp)
    7fdc:	003d7b06 	br	75cc <__alt_data_end+0xfffe75cc>
    7fe0:	1000991e 	bne	r2,zero,8248 <___vfiprintf_internal_r+0xfd0>
    7fe4:	00c00044 	movi	r3,1
    7fe8:	9805883a 	mov	r2,r19
    7fec:	dd400015 	stw	r21,0(sp)
    7ff0:	dcc00115 	stw	r19,4(sp)
    7ff4:	dcc01c15 	stw	r19,112(sp)
    7ff8:	d8c01b15 	stw	r3,108(sp)
    7ffc:	d811883a 	mov	r8,sp
    8000:	42000204 	addi	r8,r8,8
    8004:	a2c0010c 	andi	r11,r20,4
    8008:	583fe426 	beq	r11,zero,7f9c <__alt_data_end+0xfffe7f9c>
    800c:	8ca7c83a 	sub	r19,r17,r18
    8010:	04ffe20e 	bge	zero,r19,7f9c <__alt_data_end+0xfffe7f9c>
    8014:	01c00404 	movi	r7,16
    8018:	3cffcc0e 	bge	r7,r19,7f4c <__alt_data_end+0xfffe7f4c>
    801c:	02800074 	movhi	r10,1
    8020:	52bda604 	addi	r10,r10,-2408
    8024:	d9001b17 	ldw	r4,108(sp)
    8028:	da802415 	stw	r10,144(sp)
    802c:	382b883a 	mov	r21,r7
    8030:	050001c4 	movi	r20,7
    8034:	df002017 	ldw	fp,128(sp)
    8038:	00000506 	br	8050 <___vfiprintf_internal_r+0xdd8>
    803c:	21400084 	addi	r5,r4,2
    8040:	42000204 	addi	r8,r8,8
    8044:	1809883a 	mov	r4,r3
    8048:	9cfffc04 	addi	r19,r19,-16
    804c:	acffc40e 	bge	r21,r19,7f60 <__alt_data_end+0xfffe7f60>
    8050:	10800404 	addi	r2,r2,16
    8054:	20c00044 	addi	r3,r4,1
    8058:	45800015 	stw	r22,0(r8)
    805c:	45400115 	stw	r21,4(r8)
    8060:	d8801c15 	stw	r2,112(sp)
    8064:	d8c01b15 	stw	r3,108(sp)
    8068:	a0fff40e 	bge	r20,r3,803c <__alt_data_end+0xfffe803c>
    806c:	1000041e 	bne	r2,zero,8080 <___vfiprintf_internal_r+0xe08>
    8070:	01400044 	movi	r5,1
    8074:	0009883a 	mov	r4,zero
    8078:	d811883a 	mov	r8,sp
    807c:	003ff206 	br	8048 <__alt_data_end+0xfffe8048>
    8080:	d9402117 	ldw	r5,132(sp)
    8084:	d9801a04 	addi	r6,sp,104
    8088:	e009883a 	mov	r4,fp
    808c:	00071640 	call	7164 <__sprint_r.part.0>
    8090:	103fcd1e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    8094:	d9001b17 	ldw	r4,108(sp)
    8098:	d8801c17 	ldw	r2,112(sp)
    809c:	d811883a 	mov	r8,sp
    80a0:	21400044 	addi	r5,r4,1
    80a4:	003fe806 	br	8048 <__alt_data_end+0xfffe8048>
    80a8:	d9402117 	ldw	r5,132(sp)
    80ac:	d9002017 	ldw	r4,128(sp)
    80b0:	d9801a04 	addi	r6,sp,104
    80b4:	d9c02b15 	stw	r7,172(sp)
    80b8:	db402a15 	stw	r13,168(sp)
    80bc:	00071640 	call	7164 <__sprint_r.part.0>
    80c0:	d9c02b17 	ldw	r7,172(sp)
    80c4:	db402a17 	ldw	r13,168(sp)
    80c8:	103fbf1e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    80cc:	d9401b17 	ldw	r5,108(sp)
    80d0:	d8801c17 	ldw	r2,112(sp)
    80d4:	d811883a 	mov	r8,sp
    80d8:	29800044 	addi	r6,r5,1
    80dc:	003dc406 	br	77f0 <__alt_data_end+0xfffe77f0>
    80e0:	1000d21e 	bne	r2,zero,842c <___vfiprintf_internal_r+0x11b4>
    80e4:	d8c01d87 	ldb	r3,118(sp)
    80e8:	18009526 	beq	r3,zero,8340 <___vfiprintf_internal_r+0x10c8>
    80ec:	00800044 	movi	r2,1
    80f0:	d8c01d84 	addi	r3,sp,118
    80f4:	1009883a 	mov	r4,r2
    80f8:	d8c00015 	stw	r3,0(sp)
    80fc:	d8800115 	stw	r2,4(sp)
    8100:	d811883a 	mov	r8,sp
    8104:	200b883a 	mov	r5,r4
    8108:	42000204 	addi	r8,r8,8
    810c:	21000044 	addi	r4,r4,1
    8110:	003d9706 	br	7770 <__alt_data_end+0xfffe7770>
    8114:	d9001d04 	addi	r4,sp,116
    8118:	00800084 	movi	r2,2
    811c:	d9000015 	stw	r4,0(sp)
    8120:	d8800115 	stw	r2,4(sp)
    8124:	1809883a 	mov	r4,r3
    8128:	d811883a 	mov	r8,sp
    812c:	200b883a 	mov	r5,r4
    8130:	42000204 	addi	r8,r8,8
    8134:	21000044 	addi	r4,r4,1
    8138:	003f4e06 	br	7e74 <__alt_data_end+0xfffe7e74>
    813c:	d8001d85 	stb	zero,118(sp)
    8140:	48005016 	blt	r9,zero,8284 <___vfiprintf_internal_r+0x100c>
    8144:	00ffdfc4 	movi	r3,-129
    8148:	94c4b03a 	or	r2,r18,r19
    814c:	a0e8703a 	and	r20,r20,r3
    8150:	103d4426 	beq	r2,zero,7664 <__alt_data_end+0xfffe7664>
    8154:	0039883a 	mov	fp,zero
    8158:	d9002617 	ldw	r4,152(sp)
    815c:	dd401a04 	addi	r21,sp,104
    8160:	908003cc 	andi	r2,r18,15
    8164:	9806973a 	slli	r3,r19,28
    8168:	2085883a 	add	r2,r4,r2
    816c:	9024d13a 	srli	r18,r18,4
    8170:	10800003 	ldbu	r2,0(r2)
    8174:	9826d13a 	srli	r19,r19,4
    8178:	ad7fffc4 	addi	r21,r21,-1
    817c:	1ca4b03a 	or	r18,r3,r18
    8180:	a8800005 	stb	r2,0(r21)
    8184:	94c4b03a 	or	r2,r18,r19
    8188:	103ff51e 	bne	r2,zero,8160 <__alt_data_end+0xfffe8160>
    818c:	003e5906 	br	7af4 <__alt_data_end+0xfffe7af4>
    8190:	d9402117 	ldw	r5,132(sp)
    8194:	d9002017 	ldw	r4,128(sp)
    8198:	d9801a04 	addi	r6,sp,104
    819c:	00071640 	call	7164 <__sprint_r.part.0>
    81a0:	103f891e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    81a4:	d8801c17 	ldw	r2,112(sp)
    81a8:	d811883a 	mov	r8,sp
    81ac:	003f9506 	br	8004 <__alt_data_end+0xfffe8004>
    81b0:	d9402117 	ldw	r5,132(sp)
    81b4:	d9002017 	ldw	r4,128(sp)
    81b8:	d9801a04 	addi	r6,sp,104
    81bc:	00071640 	call	7164 <__sprint_r.part.0>
    81c0:	103f811e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    81c4:	d811883a 	mov	r8,sp
    81c8:	003ced06 	br	7580 <__alt_data_end+0xfffe7580>
    81cc:	d9402117 	ldw	r5,132(sp)
    81d0:	d9002017 	ldw	r4,128(sp)
    81d4:	d9801a04 	addi	r6,sp,104
    81d8:	da402c15 	stw	r9,176(sp)
    81dc:	db802a15 	stw	r14,168(sp)
    81e0:	00071640 	call	7164 <__sprint_r.part.0>
    81e4:	da402c17 	ldw	r9,176(sp)
    81e8:	db802a17 	ldw	r14,168(sp)
    81ec:	103f761e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    81f0:	d9401b17 	ldw	r5,108(sp)
    81f4:	d8801c17 	ldw	r2,112(sp)
    81f8:	d811883a 	mov	r8,sp
    81fc:	29000044 	addi	r4,r5,1
    8200:	003d5b06 	br	7770 <__alt_data_end+0xfffe7770>
    8204:	d9402117 	ldw	r5,132(sp)
    8208:	d9002017 	ldw	r4,128(sp)
    820c:	d9801a04 	addi	r6,sp,104
    8210:	da402c15 	stw	r9,176(sp)
    8214:	00071640 	call	7164 <__sprint_r.part.0>
    8218:	da402c17 	ldw	r9,176(sp)
    821c:	103f6a1e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    8220:	d9401b17 	ldw	r5,108(sp)
    8224:	d8801c17 	ldw	r2,112(sp)
    8228:	d811883a 	mov	r8,sp
    822c:	29000044 	addi	r4,r5,1
    8230:	003f1006 	br	7e74 <__alt_data_end+0xfffe7e74>
    8234:	1000c31e 	bne	r2,zero,8544 <___vfiprintf_internal_r+0x12cc>
    8238:	01000044 	movi	r4,1
    823c:	000b883a 	mov	r5,zero
    8240:	d811883a 	mov	r8,sp
    8244:	003f0d06 	br	7e7c <__alt_data_end+0xfffe7e7c>
    8248:	d9402117 	ldw	r5,132(sp)
    824c:	d9002017 	ldw	r4,128(sp)
    8250:	d9801a04 	addi	r6,sp,104
    8254:	00071640 	call	7164 <__sprint_r.part.0>
    8258:	103f5b1e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    825c:	d9001b17 	ldw	r4,108(sp)
    8260:	d8801c17 	ldw	r2,112(sp)
    8264:	d811883a 	mov	r8,sp
    8268:	21000044 	addi	r4,r4,1
    826c:	003d8006 	br	7870 <__alt_data_end+0xfffe7870>
    8270:	01000074 	movhi	r4,1
    8274:	213d4104 	addi	r4,r4,-2812
    8278:	d9002615 	stw	r4,152(sp)
    827c:	d8c02215 	stw	r3,136(sp)
    8280:	1029883a 	mov	r20,r2
    8284:	94c4b03a 	or	r2,r18,r19
    8288:	103fb21e 	bne	r2,zero,8154 <__alt_data_end+0xfffe8154>
    828c:	0039883a 	mov	fp,zero
    8290:	00800084 	movi	r2,2
    8294:	003e6b06 	br	7c44 <__alt_data_end+0xfffe7c44>
    8298:	da802217 	ldw	r10,136(sp)
    829c:	d8001d85 	stb	zero,118(sp)
    82a0:	0027883a 	mov	r19,zero
    82a4:	50800104 	addi	r2,r10,4
    82a8:	54800017 	ldw	r18,0(r10)
    82ac:	483e6016 	blt	r9,zero,7c30 <__alt_data_end+0xfffe7c30>
    82b0:	00ffdfc4 	movi	r3,-129
    82b4:	d8802215 	stw	r2,136(sp)
    82b8:	a0e8703a 	and	r20,r20,r3
    82bc:	0039883a 	mov	fp,zero
    82c0:	903ebb26 	beq	r18,zero,7db0 <__alt_data_end+0xfffe7db0>
    82c4:	00800244 	movi	r2,9
    82c8:	14bdee36 	bltu	r2,r18,7a84 <__alt_data_end+0xfffe7a84>
    82cc:	003eba06 	br	7db8 <__alt_data_end+0xfffe7db8>
    82d0:	00800c04 	movi	r2,48
    82d4:	d8c01d45 	stb	r3,117(sp)
    82d8:	d8801d05 	stb	r2,116(sp)
    82dc:	d8001d85 	stb	zero,118(sp)
    82e0:	a0c00094 	ori	r3,r20,2
    82e4:	4800a916 	blt	r9,zero,858c <___vfiprintf_internal_r+0x1314>
    82e8:	00bfdfc4 	movi	r2,-129
    82ec:	a096703a 	and	r11,r20,r2
    82f0:	5d000094 	ori	r20,r11,2
    82f4:	0039883a 	mov	fp,zero
    82f8:	003f9706 	br	8158 <__alt_data_end+0xfffe8158>
    82fc:	8025883a 	mov	r18,r16
    8300:	003c2e06 	br	73bc <__alt_data_end+0xfffe73bc>
    8304:	00800074 	movhi	r2,1
    8308:	10bd4104 	addi	r2,r2,-2812
    830c:	0039883a 	mov	fp,zero
    8310:	d8802615 	stw	r2,152(sp)
    8314:	003f9006 	br	8158 <__alt_data_end+0xfffe8158>
    8318:	04a5c83a 	sub	r18,zero,r18
    831c:	07000b44 	movi	fp,45
    8320:	9004c03a 	cmpne	r2,r18,zero
    8324:	04e7c83a 	sub	r19,zero,r19
    8328:	df001d85 	stb	fp,118(sp)
    832c:	98a7c83a 	sub	r19,r19,r2
    8330:	48009f16 	blt	r9,zero,85b0 <___vfiprintf_internal_r+0x1338>
    8334:	00bfdfc4 	movi	r2,-129
    8338:	a0a8703a 	and	r20,r20,r2
    833c:	003dd006 	br	7a80 <__alt_data_end+0xfffe7a80>
    8340:	70004c26 	beq	r14,zero,8474 <___vfiprintf_internal_r+0x11fc>
    8344:	00800084 	movi	r2,2
    8348:	d8c01d04 	addi	r3,sp,116
    834c:	d8c00015 	stw	r3,0(sp)
    8350:	d8800115 	stw	r2,4(sp)
    8354:	01000044 	movi	r4,1
    8358:	d811883a 	mov	r8,sp
    835c:	003f7306 	br	812c <__alt_data_end+0xfffe812c>
    8360:	a080100c 	andi	r2,r20,64
    8364:	da802217 	ldw	r10,136(sp)
    8368:	103e0626 	beq	r2,zero,7b84 <__alt_data_end+0xfffe7b84>
    836c:	5480000f 	ldh	r18,0(r10)
    8370:	52800104 	addi	r10,r10,4
    8374:	da802215 	stw	r10,136(sp)
    8378:	9027d7fa 	srai	r19,r18,31
    837c:	9805883a 	mov	r2,r19
    8380:	003db806 	br	7a64 <__alt_data_end+0xfffe7a64>
    8384:	a080040c 	andi	r2,r20,16
    8388:	1000091e 	bne	r2,zero,83b0 <___vfiprintf_internal_r+0x1138>
    838c:	a2c0100c 	andi	r11,r20,64
    8390:	58000726 	beq	r11,zero,83b0 <___vfiprintf_internal_r+0x1138>
    8394:	da802217 	ldw	r10,136(sp)
    8398:	50800017 	ldw	r2,0(r10)
    839c:	52800104 	addi	r10,r10,4
    83a0:	da802215 	stw	r10,136(sp)
    83a4:	da802317 	ldw	r10,140(sp)
    83a8:	1280000d 	sth	r10,0(r2)
    83ac:	003be706 	br	734c <__alt_data_end+0xfffe734c>
    83b0:	da802217 	ldw	r10,136(sp)
    83b4:	50800017 	ldw	r2,0(r10)
    83b8:	52800104 	addi	r10,r10,4
    83bc:	da802215 	stw	r10,136(sp)
    83c0:	da802317 	ldw	r10,140(sp)
    83c4:	12800015 	stw	r10,0(r2)
    83c8:	003be006 	br	734c <__alt_data_end+0xfffe734c>
    83cc:	a080100c 	andi	r2,r20,64
    83d0:	da802217 	ldw	r10,136(sp)
    83d4:	10003026 	beq	r2,zero,8498 <___vfiprintf_internal_r+0x1220>
    83d8:	5480000b 	ldhu	r18,0(r10)
    83dc:	52800104 	addi	r10,r10,4
    83e0:	0027883a 	mov	r19,zero
    83e4:	da802215 	stw	r10,136(sp)
    83e8:	003d8006 	br	79ec <__alt_data_end+0xfffe79ec>
    83ec:	80c00007 	ldb	r3,0(r16)
    83f0:	003c0006 	br	73f4 <__alt_data_end+0xfffe73f4>
    83f4:	a080100c 	andi	r2,r20,64
    83f8:	d8001d85 	stb	zero,118(sp)
    83fc:	da802217 	ldw	r10,136(sp)
    8400:	1000201e 	bne	r2,zero,8484 <___vfiprintf_internal_r+0x120c>
    8404:	50800104 	addi	r2,r10,4
    8408:	54800017 	ldw	r18,0(r10)
    840c:	0027883a 	mov	r19,zero
    8410:	483def0e 	bge	r9,zero,7bd0 <__alt_data_end+0xfffe7bd0>
    8414:	94c6b03a 	or	r3,r18,r19
    8418:	d8802215 	stw	r2,136(sp)
    841c:	183d4e1e 	bne	r3,zero,7958 <__alt_data_end+0xfffe7958>
    8420:	0039883a 	mov	fp,zero
    8424:	0005883a 	mov	r2,zero
    8428:	003e0606 	br	7c44 <__alt_data_end+0xfffe7c44>
    842c:	d9402117 	ldw	r5,132(sp)
    8430:	d9002017 	ldw	r4,128(sp)
    8434:	d9801a04 	addi	r6,sp,104
    8438:	da402c15 	stw	r9,176(sp)
    843c:	db802a15 	stw	r14,168(sp)
    8440:	00071640 	call	7164 <__sprint_r.part.0>
    8444:	da402c17 	ldw	r9,176(sp)
    8448:	db802a17 	ldw	r14,168(sp)
    844c:	103ede1e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    8450:	d9401b17 	ldw	r5,108(sp)
    8454:	d8801c17 	ldw	r2,112(sp)
    8458:	d811883a 	mov	r8,sp
    845c:	29000044 	addi	r4,r5,1
    8460:	003e7406 	br	7e34 <__alt_data_end+0xfffe7e34>
    8464:	00bfffc4 	movi	r2,-1
    8468:	003c5806 	br	75cc <__alt_data_end+0xfffe75cc>
    846c:	d811883a 	mov	r8,sp
    8470:	003ee806 	br	8014 <__alt_data_end+0xfffe8014>
    8474:	000b883a 	mov	r5,zero
    8478:	01000044 	movi	r4,1
    847c:	d811883a 	mov	r8,sp
    8480:	003e7c06 	br	7e74 <__alt_data_end+0xfffe7e74>
    8484:	50800104 	addi	r2,r10,4
    8488:	5480000b 	ldhu	r18,0(r10)
    848c:	0027883a 	mov	r19,zero
    8490:	483dcf0e 	bge	r9,zero,7bd0 <__alt_data_end+0xfffe7bd0>
    8494:	003fdf06 	br	8414 <__alt_data_end+0xfffe8414>
    8498:	54800017 	ldw	r18,0(r10)
    849c:	52800104 	addi	r10,r10,4
    84a0:	0027883a 	mov	r19,zero
    84a4:	da802215 	stw	r10,136(sp)
    84a8:	003d5006 	br	79ec <__alt_data_end+0xfffe79ec>
    84ac:	50800104 	addi	r2,r10,4
    84b0:	5480000b 	ldhu	r18,0(r10)
    84b4:	0027883a 	mov	r19,zero
    84b8:	483f7d0e 	bge	r9,zero,82b0 <__alt_data_end+0xfffe82b0>
    84bc:	003ddc06 	br	7c30 <__alt_data_end+0xfffe7c30>
    84c0:	d8c02215 	stw	r3,136(sp)
    84c4:	0039883a 	mov	fp,zero
    84c8:	003ddb06 	br	7c38 <__alt_data_end+0xfffe7c38>
    84cc:	02800074 	movhi	r10,1
    84d0:	52bda204 	addi	r10,r10,-2424
    84d4:	da802415 	stw	r10,144(sp)
    84d8:	003e8306 	br	7ee8 <__alt_data_end+0xfffe7ee8>
    84dc:	d8801c17 	ldw	r2,112(sp)
    84e0:	dd002117 	ldw	r20,132(sp)
    84e4:	103eb926 	beq	r2,zero,7fcc <__alt_data_end+0xfffe7fcc>
    84e8:	d9002017 	ldw	r4,128(sp)
    84ec:	d9801a04 	addi	r6,sp,104
    84f0:	a00b883a 	mov	r5,r20
    84f4:	00071640 	call	7164 <__sprint_r.part.0>
    84f8:	003eb406 	br	7fcc <__alt_data_end+0xfffe7fcc>
    84fc:	80c00043 	ldbu	r3,1(r16)
    8500:	a5000814 	ori	r20,r20,32
    8504:	84000044 	addi	r16,r16,1
    8508:	18c03fcc 	andi	r3,r3,255
    850c:	18c0201c 	xori	r3,r3,128
    8510:	18ffe004 	addi	r3,r3,-128
    8514:	003bb706 	br	73f4 <__alt_data_end+0xfffe73f4>
    8518:	a809883a 	mov	r4,r21
    851c:	d8c02a15 	stw	r3,168(sp)
    8520:	da002b15 	stw	r8,172(sp)
    8524:	00070cc0 	call	70cc <strlen>
    8528:	d8c02a17 	ldw	r3,168(sp)
    852c:	1027883a 	mov	r19,r2
    8530:	df001d83 	ldbu	fp,118(sp)
    8534:	d8c02215 	stw	r3,136(sp)
    8538:	0013883a 	mov	r9,zero
    853c:	da002b17 	ldw	r8,172(sp)
    8540:	003c4d06 	br	7678 <__alt_data_end+0xfffe7678>
    8544:	d9402117 	ldw	r5,132(sp)
    8548:	d9002017 	ldw	r4,128(sp)
    854c:	d9801a04 	addi	r6,sp,104
    8550:	da402c15 	stw	r9,176(sp)
    8554:	00071640 	call	7164 <__sprint_r.part.0>
    8558:	da402c17 	ldw	r9,176(sp)
    855c:	103e9a1e 	bne	r2,zero,7fc8 <__alt_data_end+0xfffe7fc8>
    8560:	d9401b17 	ldw	r5,108(sp)
    8564:	d8801c17 	ldw	r2,112(sp)
    8568:	d811883a 	mov	r8,sp
    856c:	29000044 	addi	r4,r5,1
    8570:	003e4206 	br	7e7c <__alt_data_end+0xfffe7e7c>
    8574:	d9401b17 	ldw	r5,108(sp)
    8578:	01000074 	movhi	r4,1
    857c:	213da604 	addi	r4,r4,-2408
    8580:	d9002415 	stw	r4,144(sp)
    8584:	29400044 	addi	r5,r5,1
    8588:	003c6d06 	br	7740 <__alt_data_end+0xfffe7740>
    858c:	0039883a 	mov	fp,zero
    8590:	00800084 	movi	r2,2
    8594:	10803fcc 	andi	r2,r2,255
    8598:	01000044 	movi	r4,1
    859c:	11001e26 	beq	r2,r4,8618 <___vfiprintf_internal_r+0x13a0>
    85a0:	01000084 	movi	r4,2
    85a4:	11001e1e 	bne	r2,r4,8620 <___vfiprintf_internal_r+0x13a8>
    85a8:	1829883a 	mov	r20,r3
    85ac:	003eea06 	br	8158 <__alt_data_end+0xfffe8158>
    85b0:	a007883a 	mov	r3,r20
    85b4:	00800044 	movi	r2,1
    85b8:	003ff606 	br	8594 <__alt_data_end+0xfffe8594>
    85bc:	00800184 	movi	r2,6
    85c0:	1240012e 	bgeu	r2,r9,85c8 <___vfiprintf_internal_r+0x1350>
    85c4:	1013883a 	mov	r9,r2
    85c8:	4827883a 	mov	r19,r9
    85cc:	4825883a 	mov	r18,r9
    85d0:	48001516 	blt	r9,zero,8628 <___vfiprintf_internal_r+0x13b0>
    85d4:	05400074 	movhi	r21,1
    85d8:	d8c02215 	stw	r3,136(sp)
    85dc:	ad7d4604 	addi	r21,r21,-2792
    85e0:	003d1406 	br	7a34 <__alt_data_end+0xfffe7a34>
    85e4:	02800074 	movhi	r10,1
    85e8:	52bda204 	addi	r10,r10,-2424
    85ec:	da802415 	stw	r10,144(sp)
    85f0:	200d883a 	mov	r6,r4
    85f4:	003c9106 	br	783c <__alt_data_end+0xfffe783c>
    85f8:	5021883a 	mov	r16,r10
    85fc:	0013883a 	mov	r9,zero
    8600:	003b7d06 	br	73f8 <__alt_data_end+0xfffe73f8>
    8604:	4827883a 	mov	r19,r9
    8608:	df001d83 	ldbu	fp,118(sp)
    860c:	d8c02215 	stw	r3,136(sp)
    8610:	0013883a 	mov	r9,zero
    8614:	003c1806 	br	7678 <__alt_data_end+0xfffe7678>
    8618:	1829883a 	mov	r20,r3
    861c:	003d1806 	br	7a80 <__alt_data_end+0xfffe7a80>
    8620:	1829883a 	mov	r20,r3
    8624:	003ccd06 	br	795c <__alt_data_end+0xfffe795c>
    8628:	0025883a 	mov	r18,zero
    862c:	003fe906 	br	85d4 <__alt_data_end+0xfffe85d4>
    8630:	d8802217 	ldw	r2,136(sp)
    8634:	80c00043 	ldbu	r3,1(r16)
    8638:	5021883a 	mov	r16,r10
    863c:	12400017 	ldw	r9,0(r2)
    8640:	10800104 	addi	r2,r2,4
    8644:	d8802215 	stw	r2,136(sp)
    8648:	483faf0e 	bge	r9,zero,8508 <__alt_data_end+0xfffe8508>
    864c:	18c03fcc 	andi	r3,r3,255
    8650:	18c0201c 	xori	r3,r3,128
    8654:	027fffc4 	movi	r9,-1
    8658:	18ffe004 	addi	r3,r3,-128
    865c:	003b6506 	br	73f4 <__alt_data_end+0xfffe73f4>
    8660:	d9c01d85 	stb	r7,118(sp)
    8664:	003ca006 	br	78e8 <__alt_data_end+0xfffe78e8>
    8668:	d9c01d85 	stb	r7,118(sp)
    866c:	003cad06 	br	7924 <__alt_data_end+0xfffe7924>
    8670:	d9c01d85 	stb	r7,118(sp)
    8674:	003d7d06 	br	7c6c <__alt_data_end+0xfffe7c6c>
    8678:	d9c01d85 	stb	r7,118(sp)
    867c:	003d5f06 	br	7bfc <__alt_data_end+0xfffe7bfc>
    8680:	a080004c 	andi	r2,r20,1
    8684:	0039883a 	mov	fp,zero
    8688:	10000526 	beq	r2,zero,86a0 <___vfiprintf_internal_r+0x1428>
    868c:	00800c04 	movi	r2,48
    8690:	d88019c5 	stb	r2,103(sp)
    8694:	dcc02717 	ldw	r19,156(sp)
    8698:	dd4019c4 	addi	r21,sp,103
    869c:	003bf606 	br	7678 <__alt_data_end+0xfffe7678>
    86a0:	0027883a 	mov	r19,zero
    86a4:	dd401a04 	addi	r21,sp,104
    86a8:	003bf306 	br	7678 <__alt_data_end+0xfffe7678>
    86ac:	d9c01d85 	stb	r7,118(sp)
    86b0:	003dc806 	br	7dd4 <__alt_data_end+0xfffe7dd4>
    86b4:	d9c01d85 	stb	r7,118(sp)
    86b8:	003d3a06 	br	7ba4 <__alt_data_end+0xfffe7ba4>
    86bc:	d9c01d85 	stb	r7,118(sp)
    86c0:	003d2a06 	br	7b6c <__alt_data_end+0xfffe7b6c>
    86c4:	d9c01d85 	stb	r7,118(sp)
    86c8:	003cde06 	br	7a44 <__alt_data_end+0xfffe7a44>
    86cc:	d9c01d85 	stb	r7,118(sp)
    86d0:	003cbc06 	br	79c4 <__alt_data_end+0xfffe79c4>

000086d4 <__vfiprintf_internal>:
    86d4:	00800074 	movhi	r2,1
    86d8:	1084a304 	addi	r2,r2,4748
    86dc:	300f883a 	mov	r7,r6
    86e0:	280d883a 	mov	r6,r5
    86e4:	200b883a 	mov	r5,r4
    86e8:	11000017 	ldw	r4,0(r2)
    86ec:	00072781 	jmpi	7278 <___vfiprintf_internal_r>

000086f0 <__sbprintf>:
    86f0:	2880030b 	ldhu	r2,12(r5)
    86f4:	2ac01917 	ldw	r11,100(r5)
    86f8:	2a80038b 	ldhu	r10,14(r5)
    86fc:	2a400717 	ldw	r9,28(r5)
    8700:	2a000917 	ldw	r8,36(r5)
    8704:	defee204 	addi	sp,sp,-1144
    8708:	00c10004 	movi	r3,1024
    870c:	dc011a15 	stw	r16,1128(sp)
    8710:	10bfff4c 	andi	r2,r2,65533
    8714:	2821883a 	mov	r16,r5
    8718:	d8cb883a 	add	r5,sp,r3
    871c:	dc811c15 	stw	r18,1136(sp)
    8720:	dc411b15 	stw	r17,1132(sp)
    8724:	dfc11d15 	stw	ra,1140(sp)
    8728:	2025883a 	mov	r18,r4
    872c:	d881030d 	sth	r2,1036(sp)
    8730:	dac11915 	stw	r11,1124(sp)
    8734:	da81038d 	sth	r10,1038(sp)
    8738:	da410715 	stw	r9,1052(sp)
    873c:	da010915 	stw	r8,1060(sp)
    8740:	dec10015 	stw	sp,1024(sp)
    8744:	dec10415 	stw	sp,1040(sp)
    8748:	d8c10215 	stw	r3,1032(sp)
    874c:	d8c10515 	stw	r3,1044(sp)
    8750:	d8010615 	stw	zero,1048(sp)
    8754:	00072780 	call	7278 <___vfiprintf_internal_r>
    8758:	1023883a 	mov	r17,r2
    875c:	10000416 	blt	r2,zero,8770 <__sbprintf+0x80>
    8760:	d9410004 	addi	r5,sp,1024
    8764:	9009883a 	mov	r4,r18
    8768:	00046100 	call	4610 <_fflush_r>
    876c:	10000d1e 	bne	r2,zero,87a4 <__sbprintf+0xb4>
    8770:	d881030b 	ldhu	r2,1036(sp)
    8774:	1080100c 	andi	r2,r2,64
    8778:	10000326 	beq	r2,zero,8788 <__sbprintf+0x98>
    877c:	8080030b 	ldhu	r2,12(r16)
    8780:	10801014 	ori	r2,r2,64
    8784:	8080030d 	sth	r2,12(r16)
    8788:	8805883a 	mov	r2,r17
    878c:	dfc11d17 	ldw	ra,1140(sp)
    8790:	dc811c17 	ldw	r18,1136(sp)
    8794:	dc411b17 	ldw	r17,1132(sp)
    8798:	dc011a17 	ldw	r16,1128(sp)
    879c:	dec11e04 	addi	sp,sp,1144
    87a0:	f800283a 	ret
    87a4:	047fffc4 	movi	r17,-1
    87a8:	003ff106 	br	8770 <__alt_data_end+0xfffe8770>

000087ac <_write_r>:
    87ac:	defffd04 	addi	sp,sp,-12
    87b0:	2805883a 	mov	r2,r5
    87b4:	dc000015 	stw	r16,0(sp)
    87b8:	04000074 	movhi	r16,1
    87bc:	dc400115 	stw	r17,4(sp)
    87c0:	300b883a 	mov	r5,r6
    87c4:	840b7304 	addi	r16,r16,11724
    87c8:	2023883a 	mov	r17,r4
    87cc:	380d883a 	mov	r6,r7
    87d0:	1009883a 	mov	r4,r2
    87d4:	dfc00215 	stw	ra,8(sp)
    87d8:	80000015 	stw	zero,0(r16)
    87dc:	000d5c00 	call	d5c0 <write>
    87e0:	00ffffc4 	movi	r3,-1
    87e4:	10c00526 	beq	r2,r3,87fc <_write_r+0x50>
    87e8:	dfc00217 	ldw	ra,8(sp)
    87ec:	dc400117 	ldw	r17,4(sp)
    87f0:	dc000017 	ldw	r16,0(sp)
    87f4:	dec00304 	addi	sp,sp,12
    87f8:	f800283a 	ret
    87fc:	80c00017 	ldw	r3,0(r16)
    8800:	183ff926 	beq	r3,zero,87e8 <__alt_data_end+0xfffe87e8>
    8804:	88c00015 	stw	r3,0(r17)
    8808:	003ff706 	br	87e8 <__alt_data_end+0xfffe87e8>

0000880c <_close_r>:
    880c:	defffd04 	addi	sp,sp,-12
    8810:	dc000015 	stw	r16,0(sp)
    8814:	04000074 	movhi	r16,1
    8818:	dc400115 	stw	r17,4(sp)
    881c:	840b7304 	addi	r16,r16,11724
    8820:	2023883a 	mov	r17,r4
    8824:	2809883a 	mov	r4,r5
    8828:	dfc00215 	stw	ra,8(sp)
    882c:	80000015 	stw	zero,0(r16)
    8830:	000cdb00 	call	cdb0 <close>
    8834:	00ffffc4 	movi	r3,-1
    8838:	10c00526 	beq	r2,r3,8850 <_close_r+0x44>
    883c:	dfc00217 	ldw	ra,8(sp)
    8840:	dc400117 	ldw	r17,4(sp)
    8844:	dc000017 	ldw	r16,0(sp)
    8848:	dec00304 	addi	sp,sp,12
    884c:	f800283a 	ret
    8850:	80c00017 	ldw	r3,0(r16)
    8854:	183ff926 	beq	r3,zero,883c <__alt_data_end+0xfffe883c>
    8858:	88c00015 	stw	r3,0(r17)
    885c:	003ff706 	br	883c <__alt_data_end+0xfffe883c>

00008860 <_calloc_r>:
    8860:	298b383a 	mul	r5,r5,r6
    8864:	defffe04 	addi	sp,sp,-8
    8868:	dfc00115 	stw	ra,4(sp)
    886c:	dc000015 	stw	r16,0(sp)
    8870:	00052900 	call	5290 <_malloc_r>
    8874:	10002926 	beq	r2,zero,891c <_calloc_r+0xbc>
    8878:	11bfff17 	ldw	r6,-4(r2)
    887c:	1021883a 	mov	r16,r2
    8880:	00bfff04 	movi	r2,-4
    8884:	308c703a 	and	r6,r6,r2
    8888:	00c00904 	movi	r3,36
    888c:	308d883a 	add	r6,r6,r2
    8890:	19801636 	bltu	r3,r6,88ec <_calloc_r+0x8c>
    8894:	008004c4 	movi	r2,19
    8898:	11800b2e 	bgeu	r2,r6,88c8 <_calloc_r+0x68>
    889c:	80000015 	stw	zero,0(r16)
    88a0:	80000115 	stw	zero,4(r16)
    88a4:	008006c4 	movi	r2,27
    88a8:	11801a2e 	bgeu	r2,r6,8914 <_calloc_r+0xb4>
    88ac:	80000215 	stw	zero,8(r16)
    88b0:	80000315 	stw	zero,12(r16)
    88b4:	30c0151e 	bne	r6,r3,890c <_calloc_r+0xac>
    88b8:	80000415 	stw	zero,16(r16)
    88bc:	80800604 	addi	r2,r16,24
    88c0:	80000515 	stw	zero,20(r16)
    88c4:	00000106 	br	88cc <_calloc_r+0x6c>
    88c8:	8005883a 	mov	r2,r16
    88cc:	10000015 	stw	zero,0(r2)
    88d0:	10000115 	stw	zero,4(r2)
    88d4:	10000215 	stw	zero,8(r2)
    88d8:	8005883a 	mov	r2,r16
    88dc:	dfc00117 	ldw	ra,4(sp)
    88e0:	dc000017 	ldw	r16,0(sp)
    88e4:	dec00204 	addi	sp,sp,8
    88e8:	f800283a 	ret
    88ec:	000b883a 	mov	r5,zero
    88f0:	8009883a 	mov	r4,r16
    88f4:	0005cc80 	call	5cc8 <memset>
    88f8:	8005883a 	mov	r2,r16
    88fc:	dfc00117 	ldw	ra,4(sp)
    8900:	dc000017 	ldw	r16,0(sp)
    8904:	dec00204 	addi	sp,sp,8
    8908:	f800283a 	ret
    890c:	80800404 	addi	r2,r16,16
    8910:	003fee06 	br	88cc <__alt_data_end+0xfffe88cc>
    8914:	80800204 	addi	r2,r16,8
    8918:	003fec06 	br	88cc <__alt_data_end+0xfffe88cc>
    891c:	0005883a 	mov	r2,zero
    8920:	003fee06 	br	88dc <__alt_data_end+0xfffe88dc>

00008924 <_fclose_r>:
    8924:	28003926 	beq	r5,zero,8a0c <_fclose_r+0xe8>
    8928:	defffc04 	addi	sp,sp,-16
    892c:	dc400115 	stw	r17,4(sp)
    8930:	dc000015 	stw	r16,0(sp)
    8934:	dfc00315 	stw	ra,12(sp)
    8938:	dc800215 	stw	r18,8(sp)
    893c:	2023883a 	mov	r17,r4
    8940:	2821883a 	mov	r16,r5
    8944:	20000226 	beq	r4,zero,8950 <_fclose_r+0x2c>
    8948:	20800e17 	ldw	r2,56(r4)
    894c:	10002726 	beq	r2,zero,89ec <_fclose_r+0xc8>
    8950:	8080030f 	ldh	r2,12(r16)
    8954:	1000071e 	bne	r2,zero,8974 <_fclose_r+0x50>
    8958:	0005883a 	mov	r2,zero
    895c:	dfc00317 	ldw	ra,12(sp)
    8960:	dc800217 	ldw	r18,8(sp)
    8964:	dc400117 	ldw	r17,4(sp)
    8968:	dc000017 	ldw	r16,0(sp)
    896c:	dec00404 	addi	sp,sp,16
    8970:	f800283a 	ret
    8974:	800b883a 	mov	r5,r16
    8978:	8809883a 	mov	r4,r17
    897c:	00043f40 	call	43f4 <__sflush_r>
    8980:	1025883a 	mov	r18,r2
    8984:	80800b17 	ldw	r2,44(r16)
    8988:	10000426 	beq	r2,zero,899c <_fclose_r+0x78>
    898c:	81400717 	ldw	r5,28(r16)
    8990:	8809883a 	mov	r4,r17
    8994:	103ee83a 	callr	r2
    8998:	10001616 	blt	r2,zero,89f4 <_fclose_r+0xd0>
    899c:	8080030b 	ldhu	r2,12(r16)
    89a0:	1080200c 	andi	r2,r2,128
    89a4:	1000151e 	bne	r2,zero,89fc <_fclose_r+0xd8>
    89a8:	81400c17 	ldw	r5,48(r16)
    89ac:	28000526 	beq	r5,zero,89c4 <_fclose_r+0xa0>
    89b0:	80801004 	addi	r2,r16,64
    89b4:	28800226 	beq	r5,r2,89c0 <_fclose_r+0x9c>
    89b8:	8809883a 	mov	r4,r17
    89bc:	0004b600 	call	4b60 <_free_r>
    89c0:	80000c15 	stw	zero,48(r16)
    89c4:	81401117 	ldw	r5,68(r16)
    89c8:	28000326 	beq	r5,zero,89d8 <_fclose_r+0xb4>
    89cc:	8809883a 	mov	r4,r17
    89d0:	0004b600 	call	4b60 <_free_r>
    89d4:	80001115 	stw	zero,68(r16)
    89d8:	00049fc0 	call	49fc <__sfp_lock_acquire>
    89dc:	8000030d 	sth	zero,12(r16)
    89e0:	0004a000 	call	4a00 <__sfp_lock_release>
    89e4:	9005883a 	mov	r2,r18
    89e8:	003fdc06 	br	895c <__alt_data_end+0xfffe895c>
    89ec:	00049ec0 	call	49ec <__sinit>
    89f0:	003fd706 	br	8950 <__alt_data_end+0xfffe8950>
    89f4:	04bfffc4 	movi	r18,-1
    89f8:	003fe806 	br	899c <__alt_data_end+0xfffe899c>
    89fc:	81400417 	ldw	r5,16(r16)
    8a00:	8809883a 	mov	r4,r17
    8a04:	0004b600 	call	4b60 <_free_r>
    8a08:	003fe706 	br	89a8 <__alt_data_end+0xfffe89a8>
    8a0c:	0005883a 	mov	r2,zero
    8a10:	f800283a 	ret

00008a14 <fclose>:
    8a14:	00800074 	movhi	r2,1
    8a18:	1084a304 	addi	r2,r2,4748
    8a1c:	200b883a 	mov	r5,r4
    8a20:	11000017 	ldw	r4,0(r2)
    8a24:	00089241 	jmpi	8924 <_fclose_r>

00008a28 <__fputwc>:
    8a28:	defff804 	addi	sp,sp,-32
    8a2c:	dcc00415 	stw	r19,16(sp)
    8a30:	dc800315 	stw	r18,12(sp)
    8a34:	dc000115 	stw	r16,4(sp)
    8a38:	dfc00715 	stw	ra,28(sp)
    8a3c:	dd400615 	stw	r21,24(sp)
    8a40:	dd000515 	stw	r20,20(sp)
    8a44:	dc400215 	stw	r17,8(sp)
    8a48:	2027883a 	mov	r19,r4
    8a4c:	2825883a 	mov	r18,r5
    8a50:	3021883a 	mov	r16,r6
    8a54:	00050800 	call	5080 <__locale_mb_cur_max>
    8a58:	00c00044 	movi	r3,1
    8a5c:	10c03e26 	beq	r2,r3,8b58 <__fputwc+0x130>
    8a60:	81c01704 	addi	r7,r16,92
    8a64:	900d883a 	mov	r6,r18
    8a68:	d80b883a 	mov	r5,sp
    8a6c:	9809883a 	mov	r4,r19
    8a70:	0009a740 	call	9a74 <_wcrtomb_r>
    8a74:	1029883a 	mov	r20,r2
    8a78:	00bfffc4 	movi	r2,-1
    8a7c:	a0802026 	beq	r20,r2,8b00 <__fputwc+0xd8>
    8a80:	d9400003 	ldbu	r5,0(sp)
    8a84:	a0001c26 	beq	r20,zero,8af8 <__fputwc+0xd0>
    8a88:	0023883a 	mov	r17,zero
    8a8c:	05400284 	movi	r21,10
    8a90:	00000906 	br	8ab8 <__fputwc+0x90>
    8a94:	80800017 	ldw	r2,0(r16)
    8a98:	11400005 	stb	r5,0(r2)
    8a9c:	80c00017 	ldw	r3,0(r16)
    8aa0:	18c00044 	addi	r3,r3,1
    8aa4:	80c00015 	stw	r3,0(r16)
    8aa8:	8c400044 	addi	r17,r17,1
    8aac:	dc45883a 	add	r2,sp,r17
    8ab0:	8d00112e 	bgeu	r17,r20,8af8 <__fputwc+0xd0>
    8ab4:	11400003 	ldbu	r5,0(r2)
    8ab8:	80c00217 	ldw	r3,8(r16)
    8abc:	18ffffc4 	addi	r3,r3,-1
    8ac0:	80c00215 	stw	r3,8(r16)
    8ac4:	183ff30e 	bge	r3,zero,8a94 <__alt_data_end+0xfffe8a94>
    8ac8:	80800617 	ldw	r2,24(r16)
    8acc:	18801916 	blt	r3,r2,8b34 <__fputwc+0x10c>
    8ad0:	80800017 	ldw	r2,0(r16)
    8ad4:	11400005 	stb	r5,0(r2)
    8ad8:	80800017 	ldw	r2,0(r16)
    8adc:	10c00003 	ldbu	r3,0(r2)
    8ae0:	10800044 	addi	r2,r2,1
    8ae4:	1d402326 	beq	r3,r21,8b74 <__fputwc+0x14c>
    8ae8:	80800015 	stw	r2,0(r16)
    8aec:	8c400044 	addi	r17,r17,1
    8af0:	dc45883a 	add	r2,sp,r17
    8af4:	8d3fef36 	bltu	r17,r20,8ab4 <__alt_data_end+0xfffe8ab4>
    8af8:	9005883a 	mov	r2,r18
    8afc:	00000406 	br	8b10 <__fputwc+0xe8>
    8b00:	80c0030b 	ldhu	r3,12(r16)
    8b04:	a005883a 	mov	r2,r20
    8b08:	18c01014 	ori	r3,r3,64
    8b0c:	80c0030d 	sth	r3,12(r16)
    8b10:	dfc00717 	ldw	ra,28(sp)
    8b14:	dd400617 	ldw	r21,24(sp)
    8b18:	dd000517 	ldw	r20,20(sp)
    8b1c:	dcc00417 	ldw	r19,16(sp)
    8b20:	dc800317 	ldw	r18,12(sp)
    8b24:	dc400217 	ldw	r17,8(sp)
    8b28:	dc000117 	ldw	r16,4(sp)
    8b2c:	dec00804 	addi	sp,sp,32
    8b30:	f800283a 	ret
    8b34:	800d883a 	mov	r6,r16
    8b38:	29403fcc 	andi	r5,r5,255
    8b3c:	9809883a 	mov	r4,r19
    8b40:	000991c0 	call	991c <__swbuf_r>
    8b44:	10bfffe0 	cmpeqi	r2,r2,-1
    8b48:	10803fcc 	andi	r2,r2,255
    8b4c:	103fd626 	beq	r2,zero,8aa8 <__alt_data_end+0xfffe8aa8>
    8b50:	00bfffc4 	movi	r2,-1
    8b54:	003fee06 	br	8b10 <__alt_data_end+0xfffe8b10>
    8b58:	90ffffc4 	addi	r3,r18,-1
    8b5c:	01003f84 	movi	r4,254
    8b60:	20ffbf36 	bltu	r4,r3,8a60 <__alt_data_end+0xfffe8a60>
    8b64:	900b883a 	mov	r5,r18
    8b68:	dc800005 	stb	r18,0(sp)
    8b6c:	1029883a 	mov	r20,r2
    8b70:	003fc506 	br	8a88 <__alt_data_end+0xfffe8a88>
    8b74:	800d883a 	mov	r6,r16
    8b78:	a80b883a 	mov	r5,r21
    8b7c:	9809883a 	mov	r4,r19
    8b80:	000991c0 	call	991c <__swbuf_r>
    8b84:	10bfffe0 	cmpeqi	r2,r2,-1
    8b88:	003fef06 	br	8b48 <__alt_data_end+0xfffe8b48>

00008b8c <_fputwc_r>:
    8b8c:	3080030b 	ldhu	r2,12(r6)
    8b90:	10c8000c 	andi	r3,r2,8192
    8b94:	1800051e 	bne	r3,zero,8bac <_fputwc_r+0x20>
    8b98:	30c01917 	ldw	r3,100(r6)
    8b9c:	10880014 	ori	r2,r2,8192
    8ba0:	3080030d 	sth	r2,12(r6)
    8ba4:	18880014 	ori	r2,r3,8192
    8ba8:	30801915 	stw	r2,100(r6)
    8bac:	0008a281 	jmpi	8a28 <__fputwc>

00008bb0 <fputwc>:
    8bb0:	00800074 	movhi	r2,1
    8bb4:	defffc04 	addi	sp,sp,-16
    8bb8:	1084a304 	addi	r2,r2,4748
    8bbc:	dc000115 	stw	r16,4(sp)
    8bc0:	14000017 	ldw	r16,0(r2)
    8bc4:	dc400215 	stw	r17,8(sp)
    8bc8:	dfc00315 	stw	ra,12(sp)
    8bcc:	2023883a 	mov	r17,r4
    8bd0:	80000226 	beq	r16,zero,8bdc <fputwc+0x2c>
    8bd4:	80800e17 	ldw	r2,56(r16)
    8bd8:	10001026 	beq	r2,zero,8c1c <fputwc+0x6c>
    8bdc:	2880030b 	ldhu	r2,12(r5)
    8be0:	10c8000c 	andi	r3,r2,8192
    8be4:	1800051e 	bne	r3,zero,8bfc <fputwc+0x4c>
    8be8:	28c01917 	ldw	r3,100(r5)
    8bec:	10880014 	ori	r2,r2,8192
    8bf0:	2880030d 	sth	r2,12(r5)
    8bf4:	18880014 	ori	r2,r3,8192
    8bf8:	28801915 	stw	r2,100(r5)
    8bfc:	280d883a 	mov	r6,r5
    8c00:	8009883a 	mov	r4,r16
    8c04:	880b883a 	mov	r5,r17
    8c08:	dfc00317 	ldw	ra,12(sp)
    8c0c:	dc400217 	ldw	r17,8(sp)
    8c10:	dc000117 	ldw	r16,4(sp)
    8c14:	dec00404 	addi	sp,sp,16
    8c18:	0008a281 	jmpi	8a28 <__fputwc>
    8c1c:	8009883a 	mov	r4,r16
    8c20:	d9400015 	stw	r5,0(sp)
    8c24:	00049ec0 	call	49ec <__sinit>
    8c28:	d9400017 	ldw	r5,0(sp)
    8c2c:	003feb06 	br	8bdc <__alt_data_end+0xfffe8bdc>

00008c30 <_fstat_r>:
    8c30:	defffd04 	addi	sp,sp,-12
    8c34:	2805883a 	mov	r2,r5
    8c38:	dc000015 	stw	r16,0(sp)
    8c3c:	04000074 	movhi	r16,1
    8c40:	dc400115 	stw	r17,4(sp)
    8c44:	840b7304 	addi	r16,r16,11724
    8c48:	2023883a 	mov	r17,r4
    8c4c:	300b883a 	mov	r5,r6
    8c50:	1009883a 	mov	r4,r2
    8c54:	dfc00215 	stw	ra,8(sp)
    8c58:	80000015 	stw	zero,0(r16)
    8c5c:	000cee80 	call	cee8 <fstat>
    8c60:	00ffffc4 	movi	r3,-1
    8c64:	10c00526 	beq	r2,r3,8c7c <_fstat_r+0x4c>
    8c68:	dfc00217 	ldw	ra,8(sp)
    8c6c:	dc400117 	ldw	r17,4(sp)
    8c70:	dc000017 	ldw	r16,0(sp)
    8c74:	dec00304 	addi	sp,sp,12
    8c78:	f800283a 	ret
    8c7c:	80c00017 	ldw	r3,0(r16)
    8c80:	183ff926 	beq	r3,zero,8c68 <__alt_data_end+0xfffe8c68>
    8c84:	88c00015 	stw	r3,0(r17)
    8c88:	003ff706 	br	8c68 <__alt_data_end+0xfffe8c68>

00008c8c <__sfvwrite_r>:
    8c8c:	30800217 	ldw	r2,8(r6)
    8c90:	10006726 	beq	r2,zero,8e30 <__sfvwrite_r+0x1a4>
    8c94:	28c0030b 	ldhu	r3,12(r5)
    8c98:	defff404 	addi	sp,sp,-48
    8c9c:	dd400715 	stw	r21,28(sp)
    8ca0:	dd000615 	stw	r20,24(sp)
    8ca4:	dc000215 	stw	r16,8(sp)
    8ca8:	dfc00b15 	stw	ra,44(sp)
    8cac:	df000a15 	stw	fp,40(sp)
    8cb0:	ddc00915 	stw	r23,36(sp)
    8cb4:	dd800815 	stw	r22,32(sp)
    8cb8:	dcc00515 	stw	r19,20(sp)
    8cbc:	dc800415 	stw	r18,16(sp)
    8cc0:	dc400315 	stw	r17,12(sp)
    8cc4:	1880020c 	andi	r2,r3,8
    8cc8:	2821883a 	mov	r16,r5
    8ccc:	202b883a 	mov	r21,r4
    8cd0:	3029883a 	mov	r20,r6
    8cd4:	10002726 	beq	r2,zero,8d74 <__sfvwrite_r+0xe8>
    8cd8:	28800417 	ldw	r2,16(r5)
    8cdc:	10002526 	beq	r2,zero,8d74 <__sfvwrite_r+0xe8>
    8ce0:	1880008c 	andi	r2,r3,2
    8ce4:	a4400017 	ldw	r17,0(r20)
    8ce8:	10002a26 	beq	r2,zero,8d94 <__sfvwrite_r+0x108>
    8cec:	05a00034 	movhi	r22,32768
    8cf0:	0027883a 	mov	r19,zero
    8cf4:	0025883a 	mov	r18,zero
    8cf8:	b5bf0004 	addi	r22,r22,-1024
    8cfc:	980d883a 	mov	r6,r19
    8d00:	a809883a 	mov	r4,r21
    8d04:	90004626 	beq	r18,zero,8e20 <__sfvwrite_r+0x194>
    8d08:	900f883a 	mov	r7,r18
    8d0c:	b480022e 	bgeu	r22,r18,8d18 <__sfvwrite_r+0x8c>
    8d10:	01e00034 	movhi	r7,32768
    8d14:	39ff0004 	addi	r7,r7,-1024
    8d18:	80800917 	ldw	r2,36(r16)
    8d1c:	81400717 	ldw	r5,28(r16)
    8d20:	103ee83a 	callr	r2
    8d24:	0080570e 	bge	zero,r2,8e84 <__sfvwrite_r+0x1f8>
    8d28:	a0c00217 	ldw	r3,8(r20)
    8d2c:	98a7883a 	add	r19,r19,r2
    8d30:	90a5c83a 	sub	r18,r18,r2
    8d34:	1885c83a 	sub	r2,r3,r2
    8d38:	a0800215 	stw	r2,8(r20)
    8d3c:	103fef1e 	bne	r2,zero,8cfc <__alt_data_end+0xfffe8cfc>
    8d40:	0005883a 	mov	r2,zero
    8d44:	dfc00b17 	ldw	ra,44(sp)
    8d48:	df000a17 	ldw	fp,40(sp)
    8d4c:	ddc00917 	ldw	r23,36(sp)
    8d50:	dd800817 	ldw	r22,32(sp)
    8d54:	dd400717 	ldw	r21,28(sp)
    8d58:	dd000617 	ldw	r20,24(sp)
    8d5c:	dcc00517 	ldw	r19,20(sp)
    8d60:	dc800417 	ldw	r18,16(sp)
    8d64:	dc400317 	ldw	r17,12(sp)
    8d68:	dc000217 	ldw	r16,8(sp)
    8d6c:	dec00c04 	addi	sp,sp,48
    8d70:	f800283a 	ret
    8d74:	800b883a 	mov	r5,r16
    8d78:	a809883a 	mov	r4,r21
    8d7c:	0002a180 	call	2a18 <__swsetup_r>
    8d80:	1000eb1e 	bne	r2,zero,9130 <__sfvwrite_r+0x4a4>
    8d84:	80c0030b 	ldhu	r3,12(r16)
    8d88:	a4400017 	ldw	r17,0(r20)
    8d8c:	1880008c 	andi	r2,r3,2
    8d90:	103fd61e 	bne	r2,zero,8cec <__alt_data_end+0xfffe8cec>
    8d94:	1880004c 	andi	r2,r3,1
    8d98:	10003f1e 	bne	r2,zero,8e98 <__sfvwrite_r+0x20c>
    8d9c:	0039883a 	mov	fp,zero
    8da0:	0025883a 	mov	r18,zero
    8da4:	90001a26 	beq	r18,zero,8e10 <__sfvwrite_r+0x184>
    8da8:	1880800c 	andi	r2,r3,512
    8dac:	84c00217 	ldw	r19,8(r16)
    8db0:	10002126 	beq	r2,zero,8e38 <__sfvwrite_r+0x1ac>
    8db4:	982f883a 	mov	r23,r19
    8db8:	94c09336 	bltu	r18,r19,9008 <__sfvwrite_r+0x37c>
    8dbc:	1881200c 	andi	r2,r3,1152
    8dc0:	10009e1e 	bne	r2,zero,903c <__sfvwrite_r+0x3b0>
    8dc4:	81000017 	ldw	r4,0(r16)
    8dc8:	b80d883a 	mov	r6,r23
    8dcc:	e00b883a 	mov	r5,fp
    8dd0:	00091fc0 	call	91fc <memmove>
    8dd4:	80c00217 	ldw	r3,8(r16)
    8dd8:	81000017 	ldw	r4,0(r16)
    8ddc:	9005883a 	mov	r2,r18
    8de0:	1ce7c83a 	sub	r19,r3,r19
    8de4:	25cf883a 	add	r7,r4,r23
    8de8:	84c00215 	stw	r19,8(r16)
    8dec:	81c00015 	stw	r7,0(r16)
    8df0:	a0c00217 	ldw	r3,8(r20)
    8df4:	e0b9883a 	add	fp,fp,r2
    8df8:	90a5c83a 	sub	r18,r18,r2
    8dfc:	18a7c83a 	sub	r19,r3,r2
    8e00:	a4c00215 	stw	r19,8(r20)
    8e04:	983fce26 	beq	r19,zero,8d40 <__alt_data_end+0xfffe8d40>
    8e08:	80c0030b 	ldhu	r3,12(r16)
    8e0c:	903fe61e 	bne	r18,zero,8da8 <__alt_data_end+0xfffe8da8>
    8e10:	8f000017 	ldw	fp,0(r17)
    8e14:	8c800117 	ldw	r18,4(r17)
    8e18:	8c400204 	addi	r17,r17,8
    8e1c:	003fe106 	br	8da4 <__alt_data_end+0xfffe8da4>
    8e20:	8cc00017 	ldw	r19,0(r17)
    8e24:	8c800117 	ldw	r18,4(r17)
    8e28:	8c400204 	addi	r17,r17,8
    8e2c:	003fb306 	br	8cfc <__alt_data_end+0xfffe8cfc>
    8e30:	0005883a 	mov	r2,zero
    8e34:	f800283a 	ret
    8e38:	81000017 	ldw	r4,0(r16)
    8e3c:	80800417 	ldw	r2,16(r16)
    8e40:	11005736 	bltu	r2,r4,8fa0 <__sfvwrite_r+0x314>
    8e44:	85c00517 	ldw	r23,20(r16)
    8e48:	95c05536 	bltu	r18,r23,8fa0 <__sfvwrite_r+0x314>
    8e4c:	00a00034 	movhi	r2,32768
    8e50:	10bfffc4 	addi	r2,r2,-1
    8e54:	9009883a 	mov	r4,r18
    8e58:	1480012e 	bgeu	r2,r18,8e60 <__sfvwrite_r+0x1d4>
    8e5c:	1009883a 	mov	r4,r2
    8e60:	b80b883a 	mov	r5,r23
    8e64:	00005280 	call	528 <__divsi3>
    8e68:	15cf383a 	mul	r7,r2,r23
    8e6c:	81400717 	ldw	r5,28(r16)
    8e70:	80800917 	ldw	r2,36(r16)
    8e74:	e00d883a 	mov	r6,fp
    8e78:	a809883a 	mov	r4,r21
    8e7c:	103ee83a 	callr	r2
    8e80:	00bfdb16 	blt	zero,r2,8df0 <__alt_data_end+0xfffe8df0>
    8e84:	8080030b 	ldhu	r2,12(r16)
    8e88:	10801014 	ori	r2,r2,64
    8e8c:	8080030d 	sth	r2,12(r16)
    8e90:	00bfffc4 	movi	r2,-1
    8e94:	003fab06 	br	8d44 <__alt_data_end+0xfffe8d44>
    8e98:	0027883a 	mov	r19,zero
    8e9c:	0011883a 	mov	r8,zero
    8ea0:	0039883a 	mov	fp,zero
    8ea4:	0025883a 	mov	r18,zero
    8ea8:	90001f26 	beq	r18,zero,8f28 <__sfvwrite_r+0x29c>
    8eac:	40005a26 	beq	r8,zero,9018 <__sfvwrite_r+0x38c>
    8eb0:	982d883a 	mov	r22,r19
    8eb4:	94c0012e 	bgeu	r18,r19,8ebc <__sfvwrite_r+0x230>
    8eb8:	902d883a 	mov	r22,r18
    8ebc:	81000017 	ldw	r4,0(r16)
    8ec0:	80800417 	ldw	r2,16(r16)
    8ec4:	b02f883a 	mov	r23,r22
    8ec8:	81c00517 	ldw	r7,20(r16)
    8ecc:	1100032e 	bgeu	r2,r4,8edc <__sfvwrite_r+0x250>
    8ed0:	80c00217 	ldw	r3,8(r16)
    8ed4:	38c7883a 	add	r3,r7,r3
    8ed8:	1d801816 	blt	r3,r22,8f3c <__sfvwrite_r+0x2b0>
    8edc:	b1c03e16 	blt	r22,r7,8fd8 <__sfvwrite_r+0x34c>
    8ee0:	80800917 	ldw	r2,36(r16)
    8ee4:	81400717 	ldw	r5,28(r16)
    8ee8:	e00d883a 	mov	r6,fp
    8eec:	da000115 	stw	r8,4(sp)
    8ef0:	a809883a 	mov	r4,r21
    8ef4:	103ee83a 	callr	r2
    8ef8:	102f883a 	mov	r23,r2
    8efc:	da000117 	ldw	r8,4(sp)
    8f00:	00bfe00e 	bge	zero,r2,8e84 <__alt_data_end+0xfffe8e84>
    8f04:	9de7c83a 	sub	r19,r19,r23
    8f08:	98001f26 	beq	r19,zero,8f88 <__sfvwrite_r+0x2fc>
    8f0c:	a0800217 	ldw	r2,8(r20)
    8f10:	e5f9883a 	add	fp,fp,r23
    8f14:	95e5c83a 	sub	r18,r18,r23
    8f18:	15efc83a 	sub	r23,r2,r23
    8f1c:	a5c00215 	stw	r23,8(r20)
    8f20:	b83f8726 	beq	r23,zero,8d40 <__alt_data_end+0xfffe8d40>
    8f24:	903fe11e 	bne	r18,zero,8eac <__alt_data_end+0xfffe8eac>
    8f28:	8f000017 	ldw	fp,0(r17)
    8f2c:	8c800117 	ldw	r18,4(r17)
    8f30:	0011883a 	mov	r8,zero
    8f34:	8c400204 	addi	r17,r17,8
    8f38:	003fdb06 	br	8ea8 <__alt_data_end+0xfffe8ea8>
    8f3c:	180d883a 	mov	r6,r3
    8f40:	e00b883a 	mov	r5,fp
    8f44:	da000115 	stw	r8,4(sp)
    8f48:	d8c00015 	stw	r3,0(sp)
    8f4c:	00091fc0 	call	91fc <memmove>
    8f50:	d8c00017 	ldw	r3,0(sp)
    8f54:	80800017 	ldw	r2,0(r16)
    8f58:	800b883a 	mov	r5,r16
    8f5c:	a809883a 	mov	r4,r21
    8f60:	10c5883a 	add	r2,r2,r3
    8f64:	80800015 	stw	r2,0(r16)
    8f68:	d8c00015 	stw	r3,0(sp)
    8f6c:	00046100 	call	4610 <_fflush_r>
    8f70:	d8c00017 	ldw	r3,0(sp)
    8f74:	da000117 	ldw	r8,4(sp)
    8f78:	103fc21e 	bne	r2,zero,8e84 <__alt_data_end+0xfffe8e84>
    8f7c:	182f883a 	mov	r23,r3
    8f80:	9de7c83a 	sub	r19,r19,r23
    8f84:	983fe11e 	bne	r19,zero,8f0c <__alt_data_end+0xfffe8f0c>
    8f88:	800b883a 	mov	r5,r16
    8f8c:	a809883a 	mov	r4,r21
    8f90:	00046100 	call	4610 <_fflush_r>
    8f94:	103fbb1e 	bne	r2,zero,8e84 <__alt_data_end+0xfffe8e84>
    8f98:	0011883a 	mov	r8,zero
    8f9c:	003fdb06 	br	8f0c <__alt_data_end+0xfffe8f0c>
    8fa0:	94c0012e 	bgeu	r18,r19,8fa8 <__sfvwrite_r+0x31c>
    8fa4:	9027883a 	mov	r19,r18
    8fa8:	980d883a 	mov	r6,r19
    8fac:	e00b883a 	mov	r5,fp
    8fb0:	00091fc0 	call	91fc <memmove>
    8fb4:	80800217 	ldw	r2,8(r16)
    8fb8:	80c00017 	ldw	r3,0(r16)
    8fbc:	14c5c83a 	sub	r2,r2,r19
    8fc0:	1cc7883a 	add	r3,r3,r19
    8fc4:	80800215 	stw	r2,8(r16)
    8fc8:	80c00015 	stw	r3,0(r16)
    8fcc:	10004326 	beq	r2,zero,90dc <__sfvwrite_r+0x450>
    8fd0:	9805883a 	mov	r2,r19
    8fd4:	003f8606 	br	8df0 <__alt_data_end+0xfffe8df0>
    8fd8:	b00d883a 	mov	r6,r22
    8fdc:	e00b883a 	mov	r5,fp
    8fe0:	da000115 	stw	r8,4(sp)
    8fe4:	00091fc0 	call	91fc <memmove>
    8fe8:	80800217 	ldw	r2,8(r16)
    8fec:	80c00017 	ldw	r3,0(r16)
    8ff0:	da000117 	ldw	r8,4(sp)
    8ff4:	1585c83a 	sub	r2,r2,r22
    8ff8:	1dad883a 	add	r22,r3,r22
    8ffc:	80800215 	stw	r2,8(r16)
    9000:	85800015 	stw	r22,0(r16)
    9004:	003fbf06 	br	8f04 <__alt_data_end+0xfffe8f04>
    9008:	81000017 	ldw	r4,0(r16)
    900c:	9027883a 	mov	r19,r18
    9010:	902f883a 	mov	r23,r18
    9014:	003f6c06 	br	8dc8 <__alt_data_end+0xfffe8dc8>
    9018:	900d883a 	mov	r6,r18
    901c:	01400284 	movi	r5,10
    9020:	e009883a 	mov	r4,fp
    9024:	0005a9c0 	call	5a9c <memchr>
    9028:	10003e26 	beq	r2,zero,9124 <__sfvwrite_r+0x498>
    902c:	10800044 	addi	r2,r2,1
    9030:	1727c83a 	sub	r19,r2,fp
    9034:	02000044 	movi	r8,1
    9038:	003f9d06 	br	8eb0 <__alt_data_end+0xfffe8eb0>
    903c:	80800517 	ldw	r2,20(r16)
    9040:	81400417 	ldw	r5,16(r16)
    9044:	81c00017 	ldw	r7,0(r16)
    9048:	10a7883a 	add	r19,r2,r2
    904c:	9885883a 	add	r2,r19,r2
    9050:	1026d7fa 	srli	r19,r2,31
    9054:	396dc83a 	sub	r22,r7,r5
    9058:	b1000044 	addi	r4,r22,1
    905c:	9885883a 	add	r2,r19,r2
    9060:	1027d07a 	srai	r19,r2,1
    9064:	2485883a 	add	r2,r4,r18
    9068:	980d883a 	mov	r6,r19
    906c:	9880022e 	bgeu	r19,r2,9078 <__sfvwrite_r+0x3ec>
    9070:	1027883a 	mov	r19,r2
    9074:	100d883a 	mov	r6,r2
    9078:	18c1000c 	andi	r3,r3,1024
    907c:	18001c26 	beq	r3,zero,90f0 <__sfvwrite_r+0x464>
    9080:	300b883a 	mov	r5,r6
    9084:	a809883a 	mov	r4,r21
    9088:	00052900 	call	5290 <_malloc_r>
    908c:	102f883a 	mov	r23,r2
    9090:	10002926 	beq	r2,zero,9138 <__sfvwrite_r+0x4ac>
    9094:	81400417 	ldw	r5,16(r16)
    9098:	b00d883a 	mov	r6,r22
    909c:	1009883a 	mov	r4,r2
    90a0:	0005b800 	call	5b80 <memcpy>
    90a4:	8080030b 	ldhu	r2,12(r16)
    90a8:	00fedfc4 	movi	r3,-1153
    90ac:	10c4703a 	and	r2,r2,r3
    90b0:	10802014 	ori	r2,r2,128
    90b4:	8080030d 	sth	r2,12(r16)
    90b8:	bd89883a 	add	r4,r23,r22
    90bc:	9d8fc83a 	sub	r7,r19,r22
    90c0:	85c00415 	stw	r23,16(r16)
    90c4:	84c00515 	stw	r19,20(r16)
    90c8:	81000015 	stw	r4,0(r16)
    90cc:	9027883a 	mov	r19,r18
    90d0:	81c00215 	stw	r7,8(r16)
    90d4:	902f883a 	mov	r23,r18
    90d8:	003f3b06 	br	8dc8 <__alt_data_end+0xfffe8dc8>
    90dc:	800b883a 	mov	r5,r16
    90e0:	a809883a 	mov	r4,r21
    90e4:	00046100 	call	4610 <_fflush_r>
    90e8:	103fb926 	beq	r2,zero,8fd0 <__alt_data_end+0xfffe8fd0>
    90ec:	003f6506 	br	8e84 <__alt_data_end+0xfffe8e84>
    90f0:	a809883a 	mov	r4,r21
    90f4:	00093b80 	call	93b8 <_realloc_r>
    90f8:	102f883a 	mov	r23,r2
    90fc:	103fee1e 	bne	r2,zero,90b8 <__alt_data_end+0xfffe90b8>
    9100:	81400417 	ldw	r5,16(r16)
    9104:	a809883a 	mov	r4,r21
    9108:	0004b600 	call	4b60 <_free_r>
    910c:	8080030b 	ldhu	r2,12(r16)
    9110:	00ffdfc4 	movi	r3,-129
    9114:	1884703a 	and	r2,r3,r2
    9118:	00c00304 	movi	r3,12
    911c:	a8c00015 	stw	r3,0(r21)
    9120:	003f5906 	br	8e88 <__alt_data_end+0xfffe8e88>
    9124:	94c00044 	addi	r19,r18,1
    9128:	02000044 	movi	r8,1
    912c:	003f6006 	br	8eb0 <__alt_data_end+0xfffe8eb0>
    9130:	00bfffc4 	movi	r2,-1
    9134:	003f0306 	br	8d44 <__alt_data_end+0xfffe8d44>
    9138:	00800304 	movi	r2,12
    913c:	a8800015 	stw	r2,0(r21)
    9140:	8080030b 	ldhu	r2,12(r16)
    9144:	003f5006 	br	8e88 <__alt_data_end+0xfffe8e88>

00009148 <_isatty_r>:
    9148:	defffd04 	addi	sp,sp,-12
    914c:	dc000015 	stw	r16,0(sp)
    9150:	04000074 	movhi	r16,1
    9154:	dc400115 	stw	r17,4(sp)
    9158:	840b7304 	addi	r16,r16,11724
    915c:	2023883a 	mov	r17,r4
    9160:	2809883a 	mov	r4,r5
    9164:	dfc00215 	stw	ra,8(sp)
    9168:	80000015 	stw	zero,0(r16)
    916c:	000cfd40 	call	cfd4 <isatty>
    9170:	00ffffc4 	movi	r3,-1
    9174:	10c00526 	beq	r2,r3,918c <_isatty_r+0x44>
    9178:	dfc00217 	ldw	ra,8(sp)
    917c:	dc400117 	ldw	r17,4(sp)
    9180:	dc000017 	ldw	r16,0(sp)
    9184:	dec00304 	addi	sp,sp,12
    9188:	f800283a 	ret
    918c:	80c00017 	ldw	r3,0(r16)
    9190:	183ff926 	beq	r3,zero,9178 <__alt_data_end+0xfffe9178>
    9194:	88c00015 	stw	r3,0(r17)
    9198:	003ff706 	br	9178 <__alt_data_end+0xfffe9178>

0000919c <_lseek_r>:
    919c:	defffd04 	addi	sp,sp,-12
    91a0:	2805883a 	mov	r2,r5
    91a4:	dc000015 	stw	r16,0(sp)
    91a8:	04000074 	movhi	r16,1
    91ac:	dc400115 	stw	r17,4(sp)
    91b0:	300b883a 	mov	r5,r6
    91b4:	840b7304 	addi	r16,r16,11724
    91b8:	2023883a 	mov	r17,r4
    91bc:	380d883a 	mov	r6,r7
    91c0:	1009883a 	mov	r4,r2
    91c4:	dfc00215 	stw	ra,8(sp)
    91c8:	80000015 	stw	zero,0(r16)
    91cc:	000d1a00 	call	d1a0 <lseek>
    91d0:	00ffffc4 	movi	r3,-1
    91d4:	10c00526 	beq	r2,r3,91ec <_lseek_r+0x50>
    91d8:	dfc00217 	ldw	ra,8(sp)
    91dc:	dc400117 	ldw	r17,4(sp)
    91e0:	dc000017 	ldw	r16,0(sp)
    91e4:	dec00304 	addi	sp,sp,12
    91e8:	f800283a 	ret
    91ec:	80c00017 	ldw	r3,0(r16)
    91f0:	183ff926 	beq	r3,zero,91d8 <__alt_data_end+0xfffe91d8>
    91f4:	88c00015 	stw	r3,0(r17)
    91f8:	003ff706 	br	91d8 <__alt_data_end+0xfffe91d8>

000091fc <memmove>:
    91fc:	2005883a 	mov	r2,r4
    9200:	29000b2e 	bgeu	r5,r4,9230 <memmove+0x34>
    9204:	298f883a 	add	r7,r5,r6
    9208:	21c0092e 	bgeu	r4,r7,9230 <memmove+0x34>
    920c:	2187883a 	add	r3,r4,r6
    9210:	198bc83a 	sub	r5,r3,r6
    9214:	30004826 	beq	r6,zero,9338 <memmove+0x13c>
    9218:	39ffffc4 	addi	r7,r7,-1
    921c:	39000003 	ldbu	r4,0(r7)
    9220:	18ffffc4 	addi	r3,r3,-1
    9224:	19000005 	stb	r4,0(r3)
    9228:	28fffb1e 	bne	r5,r3,9218 <__alt_data_end+0xfffe9218>
    922c:	f800283a 	ret
    9230:	00c003c4 	movi	r3,15
    9234:	1980412e 	bgeu	r3,r6,933c <memmove+0x140>
    9238:	2886b03a 	or	r3,r5,r2
    923c:	18c000cc 	andi	r3,r3,3
    9240:	1800401e 	bne	r3,zero,9344 <memmove+0x148>
    9244:	33fffc04 	addi	r15,r6,-16
    9248:	781ed13a 	srli	r15,r15,4
    924c:	28c00104 	addi	r3,r5,4
    9250:	13400104 	addi	r13,r2,4
    9254:	781c913a 	slli	r14,r15,4
    9258:	2b000204 	addi	r12,r5,8
    925c:	12c00204 	addi	r11,r2,8
    9260:	73800504 	addi	r14,r14,20
    9264:	2a800304 	addi	r10,r5,12
    9268:	12400304 	addi	r9,r2,12
    926c:	2b9d883a 	add	r14,r5,r14
    9270:	2811883a 	mov	r8,r5
    9274:	100f883a 	mov	r7,r2
    9278:	41000017 	ldw	r4,0(r8)
    927c:	39c00404 	addi	r7,r7,16
    9280:	18c00404 	addi	r3,r3,16
    9284:	393ffc15 	stw	r4,-16(r7)
    9288:	193ffc17 	ldw	r4,-16(r3)
    928c:	6b400404 	addi	r13,r13,16
    9290:	5ac00404 	addi	r11,r11,16
    9294:	693ffc15 	stw	r4,-16(r13)
    9298:	61000017 	ldw	r4,0(r12)
    929c:	4a400404 	addi	r9,r9,16
    92a0:	42000404 	addi	r8,r8,16
    92a4:	593ffc15 	stw	r4,-16(r11)
    92a8:	51000017 	ldw	r4,0(r10)
    92ac:	63000404 	addi	r12,r12,16
    92b0:	52800404 	addi	r10,r10,16
    92b4:	493ffc15 	stw	r4,-16(r9)
    92b8:	1bbfef1e 	bne	r3,r14,9278 <__alt_data_end+0xfffe9278>
    92bc:	79000044 	addi	r4,r15,1
    92c0:	2008913a 	slli	r4,r4,4
    92c4:	328003cc 	andi	r10,r6,15
    92c8:	02c000c4 	movi	r11,3
    92cc:	1107883a 	add	r3,r2,r4
    92d0:	290b883a 	add	r5,r5,r4
    92d4:	5a801e2e 	bgeu	r11,r10,9350 <memmove+0x154>
    92d8:	1813883a 	mov	r9,r3
    92dc:	2811883a 	mov	r8,r5
    92e0:	500f883a 	mov	r7,r10
    92e4:	41000017 	ldw	r4,0(r8)
    92e8:	4a400104 	addi	r9,r9,4
    92ec:	39ffff04 	addi	r7,r7,-4
    92f0:	493fff15 	stw	r4,-4(r9)
    92f4:	42000104 	addi	r8,r8,4
    92f8:	59fffa36 	bltu	r11,r7,92e4 <__alt_data_end+0xfffe92e4>
    92fc:	513fff04 	addi	r4,r10,-4
    9300:	2008d0ba 	srli	r4,r4,2
    9304:	318000cc 	andi	r6,r6,3
    9308:	21000044 	addi	r4,r4,1
    930c:	2109883a 	add	r4,r4,r4
    9310:	2109883a 	add	r4,r4,r4
    9314:	1907883a 	add	r3,r3,r4
    9318:	290b883a 	add	r5,r5,r4
    931c:	30000b26 	beq	r6,zero,934c <memmove+0x150>
    9320:	198d883a 	add	r6,r3,r6
    9324:	29c00003 	ldbu	r7,0(r5)
    9328:	18c00044 	addi	r3,r3,1
    932c:	29400044 	addi	r5,r5,1
    9330:	19ffffc5 	stb	r7,-1(r3)
    9334:	19bffb1e 	bne	r3,r6,9324 <__alt_data_end+0xfffe9324>
    9338:	f800283a 	ret
    933c:	1007883a 	mov	r3,r2
    9340:	003ff606 	br	931c <__alt_data_end+0xfffe931c>
    9344:	1007883a 	mov	r3,r2
    9348:	003ff506 	br	9320 <__alt_data_end+0xfffe9320>
    934c:	f800283a 	ret
    9350:	500d883a 	mov	r6,r10
    9354:	003ff106 	br	931c <__alt_data_end+0xfffe931c>

00009358 <_read_r>:
    9358:	defffd04 	addi	sp,sp,-12
    935c:	2805883a 	mov	r2,r5
    9360:	dc000015 	stw	r16,0(sp)
    9364:	04000074 	movhi	r16,1
    9368:	dc400115 	stw	r17,4(sp)
    936c:	300b883a 	mov	r5,r6
    9370:	840b7304 	addi	r16,r16,11724
    9374:	2023883a 	mov	r17,r4
    9378:	380d883a 	mov	r6,r7
    937c:	1009883a 	mov	r4,r2
    9380:	dfc00215 	stw	ra,8(sp)
    9384:	80000015 	stw	zero,0(r16)
    9388:	000d3740 	call	d374 <read>
    938c:	00ffffc4 	movi	r3,-1
    9390:	10c00526 	beq	r2,r3,93a8 <_read_r+0x50>
    9394:	dfc00217 	ldw	ra,8(sp)
    9398:	dc400117 	ldw	r17,4(sp)
    939c:	dc000017 	ldw	r16,0(sp)
    93a0:	dec00304 	addi	sp,sp,12
    93a4:	f800283a 	ret
    93a8:	80c00017 	ldw	r3,0(r16)
    93ac:	183ff926 	beq	r3,zero,9394 <__alt_data_end+0xfffe9394>
    93b0:	88c00015 	stw	r3,0(r17)
    93b4:	003ff706 	br	9394 <__alt_data_end+0xfffe9394>

000093b8 <_realloc_r>:
    93b8:	defff604 	addi	sp,sp,-40
    93bc:	dc800215 	stw	r18,8(sp)
    93c0:	dfc00915 	stw	ra,36(sp)
    93c4:	df000815 	stw	fp,32(sp)
    93c8:	ddc00715 	stw	r23,28(sp)
    93cc:	dd800615 	stw	r22,24(sp)
    93d0:	dd400515 	stw	r21,20(sp)
    93d4:	dd000415 	stw	r20,16(sp)
    93d8:	dcc00315 	stw	r19,12(sp)
    93dc:	dc400115 	stw	r17,4(sp)
    93e0:	dc000015 	stw	r16,0(sp)
    93e4:	3025883a 	mov	r18,r6
    93e8:	2800b726 	beq	r5,zero,96c8 <_realloc_r+0x310>
    93ec:	282b883a 	mov	r21,r5
    93f0:	2029883a 	mov	r20,r4
    93f4:	000d2f00 	call	d2f0 <__malloc_lock>
    93f8:	a8bfff17 	ldw	r2,-4(r21)
    93fc:	043fff04 	movi	r16,-4
    9400:	90c002c4 	addi	r3,r18,11
    9404:	01000584 	movi	r4,22
    9408:	acfffe04 	addi	r19,r21,-8
    940c:	1420703a 	and	r16,r2,r16
    9410:	20c0332e 	bgeu	r4,r3,94e0 <_realloc_r+0x128>
    9414:	047ffe04 	movi	r17,-8
    9418:	1c62703a 	and	r17,r3,r17
    941c:	8807883a 	mov	r3,r17
    9420:	88005816 	blt	r17,zero,9584 <_realloc_r+0x1cc>
    9424:	8c805736 	bltu	r17,r18,9584 <_realloc_r+0x1cc>
    9428:	80c0300e 	bge	r16,r3,94ec <_realloc_r+0x134>
    942c:	07000074 	movhi	fp,1
    9430:	e73f1e04 	addi	fp,fp,-904
    9434:	e1c00217 	ldw	r7,8(fp)
    9438:	9c09883a 	add	r4,r19,r16
    943c:	22000117 	ldw	r8,4(r4)
    9440:	21c06326 	beq	r4,r7,95d0 <_realloc_r+0x218>
    9444:	017fff84 	movi	r5,-2
    9448:	414a703a 	and	r5,r8,r5
    944c:	214b883a 	add	r5,r4,r5
    9450:	29800117 	ldw	r6,4(r5)
    9454:	3180004c 	andi	r6,r6,1
    9458:	30003f26 	beq	r6,zero,9558 <_realloc_r+0x1a0>
    945c:	1080004c 	andi	r2,r2,1
    9460:	10008326 	beq	r2,zero,9670 <_realloc_r+0x2b8>
    9464:	900b883a 	mov	r5,r18
    9468:	a009883a 	mov	r4,r20
    946c:	00052900 	call	5290 <_malloc_r>
    9470:	1025883a 	mov	r18,r2
    9474:	10011e26 	beq	r2,zero,98f0 <_realloc_r+0x538>
    9478:	a93fff17 	ldw	r4,-4(r21)
    947c:	10fffe04 	addi	r3,r2,-8
    9480:	00bfff84 	movi	r2,-2
    9484:	2084703a 	and	r2,r4,r2
    9488:	9885883a 	add	r2,r19,r2
    948c:	1880ee26 	beq	r3,r2,9848 <_realloc_r+0x490>
    9490:	81bfff04 	addi	r6,r16,-4
    9494:	00800904 	movi	r2,36
    9498:	1180b836 	bltu	r2,r6,977c <_realloc_r+0x3c4>
    949c:	00c004c4 	movi	r3,19
    94a0:	19809636 	bltu	r3,r6,96fc <_realloc_r+0x344>
    94a4:	9005883a 	mov	r2,r18
    94a8:	a807883a 	mov	r3,r21
    94ac:	19000017 	ldw	r4,0(r3)
    94b0:	11000015 	stw	r4,0(r2)
    94b4:	19000117 	ldw	r4,4(r3)
    94b8:	11000115 	stw	r4,4(r2)
    94bc:	18c00217 	ldw	r3,8(r3)
    94c0:	10c00215 	stw	r3,8(r2)
    94c4:	a80b883a 	mov	r5,r21
    94c8:	a009883a 	mov	r4,r20
    94cc:	0004b600 	call	4b60 <_free_r>
    94d0:	a009883a 	mov	r4,r20
    94d4:	000d3140 	call	d314 <__malloc_unlock>
    94d8:	9005883a 	mov	r2,r18
    94dc:	00001206 	br	9528 <_realloc_r+0x170>
    94e0:	00c00404 	movi	r3,16
    94e4:	1823883a 	mov	r17,r3
    94e8:	003fce06 	br	9424 <__alt_data_end+0xfffe9424>
    94ec:	a825883a 	mov	r18,r21
    94f0:	8445c83a 	sub	r2,r16,r17
    94f4:	00c003c4 	movi	r3,15
    94f8:	18802636 	bltu	r3,r2,9594 <_realloc_r+0x1dc>
    94fc:	99800117 	ldw	r6,4(r19)
    9500:	9c07883a 	add	r3,r19,r16
    9504:	3180004c 	andi	r6,r6,1
    9508:	3420b03a 	or	r16,r6,r16
    950c:	9c000115 	stw	r16,4(r19)
    9510:	18800117 	ldw	r2,4(r3)
    9514:	10800054 	ori	r2,r2,1
    9518:	18800115 	stw	r2,4(r3)
    951c:	a009883a 	mov	r4,r20
    9520:	000d3140 	call	d314 <__malloc_unlock>
    9524:	9005883a 	mov	r2,r18
    9528:	dfc00917 	ldw	ra,36(sp)
    952c:	df000817 	ldw	fp,32(sp)
    9530:	ddc00717 	ldw	r23,28(sp)
    9534:	dd800617 	ldw	r22,24(sp)
    9538:	dd400517 	ldw	r21,20(sp)
    953c:	dd000417 	ldw	r20,16(sp)
    9540:	dcc00317 	ldw	r19,12(sp)
    9544:	dc800217 	ldw	r18,8(sp)
    9548:	dc400117 	ldw	r17,4(sp)
    954c:	dc000017 	ldw	r16,0(sp)
    9550:	dec00a04 	addi	sp,sp,40
    9554:	f800283a 	ret
    9558:	017fff04 	movi	r5,-4
    955c:	414a703a 	and	r5,r8,r5
    9560:	814d883a 	add	r6,r16,r5
    9564:	30c01f16 	blt	r6,r3,95e4 <_realloc_r+0x22c>
    9568:	20800317 	ldw	r2,12(r4)
    956c:	20c00217 	ldw	r3,8(r4)
    9570:	a825883a 	mov	r18,r21
    9574:	3021883a 	mov	r16,r6
    9578:	18800315 	stw	r2,12(r3)
    957c:	10c00215 	stw	r3,8(r2)
    9580:	003fdb06 	br	94f0 <__alt_data_end+0xfffe94f0>
    9584:	00800304 	movi	r2,12
    9588:	a0800015 	stw	r2,0(r20)
    958c:	0005883a 	mov	r2,zero
    9590:	003fe506 	br	9528 <__alt_data_end+0xfffe9528>
    9594:	98c00117 	ldw	r3,4(r19)
    9598:	9c4b883a 	add	r5,r19,r17
    959c:	11000054 	ori	r4,r2,1
    95a0:	18c0004c 	andi	r3,r3,1
    95a4:	1c62b03a 	or	r17,r3,r17
    95a8:	9c400115 	stw	r17,4(r19)
    95ac:	29000115 	stw	r4,4(r5)
    95b0:	2885883a 	add	r2,r5,r2
    95b4:	10c00117 	ldw	r3,4(r2)
    95b8:	29400204 	addi	r5,r5,8
    95bc:	a009883a 	mov	r4,r20
    95c0:	18c00054 	ori	r3,r3,1
    95c4:	10c00115 	stw	r3,4(r2)
    95c8:	0004b600 	call	4b60 <_free_r>
    95cc:	003fd306 	br	951c <__alt_data_end+0xfffe951c>
    95d0:	017fff04 	movi	r5,-4
    95d4:	414a703a 	and	r5,r8,r5
    95d8:	89800404 	addi	r6,r17,16
    95dc:	8151883a 	add	r8,r16,r5
    95e0:	4180590e 	bge	r8,r6,9748 <_realloc_r+0x390>
    95e4:	1080004c 	andi	r2,r2,1
    95e8:	103f9e1e 	bne	r2,zero,9464 <__alt_data_end+0xfffe9464>
    95ec:	adbffe17 	ldw	r22,-8(r21)
    95f0:	00bfff04 	movi	r2,-4
    95f4:	9dadc83a 	sub	r22,r19,r22
    95f8:	b1800117 	ldw	r6,4(r22)
    95fc:	3084703a 	and	r2,r6,r2
    9600:	20002026 	beq	r4,zero,9684 <_realloc_r+0x2cc>
    9604:	80af883a 	add	r23,r16,r2
    9608:	b96f883a 	add	r23,r23,r5
    960c:	21c05f26 	beq	r4,r7,978c <_realloc_r+0x3d4>
    9610:	b8c01c16 	blt	r23,r3,9684 <_realloc_r+0x2cc>
    9614:	20800317 	ldw	r2,12(r4)
    9618:	20c00217 	ldw	r3,8(r4)
    961c:	81bfff04 	addi	r6,r16,-4
    9620:	01000904 	movi	r4,36
    9624:	18800315 	stw	r2,12(r3)
    9628:	10c00215 	stw	r3,8(r2)
    962c:	b0c00217 	ldw	r3,8(r22)
    9630:	b0800317 	ldw	r2,12(r22)
    9634:	b4800204 	addi	r18,r22,8
    9638:	18800315 	stw	r2,12(r3)
    963c:	10c00215 	stw	r3,8(r2)
    9640:	21801b36 	bltu	r4,r6,96b0 <_realloc_r+0x2f8>
    9644:	008004c4 	movi	r2,19
    9648:	1180352e 	bgeu	r2,r6,9720 <_realloc_r+0x368>
    964c:	a8800017 	ldw	r2,0(r21)
    9650:	b0800215 	stw	r2,8(r22)
    9654:	a8800117 	ldw	r2,4(r21)
    9658:	b0800315 	stw	r2,12(r22)
    965c:	008006c4 	movi	r2,27
    9660:	11807f36 	bltu	r2,r6,9860 <_realloc_r+0x4a8>
    9664:	b0800404 	addi	r2,r22,16
    9668:	ad400204 	addi	r21,r21,8
    966c:	00002d06 	br	9724 <_realloc_r+0x36c>
    9670:	adbffe17 	ldw	r22,-8(r21)
    9674:	00bfff04 	movi	r2,-4
    9678:	9dadc83a 	sub	r22,r19,r22
    967c:	b1000117 	ldw	r4,4(r22)
    9680:	2084703a 	and	r2,r4,r2
    9684:	b03f7726 	beq	r22,zero,9464 <__alt_data_end+0xfffe9464>
    9688:	80af883a 	add	r23,r16,r2
    968c:	b8ff7516 	blt	r23,r3,9464 <__alt_data_end+0xfffe9464>
    9690:	b0800317 	ldw	r2,12(r22)
    9694:	b0c00217 	ldw	r3,8(r22)
    9698:	81bfff04 	addi	r6,r16,-4
    969c:	01000904 	movi	r4,36
    96a0:	18800315 	stw	r2,12(r3)
    96a4:	10c00215 	stw	r3,8(r2)
    96a8:	b4800204 	addi	r18,r22,8
    96ac:	21bfe52e 	bgeu	r4,r6,9644 <__alt_data_end+0xfffe9644>
    96b0:	a80b883a 	mov	r5,r21
    96b4:	9009883a 	mov	r4,r18
    96b8:	00091fc0 	call	91fc <memmove>
    96bc:	b821883a 	mov	r16,r23
    96c0:	b027883a 	mov	r19,r22
    96c4:	003f8a06 	br	94f0 <__alt_data_end+0xfffe94f0>
    96c8:	300b883a 	mov	r5,r6
    96cc:	dfc00917 	ldw	ra,36(sp)
    96d0:	df000817 	ldw	fp,32(sp)
    96d4:	ddc00717 	ldw	r23,28(sp)
    96d8:	dd800617 	ldw	r22,24(sp)
    96dc:	dd400517 	ldw	r21,20(sp)
    96e0:	dd000417 	ldw	r20,16(sp)
    96e4:	dcc00317 	ldw	r19,12(sp)
    96e8:	dc800217 	ldw	r18,8(sp)
    96ec:	dc400117 	ldw	r17,4(sp)
    96f0:	dc000017 	ldw	r16,0(sp)
    96f4:	dec00a04 	addi	sp,sp,40
    96f8:	00052901 	jmpi	5290 <_malloc_r>
    96fc:	a8c00017 	ldw	r3,0(r21)
    9700:	90c00015 	stw	r3,0(r18)
    9704:	a8c00117 	ldw	r3,4(r21)
    9708:	90c00115 	stw	r3,4(r18)
    970c:	00c006c4 	movi	r3,27
    9710:	19804536 	bltu	r3,r6,9828 <_realloc_r+0x470>
    9714:	90800204 	addi	r2,r18,8
    9718:	a8c00204 	addi	r3,r21,8
    971c:	003f6306 	br	94ac <__alt_data_end+0xfffe94ac>
    9720:	9005883a 	mov	r2,r18
    9724:	a8c00017 	ldw	r3,0(r21)
    9728:	b821883a 	mov	r16,r23
    972c:	b027883a 	mov	r19,r22
    9730:	10c00015 	stw	r3,0(r2)
    9734:	a8c00117 	ldw	r3,4(r21)
    9738:	10c00115 	stw	r3,4(r2)
    973c:	a8c00217 	ldw	r3,8(r21)
    9740:	10c00215 	stw	r3,8(r2)
    9744:	003f6a06 	br	94f0 <__alt_data_end+0xfffe94f0>
    9748:	9c67883a 	add	r19,r19,r17
    974c:	4445c83a 	sub	r2,r8,r17
    9750:	e4c00215 	stw	r19,8(fp)
    9754:	10800054 	ori	r2,r2,1
    9758:	98800115 	stw	r2,4(r19)
    975c:	a8bfff17 	ldw	r2,-4(r21)
    9760:	a009883a 	mov	r4,r20
    9764:	1080004c 	andi	r2,r2,1
    9768:	1462b03a 	or	r17,r2,r17
    976c:	ac7fff15 	stw	r17,-4(r21)
    9770:	000d3140 	call	d314 <__malloc_unlock>
    9774:	a805883a 	mov	r2,r21
    9778:	003f6b06 	br	9528 <__alt_data_end+0xfffe9528>
    977c:	a80b883a 	mov	r5,r21
    9780:	9009883a 	mov	r4,r18
    9784:	00091fc0 	call	91fc <memmove>
    9788:	003f4e06 	br	94c4 <__alt_data_end+0xfffe94c4>
    978c:	89000404 	addi	r4,r17,16
    9790:	b93fbc16 	blt	r23,r4,9684 <__alt_data_end+0xfffe9684>
    9794:	b0800317 	ldw	r2,12(r22)
    9798:	b0c00217 	ldw	r3,8(r22)
    979c:	81bfff04 	addi	r6,r16,-4
    97a0:	01000904 	movi	r4,36
    97a4:	18800315 	stw	r2,12(r3)
    97a8:	10c00215 	stw	r3,8(r2)
    97ac:	b4800204 	addi	r18,r22,8
    97b0:	21804336 	bltu	r4,r6,98c0 <_realloc_r+0x508>
    97b4:	008004c4 	movi	r2,19
    97b8:	11803f2e 	bgeu	r2,r6,98b8 <_realloc_r+0x500>
    97bc:	a8800017 	ldw	r2,0(r21)
    97c0:	b0800215 	stw	r2,8(r22)
    97c4:	a8800117 	ldw	r2,4(r21)
    97c8:	b0800315 	stw	r2,12(r22)
    97cc:	008006c4 	movi	r2,27
    97d0:	11803f36 	bltu	r2,r6,98d0 <_realloc_r+0x518>
    97d4:	b0800404 	addi	r2,r22,16
    97d8:	ad400204 	addi	r21,r21,8
    97dc:	a8c00017 	ldw	r3,0(r21)
    97e0:	10c00015 	stw	r3,0(r2)
    97e4:	a8c00117 	ldw	r3,4(r21)
    97e8:	10c00115 	stw	r3,4(r2)
    97ec:	a8c00217 	ldw	r3,8(r21)
    97f0:	10c00215 	stw	r3,8(r2)
    97f4:	b447883a 	add	r3,r22,r17
    97f8:	bc45c83a 	sub	r2,r23,r17
    97fc:	e0c00215 	stw	r3,8(fp)
    9800:	10800054 	ori	r2,r2,1
    9804:	18800115 	stw	r2,4(r3)
    9808:	b0800117 	ldw	r2,4(r22)
    980c:	a009883a 	mov	r4,r20
    9810:	1080004c 	andi	r2,r2,1
    9814:	1462b03a 	or	r17,r2,r17
    9818:	b4400115 	stw	r17,4(r22)
    981c:	000d3140 	call	d314 <__malloc_unlock>
    9820:	9005883a 	mov	r2,r18
    9824:	003f4006 	br	9528 <__alt_data_end+0xfffe9528>
    9828:	a8c00217 	ldw	r3,8(r21)
    982c:	90c00215 	stw	r3,8(r18)
    9830:	a8c00317 	ldw	r3,12(r21)
    9834:	90c00315 	stw	r3,12(r18)
    9838:	30801126 	beq	r6,r2,9880 <_realloc_r+0x4c8>
    983c:	90800404 	addi	r2,r18,16
    9840:	a8c00404 	addi	r3,r21,16
    9844:	003f1906 	br	94ac <__alt_data_end+0xfffe94ac>
    9848:	90ffff17 	ldw	r3,-4(r18)
    984c:	00bfff04 	movi	r2,-4
    9850:	a825883a 	mov	r18,r21
    9854:	1884703a 	and	r2,r3,r2
    9858:	80a1883a 	add	r16,r16,r2
    985c:	003f2406 	br	94f0 <__alt_data_end+0xfffe94f0>
    9860:	a8800217 	ldw	r2,8(r21)
    9864:	b0800415 	stw	r2,16(r22)
    9868:	a8800317 	ldw	r2,12(r21)
    986c:	b0800515 	stw	r2,20(r22)
    9870:	31000a26 	beq	r6,r4,989c <_realloc_r+0x4e4>
    9874:	b0800604 	addi	r2,r22,24
    9878:	ad400404 	addi	r21,r21,16
    987c:	003fa906 	br	9724 <__alt_data_end+0xfffe9724>
    9880:	a9000417 	ldw	r4,16(r21)
    9884:	90800604 	addi	r2,r18,24
    9888:	a8c00604 	addi	r3,r21,24
    988c:	91000415 	stw	r4,16(r18)
    9890:	a9000517 	ldw	r4,20(r21)
    9894:	91000515 	stw	r4,20(r18)
    9898:	003f0406 	br	94ac <__alt_data_end+0xfffe94ac>
    989c:	a8c00417 	ldw	r3,16(r21)
    98a0:	ad400604 	addi	r21,r21,24
    98a4:	b0800804 	addi	r2,r22,32
    98a8:	b0c00615 	stw	r3,24(r22)
    98ac:	a8ffff17 	ldw	r3,-4(r21)
    98b0:	b0c00715 	stw	r3,28(r22)
    98b4:	003f9b06 	br	9724 <__alt_data_end+0xfffe9724>
    98b8:	9005883a 	mov	r2,r18
    98bc:	003fc706 	br	97dc <__alt_data_end+0xfffe97dc>
    98c0:	a80b883a 	mov	r5,r21
    98c4:	9009883a 	mov	r4,r18
    98c8:	00091fc0 	call	91fc <memmove>
    98cc:	003fc906 	br	97f4 <__alt_data_end+0xfffe97f4>
    98d0:	a8800217 	ldw	r2,8(r21)
    98d4:	b0800415 	stw	r2,16(r22)
    98d8:	a8800317 	ldw	r2,12(r21)
    98dc:	b0800515 	stw	r2,20(r22)
    98e0:	31000726 	beq	r6,r4,9900 <_realloc_r+0x548>
    98e4:	b0800604 	addi	r2,r22,24
    98e8:	ad400404 	addi	r21,r21,16
    98ec:	003fbb06 	br	97dc <__alt_data_end+0xfffe97dc>
    98f0:	a009883a 	mov	r4,r20
    98f4:	000d3140 	call	d314 <__malloc_unlock>
    98f8:	0005883a 	mov	r2,zero
    98fc:	003f0a06 	br	9528 <__alt_data_end+0xfffe9528>
    9900:	a8c00417 	ldw	r3,16(r21)
    9904:	ad400604 	addi	r21,r21,24
    9908:	b0800804 	addi	r2,r22,32
    990c:	b0c00615 	stw	r3,24(r22)
    9910:	a8ffff17 	ldw	r3,-4(r21)
    9914:	b0c00715 	stw	r3,28(r22)
    9918:	003fb006 	br	97dc <__alt_data_end+0xfffe97dc>

0000991c <__swbuf_r>:
    991c:	defffb04 	addi	sp,sp,-20
    9920:	dcc00315 	stw	r19,12(sp)
    9924:	dc800215 	stw	r18,8(sp)
    9928:	dc000015 	stw	r16,0(sp)
    992c:	dfc00415 	stw	ra,16(sp)
    9930:	dc400115 	stw	r17,4(sp)
    9934:	2025883a 	mov	r18,r4
    9938:	2827883a 	mov	r19,r5
    993c:	3021883a 	mov	r16,r6
    9940:	20000226 	beq	r4,zero,994c <__swbuf_r+0x30>
    9944:	20800e17 	ldw	r2,56(r4)
    9948:	10004226 	beq	r2,zero,9a54 <__swbuf_r+0x138>
    994c:	80800617 	ldw	r2,24(r16)
    9950:	8100030b 	ldhu	r4,12(r16)
    9954:	80800215 	stw	r2,8(r16)
    9958:	2080020c 	andi	r2,r4,8
    995c:	10003626 	beq	r2,zero,9a38 <__swbuf_r+0x11c>
    9960:	80c00417 	ldw	r3,16(r16)
    9964:	18003426 	beq	r3,zero,9a38 <__swbuf_r+0x11c>
    9968:	2088000c 	andi	r2,r4,8192
    996c:	9c403fcc 	andi	r17,r19,255
    9970:	10001a26 	beq	r2,zero,99dc <__swbuf_r+0xc0>
    9974:	80800017 	ldw	r2,0(r16)
    9978:	81000517 	ldw	r4,20(r16)
    997c:	10c7c83a 	sub	r3,r2,r3
    9980:	1900200e 	bge	r3,r4,9a04 <__swbuf_r+0xe8>
    9984:	18c00044 	addi	r3,r3,1
    9988:	81000217 	ldw	r4,8(r16)
    998c:	11400044 	addi	r5,r2,1
    9990:	81400015 	stw	r5,0(r16)
    9994:	213fffc4 	addi	r4,r4,-1
    9998:	81000215 	stw	r4,8(r16)
    999c:	14c00005 	stb	r19,0(r2)
    99a0:	80800517 	ldw	r2,20(r16)
    99a4:	10c01e26 	beq	r2,r3,9a20 <__swbuf_r+0x104>
    99a8:	8080030b 	ldhu	r2,12(r16)
    99ac:	1080004c 	andi	r2,r2,1
    99b0:	10000226 	beq	r2,zero,99bc <__swbuf_r+0xa0>
    99b4:	00800284 	movi	r2,10
    99b8:	88801926 	beq	r17,r2,9a20 <__swbuf_r+0x104>
    99bc:	8805883a 	mov	r2,r17
    99c0:	dfc00417 	ldw	ra,16(sp)
    99c4:	dcc00317 	ldw	r19,12(sp)
    99c8:	dc800217 	ldw	r18,8(sp)
    99cc:	dc400117 	ldw	r17,4(sp)
    99d0:	dc000017 	ldw	r16,0(sp)
    99d4:	dec00504 	addi	sp,sp,20
    99d8:	f800283a 	ret
    99dc:	81401917 	ldw	r5,100(r16)
    99e0:	00b7ffc4 	movi	r2,-8193
    99e4:	21080014 	ori	r4,r4,8192
    99e8:	2884703a 	and	r2,r5,r2
    99ec:	80801915 	stw	r2,100(r16)
    99f0:	80800017 	ldw	r2,0(r16)
    99f4:	8100030d 	sth	r4,12(r16)
    99f8:	81000517 	ldw	r4,20(r16)
    99fc:	10c7c83a 	sub	r3,r2,r3
    9a00:	193fe016 	blt	r3,r4,9984 <__alt_data_end+0xfffe9984>
    9a04:	800b883a 	mov	r5,r16
    9a08:	9009883a 	mov	r4,r18
    9a0c:	00046100 	call	4610 <_fflush_r>
    9a10:	1000071e 	bne	r2,zero,9a30 <__swbuf_r+0x114>
    9a14:	80800017 	ldw	r2,0(r16)
    9a18:	00c00044 	movi	r3,1
    9a1c:	003fda06 	br	9988 <__alt_data_end+0xfffe9988>
    9a20:	800b883a 	mov	r5,r16
    9a24:	9009883a 	mov	r4,r18
    9a28:	00046100 	call	4610 <_fflush_r>
    9a2c:	103fe326 	beq	r2,zero,99bc <__alt_data_end+0xfffe99bc>
    9a30:	00bfffc4 	movi	r2,-1
    9a34:	003fe206 	br	99c0 <__alt_data_end+0xfffe99c0>
    9a38:	800b883a 	mov	r5,r16
    9a3c:	9009883a 	mov	r4,r18
    9a40:	0002a180 	call	2a18 <__swsetup_r>
    9a44:	103ffa1e 	bne	r2,zero,9a30 <__alt_data_end+0xfffe9a30>
    9a48:	8100030b 	ldhu	r4,12(r16)
    9a4c:	80c00417 	ldw	r3,16(r16)
    9a50:	003fc506 	br	9968 <__alt_data_end+0xfffe9968>
    9a54:	00049ec0 	call	49ec <__sinit>
    9a58:	003fbc06 	br	994c <__alt_data_end+0xfffe994c>

00009a5c <__swbuf>:
    9a5c:	00800074 	movhi	r2,1
    9a60:	1084a304 	addi	r2,r2,4748
    9a64:	280d883a 	mov	r6,r5
    9a68:	200b883a 	mov	r5,r4
    9a6c:	11000017 	ldw	r4,0(r2)
    9a70:	000991c1 	jmpi	991c <__swbuf_r>

00009a74 <_wcrtomb_r>:
    9a74:	defff604 	addi	sp,sp,-40
    9a78:	00800074 	movhi	r2,1
    9a7c:	dc800815 	stw	r18,32(sp)
    9a80:	dc400715 	stw	r17,28(sp)
    9a84:	dc000615 	stw	r16,24(sp)
    9a88:	1084a704 	addi	r2,r2,4764
    9a8c:	dfc00915 	stw	ra,36(sp)
    9a90:	2021883a 	mov	r16,r4
    9a94:	3823883a 	mov	r17,r7
    9a98:	14800017 	ldw	r18,0(r2)
    9a9c:	28001426 	beq	r5,zero,9af0 <_wcrtomb_r+0x7c>
    9aa0:	d9400415 	stw	r5,16(sp)
    9aa4:	d9800515 	stw	r6,20(sp)
    9aa8:	00050740 	call	5074 <__locale_charset>
    9aac:	d9800517 	ldw	r6,20(sp)
    9ab0:	d9400417 	ldw	r5,16(sp)
    9ab4:	100f883a 	mov	r7,r2
    9ab8:	dc400015 	stw	r17,0(sp)
    9abc:	8009883a 	mov	r4,r16
    9ac0:	903ee83a 	callr	r18
    9ac4:	00ffffc4 	movi	r3,-1
    9ac8:	10c0031e 	bne	r2,r3,9ad8 <_wcrtomb_r+0x64>
    9acc:	88000015 	stw	zero,0(r17)
    9ad0:	00c02284 	movi	r3,138
    9ad4:	80c00015 	stw	r3,0(r16)
    9ad8:	dfc00917 	ldw	ra,36(sp)
    9adc:	dc800817 	ldw	r18,32(sp)
    9ae0:	dc400717 	ldw	r17,28(sp)
    9ae4:	dc000617 	ldw	r16,24(sp)
    9ae8:	dec00a04 	addi	sp,sp,40
    9aec:	f800283a 	ret
    9af0:	00050740 	call	5074 <__locale_charset>
    9af4:	100f883a 	mov	r7,r2
    9af8:	dc400015 	stw	r17,0(sp)
    9afc:	000d883a 	mov	r6,zero
    9b00:	d9400104 	addi	r5,sp,4
    9b04:	8009883a 	mov	r4,r16
    9b08:	903ee83a 	callr	r18
    9b0c:	003fed06 	br	9ac4 <__alt_data_end+0xfffe9ac4>

00009b10 <wcrtomb>:
    9b10:	defff604 	addi	sp,sp,-40
    9b14:	00800074 	movhi	r2,1
    9b18:	dc800615 	stw	r18,24(sp)
    9b1c:	dc400515 	stw	r17,20(sp)
    9b20:	1084a304 	addi	r2,r2,4748
    9b24:	dfc00915 	stw	ra,36(sp)
    9b28:	dd000815 	stw	r20,32(sp)
    9b2c:	dcc00715 	stw	r19,28(sp)
    9b30:	dc000415 	stw	r16,16(sp)
    9b34:	3025883a 	mov	r18,r6
    9b38:	14400017 	ldw	r17,0(r2)
    9b3c:	20001926 	beq	r4,zero,9ba4 <wcrtomb+0x94>
    9b40:	00800074 	movhi	r2,1
    9b44:	1084a704 	addi	r2,r2,4764
    9b48:	15000017 	ldw	r20,0(r2)
    9b4c:	2021883a 	mov	r16,r4
    9b50:	2827883a 	mov	r19,r5
    9b54:	00050740 	call	5074 <__locale_charset>
    9b58:	100f883a 	mov	r7,r2
    9b5c:	dc800015 	stw	r18,0(sp)
    9b60:	980d883a 	mov	r6,r19
    9b64:	800b883a 	mov	r5,r16
    9b68:	8809883a 	mov	r4,r17
    9b6c:	a03ee83a 	callr	r20
    9b70:	00ffffc4 	movi	r3,-1
    9b74:	10c0031e 	bne	r2,r3,9b84 <wcrtomb+0x74>
    9b78:	90000015 	stw	zero,0(r18)
    9b7c:	00c02284 	movi	r3,138
    9b80:	88c00015 	stw	r3,0(r17)
    9b84:	dfc00917 	ldw	ra,36(sp)
    9b88:	dd000817 	ldw	r20,32(sp)
    9b8c:	dcc00717 	ldw	r19,28(sp)
    9b90:	dc800617 	ldw	r18,24(sp)
    9b94:	dc400517 	ldw	r17,20(sp)
    9b98:	dc000417 	ldw	r16,16(sp)
    9b9c:	dec00a04 	addi	sp,sp,40
    9ba0:	f800283a 	ret
    9ba4:	00800074 	movhi	r2,1
    9ba8:	1084a704 	addi	r2,r2,4764
    9bac:	14000017 	ldw	r16,0(r2)
    9bb0:	00050740 	call	5074 <__locale_charset>
    9bb4:	100f883a 	mov	r7,r2
    9bb8:	dc800015 	stw	r18,0(sp)
    9bbc:	000d883a 	mov	r6,zero
    9bc0:	d9400104 	addi	r5,sp,4
    9bc4:	8809883a 	mov	r4,r17
    9bc8:	803ee83a 	callr	r16
    9bcc:	003fe806 	br	9b70 <__alt_data_end+0xfffe9b70>

00009bd0 <__ascii_wctomb>:
    9bd0:	28000526 	beq	r5,zero,9be8 <__ascii_wctomb+0x18>
    9bd4:	00803fc4 	movi	r2,255
    9bd8:	11800536 	bltu	r2,r6,9bf0 <__ascii_wctomb+0x20>
    9bdc:	29800005 	stb	r6,0(r5)
    9be0:	00800044 	movi	r2,1
    9be4:	f800283a 	ret
    9be8:	0005883a 	mov	r2,zero
    9bec:	f800283a 	ret
    9bf0:	00802284 	movi	r2,138
    9bf4:	20800015 	stw	r2,0(r4)
    9bf8:	00bfffc4 	movi	r2,-1
    9bfc:	f800283a 	ret

00009c00 <_wctomb_r>:
    9c00:	00800074 	movhi	r2,1
    9c04:	defff904 	addi	sp,sp,-28
    9c08:	1084a704 	addi	r2,r2,4764
    9c0c:	dfc00615 	stw	ra,24(sp)
    9c10:	dc400515 	stw	r17,20(sp)
    9c14:	dc000415 	stw	r16,16(sp)
    9c18:	3823883a 	mov	r17,r7
    9c1c:	14000017 	ldw	r16,0(r2)
    9c20:	d9000115 	stw	r4,4(sp)
    9c24:	d9400215 	stw	r5,8(sp)
    9c28:	d9800315 	stw	r6,12(sp)
    9c2c:	00050740 	call	5074 <__locale_charset>
    9c30:	d9800317 	ldw	r6,12(sp)
    9c34:	d9400217 	ldw	r5,8(sp)
    9c38:	d9000117 	ldw	r4,4(sp)
    9c3c:	100f883a 	mov	r7,r2
    9c40:	dc400015 	stw	r17,0(sp)
    9c44:	803ee83a 	callr	r16
    9c48:	dfc00617 	ldw	ra,24(sp)
    9c4c:	dc400517 	ldw	r17,20(sp)
    9c50:	dc000417 	ldw	r16,16(sp)
    9c54:	dec00704 	addi	sp,sp,28
    9c58:	f800283a 	ret

00009c5c <__udivdi3>:
    9c5c:	defff504 	addi	sp,sp,-44
    9c60:	dcc00415 	stw	r19,16(sp)
    9c64:	dc000115 	stw	r16,4(sp)
    9c68:	dfc00a15 	stw	ra,40(sp)
    9c6c:	df000915 	stw	fp,36(sp)
    9c70:	ddc00815 	stw	r23,32(sp)
    9c74:	dd800715 	stw	r22,28(sp)
    9c78:	dd400615 	stw	r21,24(sp)
    9c7c:	dd000515 	stw	r20,20(sp)
    9c80:	dc800315 	stw	r18,12(sp)
    9c84:	dc400215 	stw	r17,8(sp)
    9c88:	2027883a 	mov	r19,r4
    9c8c:	2821883a 	mov	r16,r5
    9c90:	3800411e 	bne	r7,zero,9d98 <__udivdi3+0x13c>
    9c94:	3023883a 	mov	r17,r6
    9c98:	2025883a 	mov	r18,r4
    9c9c:	2980522e 	bgeu	r5,r6,9de8 <__udivdi3+0x18c>
    9ca0:	00bfffd4 	movui	r2,65535
    9ca4:	282d883a 	mov	r22,r5
    9ca8:	1180a836 	bltu	r2,r6,9f4c <__udivdi3+0x2f0>
    9cac:	00803fc4 	movi	r2,255
    9cb0:	1185803a 	cmpltu	r2,r2,r6
    9cb4:	100490fa 	slli	r2,r2,3
    9cb8:	3086d83a 	srl	r3,r6,r2
    9cbc:	01000074 	movhi	r4,1
    9cc0:	213daa04 	addi	r4,r4,-2392
    9cc4:	20c7883a 	add	r3,r4,r3
    9cc8:	18c00003 	ldbu	r3,0(r3)
    9ccc:	1885883a 	add	r2,r3,r2
    9cd0:	00c00804 	movi	r3,32
    9cd4:	1887c83a 	sub	r3,r3,r2
    9cd8:	18000526 	beq	r3,zero,9cf0 <__udivdi3+0x94>
    9cdc:	80e0983a 	sll	r16,r16,r3
    9ce0:	9884d83a 	srl	r2,r19,r2
    9ce4:	30e2983a 	sll	r17,r6,r3
    9ce8:	98e4983a 	sll	r18,r19,r3
    9cec:	142cb03a 	or	r22,r2,r16
    9cf0:	882ad43a 	srli	r21,r17,16
    9cf4:	b009883a 	mov	r4,r22
    9cf8:	8d3fffcc 	andi	r20,r17,65535
    9cfc:	a80b883a 	mov	r5,r21
    9d00:	00006840 	call	684 <__umodsi3>
    9d04:	b009883a 	mov	r4,r22
    9d08:	a80b883a 	mov	r5,r21
    9d0c:	1027883a 	mov	r19,r2
    9d10:	00006200 	call	620 <__udivsi3>
    9d14:	102d883a 	mov	r22,r2
    9d18:	9826943a 	slli	r19,r19,16
    9d1c:	9004d43a 	srli	r2,r18,16
    9d20:	a5a1383a 	mul	r16,r20,r22
    9d24:	14c4b03a 	or	r2,r2,r19
    9d28:	1400052e 	bgeu	r2,r16,9d40 <__udivdi3+0xe4>
    9d2c:	1445883a 	add	r2,r2,r17
    9d30:	b0ffffc4 	addi	r3,r22,-1
    9d34:	14400136 	bltu	r2,r17,9d3c <__udivdi3+0xe0>
    9d38:	14012336 	bltu	r2,r16,a1c8 <__udivdi3+0x56c>
    9d3c:	182d883a 	mov	r22,r3
    9d40:	1421c83a 	sub	r16,r2,r16
    9d44:	a80b883a 	mov	r5,r21
    9d48:	8009883a 	mov	r4,r16
    9d4c:	00006840 	call	684 <__umodsi3>
    9d50:	1027883a 	mov	r19,r2
    9d54:	a80b883a 	mov	r5,r21
    9d58:	8009883a 	mov	r4,r16
    9d5c:	00006200 	call	620 <__udivsi3>
    9d60:	9826943a 	slli	r19,r19,16
    9d64:	a0a9383a 	mul	r20,r20,r2
    9d68:	94bfffcc 	andi	r18,r18,65535
    9d6c:	94e4b03a 	or	r18,r18,r19
    9d70:	9500052e 	bgeu	r18,r20,9d88 <__udivdi3+0x12c>
    9d74:	8ca5883a 	add	r18,r17,r18
    9d78:	10ffffc4 	addi	r3,r2,-1
    9d7c:	9440f136 	bltu	r18,r17,a144 <__udivdi3+0x4e8>
    9d80:	9500f02e 	bgeu	r18,r20,a144 <__udivdi3+0x4e8>
    9d84:	10bfff84 	addi	r2,r2,-2
    9d88:	b00c943a 	slli	r6,r22,16
    9d8c:	0007883a 	mov	r3,zero
    9d90:	3084b03a 	or	r2,r6,r2
    9d94:	00005906 	br	9efc <__udivdi3+0x2a0>
    9d98:	29c05636 	bltu	r5,r7,9ef4 <__udivdi3+0x298>
    9d9c:	00bfffd4 	movui	r2,65535
    9da0:	11c0622e 	bgeu	r2,r7,9f2c <__udivdi3+0x2d0>
    9da4:	00804034 	movhi	r2,256
    9da8:	10bfffc4 	addi	r2,r2,-1
    9dac:	11c0ee36 	bltu	r2,r7,a168 <__udivdi3+0x50c>
    9db0:	00800404 	movi	r2,16
    9db4:	3886d83a 	srl	r3,r7,r2
    9db8:	01000074 	movhi	r4,1
    9dbc:	213daa04 	addi	r4,r4,-2392
    9dc0:	20c7883a 	add	r3,r4,r3
    9dc4:	18c00003 	ldbu	r3,0(r3)
    9dc8:	05400804 	movi	r21,32
    9dcc:	1885883a 	add	r2,r3,r2
    9dd0:	a8abc83a 	sub	r21,r21,r2
    9dd4:	a800621e 	bne	r21,zero,9f60 <__udivdi3+0x304>
    9dd8:	3c00e936 	bltu	r7,r16,a180 <__udivdi3+0x524>
    9ddc:	9985403a 	cmpgeu	r2,r19,r6
    9de0:	0007883a 	mov	r3,zero
    9de4:	00004506 	br	9efc <__udivdi3+0x2a0>
    9de8:	3000041e 	bne	r6,zero,9dfc <__udivdi3+0x1a0>
    9dec:	000b883a 	mov	r5,zero
    9df0:	01000044 	movi	r4,1
    9df4:	00006200 	call	620 <__udivsi3>
    9df8:	1023883a 	mov	r17,r2
    9dfc:	00bfffd4 	movui	r2,65535
    9e00:	14404e2e 	bgeu	r2,r17,9f3c <__udivdi3+0x2e0>
    9e04:	00804034 	movhi	r2,256
    9e08:	10bfffc4 	addi	r2,r2,-1
    9e0c:	1440d836 	bltu	r2,r17,a170 <__udivdi3+0x514>
    9e10:	00800404 	movi	r2,16
    9e14:	8886d83a 	srl	r3,r17,r2
    9e18:	01000074 	movhi	r4,1
    9e1c:	213daa04 	addi	r4,r4,-2392
    9e20:	20c7883a 	add	r3,r4,r3
    9e24:	18c00003 	ldbu	r3,0(r3)
    9e28:	1885883a 	add	r2,r3,r2
    9e2c:	00c00804 	movi	r3,32
    9e30:	1887c83a 	sub	r3,r3,r2
    9e34:	18008f1e 	bne	r3,zero,a074 <__udivdi3+0x418>
    9e38:	882ad43a 	srli	r21,r17,16
    9e3c:	8461c83a 	sub	r16,r16,r17
    9e40:	8d3fffcc 	andi	r20,r17,65535
    9e44:	00c00044 	movi	r3,1
    9e48:	8009883a 	mov	r4,r16
    9e4c:	a80b883a 	mov	r5,r21
    9e50:	d8c00015 	stw	r3,0(sp)
    9e54:	00006840 	call	684 <__umodsi3>
    9e58:	8009883a 	mov	r4,r16
    9e5c:	a80b883a 	mov	r5,r21
    9e60:	1027883a 	mov	r19,r2
    9e64:	00006200 	call	620 <__udivsi3>
    9e68:	9826943a 	slli	r19,r19,16
    9e6c:	9008d43a 	srli	r4,r18,16
    9e70:	1521383a 	mul	r16,r2,r20
    9e74:	102d883a 	mov	r22,r2
    9e78:	24c8b03a 	or	r4,r4,r19
    9e7c:	d8c00017 	ldw	r3,0(sp)
    9e80:	2400052e 	bgeu	r4,r16,9e98 <__udivdi3+0x23c>
    9e84:	2449883a 	add	r4,r4,r17
    9e88:	b0bfffc4 	addi	r2,r22,-1
    9e8c:	24400136 	bltu	r4,r17,9e94 <__udivdi3+0x238>
    9e90:	2400ca36 	bltu	r4,r16,a1bc <__udivdi3+0x560>
    9e94:	102d883a 	mov	r22,r2
    9e98:	2421c83a 	sub	r16,r4,r16
    9e9c:	a80b883a 	mov	r5,r21
    9ea0:	8009883a 	mov	r4,r16
    9ea4:	d8c00015 	stw	r3,0(sp)
    9ea8:	00006840 	call	684 <__umodsi3>
    9eac:	1027883a 	mov	r19,r2
    9eb0:	a80b883a 	mov	r5,r21
    9eb4:	8009883a 	mov	r4,r16
    9eb8:	00006200 	call	620 <__udivsi3>
    9ebc:	9826943a 	slli	r19,r19,16
    9ec0:	1529383a 	mul	r20,r2,r20
    9ec4:	94bfffcc 	andi	r18,r18,65535
    9ec8:	94e4b03a 	or	r18,r18,r19
    9ecc:	d8c00017 	ldw	r3,0(sp)
    9ed0:	9500052e 	bgeu	r18,r20,9ee8 <__udivdi3+0x28c>
    9ed4:	8ca5883a 	add	r18,r17,r18
    9ed8:	113fffc4 	addi	r4,r2,-1
    9edc:	94409736 	bltu	r18,r17,a13c <__udivdi3+0x4e0>
    9ee0:	9500962e 	bgeu	r18,r20,a13c <__udivdi3+0x4e0>
    9ee4:	10bfff84 	addi	r2,r2,-2
    9ee8:	b00c943a 	slli	r6,r22,16
    9eec:	3084b03a 	or	r2,r6,r2
    9ef0:	00000206 	br	9efc <__udivdi3+0x2a0>
    9ef4:	0007883a 	mov	r3,zero
    9ef8:	0005883a 	mov	r2,zero
    9efc:	dfc00a17 	ldw	ra,40(sp)
    9f00:	df000917 	ldw	fp,36(sp)
    9f04:	ddc00817 	ldw	r23,32(sp)
    9f08:	dd800717 	ldw	r22,28(sp)
    9f0c:	dd400617 	ldw	r21,24(sp)
    9f10:	dd000517 	ldw	r20,20(sp)
    9f14:	dcc00417 	ldw	r19,16(sp)
    9f18:	dc800317 	ldw	r18,12(sp)
    9f1c:	dc400217 	ldw	r17,8(sp)
    9f20:	dc000117 	ldw	r16,4(sp)
    9f24:	dec00b04 	addi	sp,sp,44
    9f28:	f800283a 	ret
    9f2c:	00803fc4 	movi	r2,255
    9f30:	11c5803a 	cmpltu	r2,r2,r7
    9f34:	100490fa 	slli	r2,r2,3
    9f38:	003f9e06 	br	9db4 <__alt_data_end+0xfffe9db4>
    9f3c:	00803fc4 	movi	r2,255
    9f40:	1445803a 	cmpltu	r2,r2,r17
    9f44:	100490fa 	slli	r2,r2,3
    9f48:	003fb206 	br	9e14 <__alt_data_end+0xfffe9e14>
    9f4c:	00804034 	movhi	r2,256
    9f50:	10bfffc4 	addi	r2,r2,-1
    9f54:	11808836 	bltu	r2,r6,a178 <__udivdi3+0x51c>
    9f58:	00800404 	movi	r2,16
    9f5c:	003f5606 	br	9cb8 <__alt_data_end+0xfffe9cb8>
    9f60:	30aed83a 	srl	r23,r6,r2
    9f64:	3d4e983a 	sll	r7,r7,r21
    9f68:	80acd83a 	srl	r22,r16,r2
    9f6c:	9884d83a 	srl	r2,r19,r2
    9f70:	3deeb03a 	or	r23,r7,r23
    9f74:	b824d43a 	srli	r18,r23,16
    9f78:	8560983a 	sll	r16,r16,r21
    9f7c:	b009883a 	mov	r4,r22
    9f80:	900b883a 	mov	r5,r18
    9f84:	3568983a 	sll	r20,r6,r21
    9f88:	1420b03a 	or	r16,r2,r16
    9f8c:	00006840 	call	684 <__umodsi3>
    9f90:	b009883a 	mov	r4,r22
    9f94:	900b883a 	mov	r5,r18
    9f98:	1023883a 	mov	r17,r2
    9f9c:	00006200 	call	620 <__udivsi3>
    9fa0:	8808943a 	slli	r4,r17,16
    9fa4:	bf3fffcc 	andi	fp,r23,65535
    9fa8:	8006d43a 	srli	r3,r16,16
    9fac:	e0a3383a 	mul	r17,fp,r2
    9fb0:	100d883a 	mov	r6,r2
    9fb4:	1906b03a 	or	r3,r3,r4
    9fb8:	1c40042e 	bgeu	r3,r17,9fcc <__udivdi3+0x370>
    9fbc:	1dc7883a 	add	r3,r3,r23
    9fc0:	10bfffc4 	addi	r2,r2,-1
    9fc4:	1dc0752e 	bgeu	r3,r23,a19c <__udivdi3+0x540>
    9fc8:	100d883a 	mov	r6,r2
    9fcc:	1c63c83a 	sub	r17,r3,r17
    9fd0:	900b883a 	mov	r5,r18
    9fd4:	8809883a 	mov	r4,r17
    9fd8:	d9800015 	stw	r6,0(sp)
    9fdc:	00006840 	call	684 <__umodsi3>
    9fe0:	102d883a 	mov	r22,r2
    9fe4:	8809883a 	mov	r4,r17
    9fe8:	900b883a 	mov	r5,r18
    9fec:	00006200 	call	620 <__udivsi3>
    9ff0:	b02c943a 	slli	r22,r22,16
    9ff4:	e089383a 	mul	r4,fp,r2
    9ff8:	843fffcc 	andi	r16,r16,65535
    9ffc:	85a0b03a 	or	r16,r16,r22
    a000:	d9800017 	ldw	r6,0(sp)
    a004:	8100042e 	bgeu	r16,r4,a018 <__udivdi3+0x3bc>
    a008:	85e1883a 	add	r16,r16,r23
    a00c:	10ffffc4 	addi	r3,r2,-1
    a010:	85c05e2e 	bgeu	r16,r23,a18c <__udivdi3+0x530>
    a014:	1805883a 	mov	r2,r3
    a018:	300c943a 	slli	r6,r6,16
    a01c:	a17fffcc 	andi	r5,r20,65535
    a020:	a028d43a 	srli	r20,r20,16
    a024:	3084b03a 	or	r2,r6,r2
    a028:	10ffffcc 	andi	r3,r2,65535
    a02c:	100cd43a 	srli	r6,r2,16
    a030:	194f383a 	mul	r7,r3,r5
    a034:	1d07383a 	mul	r3,r3,r20
    a038:	314b383a 	mul	r5,r6,r5
    a03c:	3810d43a 	srli	r8,r7,16
    a040:	8121c83a 	sub	r16,r16,r4
    a044:	1947883a 	add	r3,r3,r5
    a048:	40c7883a 	add	r3,r8,r3
    a04c:	350d383a 	mul	r6,r6,r20
    a050:	1940022e 	bgeu	r3,r5,a05c <__udivdi3+0x400>
    a054:	01000074 	movhi	r4,1
    a058:	310d883a 	add	r6,r6,r4
    a05c:	1828d43a 	srli	r20,r3,16
    a060:	a18d883a 	add	r6,r20,r6
    a064:	81803e36 	bltu	r16,r6,a160 <__udivdi3+0x504>
    a068:	81803826 	beq	r16,r6,a14c <__udivdi3+0x4f0>
    a06c:	0007883a 	mov	r3,zero
    a070:	003fa206 	br	9efc <__alt_data_end+0xfffe9efc>
    a074:	88e2983a 	sll	r17,r17,r3
    a078:	80a8d83a 	srl	r20,r16,r2
    a07c:	80e0983a 	sll	r16,r16,r3
    a080:	882ad43a 	srli	r21,r17,16
    a084:	9884d83a 	srl	r2,r19,r2
    a088:	a009883a 	mov	r4,r20
    a08c:	a80b883a 	mov	r5,r21
    a090:	142eb03a 	or	r23,r2,r16
    a094:	98e4983a 	sll	r18,r19,r3
    a098:	00006840 	call	684 <__umodsi3>
    a09c:	a009883a 	mov	r4,r20
    a0a0:	a80b883a 	mov	r5,r21
    a0a4:	1021883a 	mov	r16,r2
    a0a8:	00006200 	call	620 <__udivsi3>
    a0ac:	1039883a 	mov	fp,r2
    a0b0:	8d3fffcc 	andi	r20,r17,65535
    a0b4:	8020943a 	slli	r16,r16,16
    a0b8:	b804d43a 	srli	r2,r23,16
    a0bc:	a72d383a 	mul	r22,r20,fp
    a0c0:	1404b03a 	or	r2,r2,r16
    a0c4:	1580062e 	bgeu	r2,r22,a0e0 <__udivdi3+0x484>
    a0c8:	1445883a 	add	r2,r2,r17
    a0cc:	e0ffffc4 	addi	r3,fp,-1
    a0d0:	14403836 	bltu	r2,r17,a1b4 <__udivdi3+0x558>
    a0d4:	1580372e 	bgeu	r2,r22,a1b4 <__udivdi3+0x558>
    a0d8:	e73fff84 	addi	fp,fp,-2
    a0dc:	1445883a 	add	r2,r2,r17
    a0e0:	15adc83a 	sub	r22,r2,r22
    a0e4:	a80b883a 	mov	r5,r21
    a0e8:	b009883a 	mov	r4,r22
    a0ec:	00006840 	call	684 <__umodsi3>
    a0f0:	1027883a 	mov	r19,r2
    a0f4:	b009883a 	mov	r4,r22
    a0f8:	a80b883a 	mov	r5,r21
    a0fc:	00006200 	call	620 <__udivsi3>
    a100:	9826943a 	slli	r19,r19,16
    a104:	a0a1383a 	mul	r16,r20,r2
    a108:	b93fffcc 	andi	r4,r23,65535
    a10c:	24c8b03a 	or	r4,r4,r19
    a110:	2400062e 	bgeu	r4,r16,a12c <__udivdi3+0x4d0>
    a114:	2449883a 	add	r4,r4,r17
    a118:	10ffffc4 	addi	r3,r2,-1
    a11c:	24402336 	bltu	r4,r17,a1ac <__udivdi3+0x550>
    a120:	2400222e 	bgeu	r4,r16,a1ac <__udivdi3+0x550>
    a124:	10bfff84 	addi	r2,r2,-2
    a128:	2449883a 	add	r4,r4,r17
    a12c:	e038943a 	slli	fp,fp,16
    a130:	2421c83a 	sub	r16,r4,r16
    a134:	e086b03a 	or	r3,fp,r2
    a138:	003f4306 	br	9e48 <__alt_data_end+0xfffe9e48>
    a13c:	2005883a 	mov	r2,r4
    a140:	003f6906 	br	9ee8 <__alt_data_end+0xfffe9ee8>
    a144:	1805883a 	mov	r2,r3
    a148:	003f0f06 	br	9d88 <__alt_data_end+0xfffe9d88>
    a14c:	1806943a 	slli	r3,r3,16
    a150:	9d66983a 	sll	r19,r19,r21
    a154:	39ffffcc 	andi	r7,r7,65535
    a158:	19c7883a 	add	r3,r3,r7
    a15c:	98ffc32e 	bgeu	r19,r3,a06c <__alt_data_end+0xfffea06c>
    a160:	10bfffc4 	addi	r2,r2,-1
    a164:	003fc106 	br	a06c <__alt_data_end+0xfffea06c>
    a168:	00800604 	movi	r2,24
    a16c:	003f1106 	br	9db4 <__alt_data_end+0xfffe9db4>
    a170:	00800604 	movi	r2,24
    a174:	003f2706 	br	9e14 <__alt_data_end+0xfffe9e14>
    a178:	00800604 	movi	r2,24
    a17c:	003ece06 	br	9cb8 <__alt_data_end+0xfffe9cb8>
    a180:	0007883a 	mov	r3,zero
    a184:	00800044 	movi	r2,1
    a188:	003f5c06 	br	9efc <__alt_data_end+0xfffe9efc>
    a18c:	813fa12e 	bgeu	r16,r4,a014 <__alt_data_end+0xfffea014>
    a190:	10bfff84 	addi	r2,r2,-2
    a194:	85e1883a 	add	r16,r16,r23
    a198:	003f9f06 	br	a018 <__alt_data_end+0xfffea018>
    a19c:	1c7f8a2e 	bgeu	r3,r17,9fc8 <__alt_data_end+0xfffe9fc8>
    a1a0:	31bfff84 	addi	r6,r6,-2
    a1a4:	1dc7883a 	add	r3,r3,r23
    a1a8:	003f8806 	br	9fcc <__alt_data_end+0xfffe9fcc>
    a1ac:	1805883a 	mov	r2,r3
    a1b0:	003fde06 	br	a12c <__alt_data_end+0xfffea12c>
    a1b4:	1839883a 	mov	fp,r3
    a1b8:	003fc906 	br	a0e0 <__alt_data_end+0xfffea0e0>
    a1bc:	b5bfff84 	addi	r22,r22,-2
    a1c0:	2449883a 	add	r4,r4,r17
    a1c4:	003f3406 	br	9e98 <__alt_data_end+0xfffe9e98>
    a1c8:	b5bfff84 	addi	r22,r22,-2
    a1cc:	1445883a 	add	r2,r2,r17
    a1d0:	003edb06 	br	9d40 <__alt_data_end+0xfffe9d40>

0000a1d4 <__umoddi3>:
    a1d4:	defff404 	addi	sp,sp,-48
    a1d8:	df000a15 	stw	fp,40(sp)
    a1dc:	dc400315 	stw	r17,12(sp)
    a1e0:	dc000215 	stw	r16,8(sp)
    a1e4:	dfc00b15 	stw	ra,44(sp)
    a1e8:	ddc00915 	stw	r23,36(sp)
    a1ec:	dd800815 	stw	r22,32(sp)
    a1f0:	dd400715 	stw	r21,28(sp)
    a1f4:	dd000615 	stw	r20,24(sp)
    a1f8:	dcc00515 	stw	r19,20(sp)
    a1fc:	dc800415 	stw	r18,16(sp)
    a200:	2021883a 	mov	r16,r4
    a204:	2823883a 	mov	r17,r5
    a208:	2839883a 	mov	fp,r5
    a20c:	38003c1e 	bne	r7,zero,a300 <__umoddi3+0x12c>
    a210:	3027883a 	mov	r19,r6
    a214:	2029883a 	mov	r20,r4
    a218:	2980512e 	bgeu	r5,r6,a360 <__umoddi3+0x18c>
    a21c:	00bfffd4 	movui	r2,65535
    a220:	11809a36 	bltu	r2,r6,a48c <__umoddi3+0x2b8>
    a224:	01003fc4 	movi	r4,255
    a228:	2189803a 	cmpltu	r4,r4,r6
    a22c:	200890fa 	slli	r4,r4,3
    a230:	3104d83a 	srl	r2,r6,r4
    a234:	00c00074 	movhi	r3,1
    a238:	18fdaa04 	addi	r3,r3,-2392
    a23c:	1885883a 	add	r2,r3,r2
    a240:	10c00003 	ldbu	r3,0(r2)
    a244:	00800804 	movi	r2,32
    a248:	1909883a 	add	r4,r3,r4
    a24c:	1125c83a 	sub	r18,r2,r4
    a250:	90000526 	beq	r18,zero,a268 <__umoddi3+0x94>
    a254:	8ca2983a 	sll	r17,r17,r18
    a258:	8108d83a 	srl	r4,r16,r4
    a25c:	34a6983a 	sll	r19,r6,r18
    a260:	84a8983a 	sll	r20,r16,r18
    a264:	2478b03a 	or	fp,r4,r17
    a268:	982ed43a 	srli	r23,r19,16
    a26c:	e009883a 	mov	r4,fp
    a270:	9dbfffcc 	andi	r22,r19,65535
    a274:	b80b883a 	mov	r5,r23
    a278:	00006840 	call	684 <__umodsi3>
    a27c:	e009883a 	mov	r4,fp
    a280:	b80b883a 	mov	r5,r23
    a284:	102b883a 	mov	r21,r2
    a288:	00006200 	call	620 <__udivsi3>
    a28c:	a806943a 	slli	r3,r21,16
    a290:	a008d43a 	srli	r4,r20,16
    a294:	b085383a 	mul	r2,r22,r2
    a298:	20c8b03a 	or	r4,r4,r3
    a29c:	2080032e 	bgeu	r4,r2,a2ac <__umoddi3+0xd8>
    a2a0:	24c9883a 	add	r4,r4,r19
    a2a4:	24c00136 	bltu	r4,r19,a2ac <__umoddi3+0xd8>
    a2a8:	20811036 	bltu	r4,r2,a6ec <__umoddi3+0x518>
    a2ac:	20abc83a 	sub	r21,r4,r2
    a2b0:	b80b883a 	mov	r5,r23
    a2b4:	a809883a 	mov	r4,r21
    a2b8:	00006840 	call	684 <__umodsi3>
    a2bc:	1023883a 	mov	r17,r2
    a2c0:	b80b883a 	mov	r5,r23
    a2c4:	a809883a 	mov	r4,r21
    a2c8:	00006200 	call	620 <__udivsi3>
    a2cc:	8822943a 	slli	r17,r17,16
    a2d0:	b085383a 	mul	r2,r22,r2
    a2d4:	a0ffffcc 	andi	r3,r20,65535
    a2d8:	1c46b03a 	or	r3,r3,r17
    a2dc:	1880042e 	bgeu	r3,r2,a2f0 <__umoddi3+0x11c>
    a2e0:	1cc7883a 	add	r3,r3,r19
    a2e4:	1cc00236 	bltu	r3,r19,a2f0 <__umoddi3+0x11c>
    a2e8:	1880012e 	bgeu	r3,r2,a2f0 <__umoddi3+0x11c>
    a2ec:	1cc7883a 	add	r3,r3,r19
    a2f0:	1885c83a 	sub	r2,r3,r2
    a2f4:	1484d83a 	srl	r2,r2,r18
    a2f8:	0007883a 	mov	r3,zero
    a2fc:	00004f06 	br	a43c <__umoddi3+0x268>
    a300:	29c04c36 	bltu	r5,r7,a434 <__umoddi3+0x260>
    a304:	00bfffd4 	movui	r2,65535
    a308:	11c0582e 	bgeu	r2,r7,a46c <__umoddi3+0x298>
    a30c:	00804034 	movhi	r2,256
    a310:	10bfffc4 	addi	r2,r2,-1
    a314:	11c0e736 	bltu	r2,r7,a6b4 <__umoddi3+0x4e0>
    a318:	01000404 	movi	r4,16
    a31c:	3904d83a 	srl	r2,r7,r4
    a320:	00c00074 	movhi	r3,1
    a324:	18fdaa04 	addi	r3,r3,-2392
    a328:	1885883a 	add	r2,r3,r2
    a32c:	14c00003 	ldbu	r19,0(r2)
    a330:	00c00804 	movi	r3,32
    a334:	9927883a 	add	r19,r19,r4
    a338:	1ce9c83a 	sub	r20,r3,r19
    a33c:	a000581e 	bne	r20,zero,a4a0 <__umoddi3+0x2cc>
    a340:	3c400136 	bltu	r7,r17,a348 <__umoddi3+0x174>
    a344:	8180eb36 	bltu	r16,r6,a6f4 <__umoddi3+0x520>
    a348:	8185c83a 	sub	r2,r16,r6
    a34c:	89e3c83a 	sub	r17,r17,r7
    a350:	8089803a 	cmpltu	r4,r16,r2
    a354:	8939c83a 	sub	fp,r17,r4
    a358:	e007883a 	mov	r3,fp
    a35c:	00003706 	br	a43c <__umoddi3+0x268>
    a360:	3000041e 	bne	r6,zero,a374 <__umoddi3+0x1a0>
    a364:	000b883a 	mov	r5,zero
    a368:	01000044 	movi	r4,1
    a36c:	00006200 	call	620 <__udivsi3>
    a370:	1027883a 	mov	r19,r2
    a374:	00bfffd4 	movui	r2,65535
    a378:	14c0402e 	bgeu	r2,r19,a47c <__umoddi3+0x2a8>
    a37c:	00804034 	movhi	r2,256
    a380:	10bfffc4 	addi	r2,r2,-1
    a384:	14c0cd36 	bltu	r2,r19,a6bc <__umoddi3+0x4e8>
    a388:	00800404 	movi	r2,16
    a38c:	9886d83a 	srl	r3,r19,r2
    a390:	01000074 	movhi	r4,1
    a394:	213daa04 	addi	r4,r4,-2392
    a398:	20c7883a 	add	r3,r4,r3
    a39c:	18c00003 	ldbu	r3,0(r3)
    a3a0:	1887883a 	add	r3,r3,r2
    a3a4:	00800804 	movi	r2,32
    a3a8:	10e5c83a 	sub	r18,r2,r3
    a3ac:	9000901e 	bne	r18,zero,a5f0 <__umoddi3+0x41c>
    a3b0:	982cd43a 	srli	r22,r19,16
    a3b4:	8ce3c83a 	sub	r17,r17,r19
    a3b8:	9d7fffcc 	andi	r21,r19,65535
    a3bc:	b00b883a 	mov	r5,r22
    a3c0:	8809883a 	mov	r4,r17
    a3c4:	00006840 	call	684 <__umodsi3>
    a3c8:	8809883a 	mov	r4,r17
    a3cc:	b00b883a 	mov	r5,r22
    a3d0:	1021883a 	mov	r16,r2
    a3d4:	00006200 	call	620 <__udivsi3>
    a3d8:	8006943a 	slli	r3,r16,16
    a3dc:	a008d43a 	srli	r4,r20,16
    a3e0:	1545383a 	mul	r2,r2,r21
    a3e4:	20c8b03a 	or	r4,r4,r3
    a3e8:	2080042e 	bgeu	r4,r2,a3fc <__umoddi3+0x228>
    a3ec:	24c9883a 	add	r4,r4,r19
    a3f0:	24c00236 	bltu	r4,r19,a3fc <__umoddi3+0x228>
    a3f4:	2080012e 	bgeu	r4,r2,a3fc <__umoddi3+0x228>
    a3f8:	24c9883a 	add	r4,r4,r19
    a3fc:	20a1c83a 	sub	r16,r4,r2
    a400:	b00b883a 	mov	r5,r22
    a404:	8009883a 	mov	r4,r16
    a408:	00006840 	call	684 <__umodsi3>
    a40c:	1023883a 	mov	r17,r2
    a410:	b00b883a 	mov	r5,r22
    a414:	8009883a 	mov	r4,r16
    a418:	00006200 	call	620 <__udivsi3>
    a41c:	8822943a 	slli	r17,r17,16
    a420:	1545383a 	mul	r2,r2,r21
    a424:	a53fffcc 	andi	r20,r20,65535
    a428:	a446b03a 	or	r3,r20,r17
    a42c:	18bfb02e 	bgeu	r3,r2,a2f0 <__alt_data_end+0xfffea2f0>
    a430:	003fab06 	br	a2e0 <__alt_data_end+0xfffea2e0>
    a434:	2005883a 	mov	r2,r4
    a438:	2807883a 	mov	r3,r5
    a43c:	dfc00b17 	ldw	ra,44(sp)
    a440:	df000a17 	ldw	fp,40(sp)
    a444:	ddc00917 	ldw	r23,36(sp)
    a448:	dd800817 	ldw	r22,32(sp)
    a44c:	dd400717 	ldw	r21,28(sp)
    a450:	dd000617 	ldw	r20,24(sp)
    a454:	dcc00517 	ldw	r19,20(sp)
    a458:	dc800417 	ldw	r18,16(sp)
    a45c:	dc400317 	ldw	r17,12(sp)
    a460:	dc000217 	ldw	r16,8(sp)
    a464:	dec00c04 	addi	sp,sp,48
    a468:	f800283a 	ret
    a46c:	04c03fc4 	movi	r19,255
    a470:	99c9803a 	cmpltu	r4,r19,r7
    a474:	200890fa 	slli	r4,r4,3
    a478:	003fa806 	br	a31c <__alt_data_end+0xfffea31c>
    a47c:	00803fc4 	movi	r2,255
    a480:	14c5803a 	cmpltu	r2,r2,r19
    a484:	100490fa 	slli	r2,r2,3
    a488:	003fc006 	br	a38c <__alt_data_end+0xfffea38c>
    a48c:	00804034 	movhi	r2,256
    a490:	10bfffc4 	addi	r2,r2,-1
    a494:	11808b36 	bltu	r2,r6,a6c4 <__umoddi3+0x4f0>
    a498:	01000404 	movi	r4,16
    a49c:	003f6406 	br	a230 <__alt_data_end+0xfffea230>
    a4a0:	34c4d83a 	srl	r2,r6,r19
    a4a4:	3d0e983a 	sll	r7,r7,r20
    a4a8:	8cf8d83a 	srl	fp,r17,r19
    a4ac:	8d10983a 	sll	r8,r17,r20
    a4b0:	38aab03a 	or	r21,r7,r2
    a4b4:	a82cd43a 	srli	r22,r21,16
    a4b8:	84e2d83a 	srl	r17,r16,r19
    a4bc:	e009883a 	mov	r4,fp
    a4c0:	b00b883a 	mov	r5,r22
    a4c4:	8a22b03a 	or	r17,r17,r8
    a4c8:	3524983a 	sll	r18,r6,r20
    a4cc:	00006840 	call	684 <__umodsi3>
    a4d0:	e009883a 	mov	r4,fp
    a4d4:	b00b883a 	mov	r5,r22
    a4d8:	102f883a 	mov	r23,r2
    a4dc:	00006200 	call	620 <__udivsi3>
    a4e0:	100d883a 	mov	r6,r2
    a4e4:	b808943a 	slli	r4,r23,16
    a4e8:	aa3fffcc 	andi	r8,r21,65535
    a4ec:	8804d43a 	srli	r2,r17,16
    a4f0:	41af383a 	mul	r23,r8,r6
    a4f4:	8520983a 	sll	r16,r16,r20
    a4f8:	1104b03a 	or	r2,r2,r4
    a4fc:	15c0042e 	bgeu	r2,r23,a510 <__umoddi3+0x33c>
    a500:	1545883a 	add	r2,r2,r21
    a504:	30ffffc4 	addi	r3,r6,-1
    a508:	1540742e 	bgeu	r2,r21,a6dc <__umoddi3+0x508>
    a50c:	180d883a 	mov	r6,r3
    a510:	15efc83a 	sub	r23,r2,r23
    a514:	b00b883a 	mov	r5,r22
    a518:	b809883a 	mov	r4,r23
    a51c:	d9800115 	stw	r6,4(sp)
    a520:	da000015 	stw	r8,0(sp)
    a524:	00006840 	call	684 <__umodsi3>
    a528:	b00b883a 	mov	r5,r22
    a52c:	b809883a 	mov	r4,r23
    a530:	1039883a 	mov	fp,r2
    a534:	00006200 	call	620 <__udivsi3>
    a538:	da000017 	ldw	r8,0(sp)
    a53c:	e038943a 	slli	fp,fp,16
    a540:	100b883a 	mov	r5,r2
    a544:	4089383a 	mul	r4,r8,r2
    a548:	8a3fffcc 	andi	r8,r17,65535
    a54c:	4710b03a 	or	r8,r8,fp
    a550:	d9800117 	ldw	r6,4(sp)
    a554:	4100042e 	bgeu	r8,r4,a568 <__umoddi3+0x394>
    a558:	4551883a 	add	r8,r8,r21
    a55c:	10bfffc4 	addi	r2,r2,-1
    a560:	45405a2e 	bgeu	r8,r21,a6cc <__umoddi3+0x4f8>
    a564:	100b883a 	mov	r5,r2
    a568:	300c943a 	slli	r6,r6,16
    a56c:	91ffffcc 	andi	r7,r18,65535
    a570:	9004d43a 	srli	r2,r18,16
    a574:	314cb03a 	or	r6,r6,r5
    a578:	317fffcc 	andi	r5,r6,65535
    a57c:	300cd43a 	srli	r6,r6,16
    a580:	29d3383a 	mul	r9,r5,r7
    a584:	288b383a 	mul	r5,r5,r2
    a588:	31cf383a 	mul	r7,r6,r7
    a58c:	4806d43a 	srli	r3,r9,16
    a590:	4111c83a 	sub	r8,r8,r4
    a594:	29cb883a 	add	r5,r5,r7
    a598:	194b883a 	add	r5,r3,r5
    a59c:	3085383a 	mul	r2,r6,r2
    a5a0:	29c0022e 	bgeu	r5,r7,a5ac <__umoddi3+0x3d8>
    a5a4:	00c00074 	movhi	r3,1
    a5a8:	10c5883a 	add	r2,r2,r3
    a5ac:	2808d43a 	srli	r4,r5,16
    a5b0:	280a943a 	slli	r5,r5,16
    a5b4:	4a7fffcc 	andi	r9,r9,65535
    a5b8:	2085883a 	add	r2,r4,r2
    a5bc:	2a4b883a 	add	r5,r5,r9
    a5c0:	40803636 	bltu	r8,r2,a69c <__umoddi3+0x4c8>
    a5c4:	40804d26 	beq	r8,r2,a6fc <__umoddi3+0x528>
    a5c8:	4089c83a 	sub	r4,r8,r2
    a5cc:	280f883a 	mov	r7,r5
    a5d0:	81cfc83a 	sub	r7,r16,r7
    a5d4:	81c7803a 	cmpltu	r3,r16,r7
    a5d8:	20c7c83a 	sub	r3,r4,r3
    a5dc:	1cc4983a 	sll	r2,r3,r19
    a5e0:	3d0ed83a 	srl	r7,r7,r20
    a5e4:	1d06d83a 	srl	r3,r3,r20
    a5e8:	11c4b03a 	or	r2,r2,r7
    a5ec:	003f9306 	br	a43c <__alt_data_end+0xfffea43c>
    a5f0:	9ca6983a 	sll	r19,r19,r18
    a5f4:	88e8d83a 	srl	r20,r17,r3
    a5f8:	80c4d83a 	srl	r2,r16,r3
    a5fc:	982cd43a 	srli	r22,r19,16
    a600:	8ca2983a 	sll	r17,r17,r18
    a604:	a009883a 	mov	r4,r20
    a608:	b00b883a 	mov	r5,r22
    a60c:	1478b03a 	or	fp,r2,r17
    a610:	00006840 	call	684 <__umodsi3>
    a614:	a009883a 	mov	r4,r20
    a618:	b00b883a 	mov	r5,r22
    a61c:	1023883a 	mov	r17,r2
    a620:	00006200 	call	620 <__udivsi3>
    a624:	9d7fffcc 	andi	r21,r19,65535
    a628:	880a943a 	slli	r5,r17,16
    a62c:	e008d43a 	srli	r4,fp,16
    a630:	a885383a 	mul	r2,r21,r2
    a634:	84a8983a 	sll	r20,r16,r18
    a638:	2148b03a 	or	r4,r4,r5
    a63c:	2080042e 	bgeu	r4,r2,a650 <__umoddi3+0x47c>
    a640:	24c9883a 	add	r4,r4,r19
    a644:	24c00236 	bltu	r4,r19,a650 <__umoddi3+0x47c>
    a648:	2080012e 	bgeu	r4,r2,a650 <__umoddi3+0x47c>
    a64c:	24c9883a 	add	r4,r4,r19
    a650:	20a3c83a 	sub	r17,r4,r2
    a654:	b00b883a 	mov	r5,r22
    a658:	8809883a 	mov	r4,r17
    a65c:	00006840 	call	684 <__umodsi3>
    a660:	102f883a 	mov	r23,r2
    a664:	8809883a 	mov	r4,r17
    a668:	b00b883a 	mov	r5,r22
    a66c:	00006200 	call	620 <__udivsi3>
    a670:	b82e943a 	slli	r23,r23,16
    a674:	a885383a 	mul	r2,r21,r2
    a678:	e13fffcc 	andi	r4,fp,65535
    a67c:	25c8b03a 	or	r4,r4,r23
    a680:	2080042e 	bgeu	r4,r2,a694 <__umoddi3+0x4c0>
    a684:	24c9883a 	add	r4,r4,r19
    a688:	24c00236 	bltu	r4,r19,a694 <__umoddi3+0x4c0>
    a68c:	2080012e 	bgeu	r4,r2,a694 <__umoddi3+0x4c0>
    a690:	24c9883a 	add	r4,r4,r19
    a694:	20a3c83a 	sub	r17,r4,r2
    a698:	003f4806 	br	a3bc <__alt_data_end+0xfffea3bc>
    a69c:	2c8fc83a 	sub	r7,r5,r18
    a6a0:	1545c83a 	sub	r2,r2,r21
    a6a4:	29cb803a 	cmpltu	r5,r5,r7
    a6a8:	1145c83a 	sub	r2,r2,r5
    a6ac:	4089c83a 	sub	r4,r8,r2
    a6b0:	003fc706 	br	a5d0 <__alt_data_end+0xfffea5d0>
    a6b4:	01000604 	movi	r4,24
    a6b8:	003f1806 	br	a31c <__alt_data_end+0xfffea31c>
    a6bc:	00800604 	movi	r2,24
    a6c0:	003f3206 	br	a38c <__alt_data_end+0xfffea38c>
    a6c4:	01000604 	movi	r4,24
    a6c8:	003ed906 	br	a230 <__alt_data_end+0xfffea230>
    a6cc:	413fa52e 	bgeu	r8,r4,a564 <__alt_data_end+0xfffea564>
    a6d0:	297fff84 	addi	r5,r5,-2
    a6d4:	4551883a 	add	r8,r8,r21
    a6d8:	003fa306 	br	a568 <__alt_data_end+0xfffea568>
    a6dc:	15ff8b2e 	bgeu	r2,r23,a50c <__alt_data_end+0xfffea50c>
    a6e0:	31bfff84 	addi	r6,r6,-2
    a6e4:	1545883a 	add	r2,r2,r21
    a6e8:	003f8906 	br	a510 <__alt_data_end+0xfffea510>
    a6ec:	24c9883a 	add	r4,r4,r19
    a6f0:	003eee06 	br	a2ac <__alt_data_end+0xfffea2ac>
    a6f4:	8005883a 	mov	r2,r16
    a6f8:	003f1706 	br	a358 <__alt_data_end+0xfffea358>
    a6fc:	817fe736 	bltu	r16,r5,a69c <__alt_data_end+0xfffea69c>
    a700:	280f883a 	mov	r7,r5
    a704:	0009883a 	mov	r4,zero
    a708:	003fb106 	br	a5d0 <__alt_data_end+0xfffea5d0>

0000a70c <__adddf3>:
    a70c:	02c00434 	movhi	r11,16
    a710:	5affffc4 	addi	r11,r11,-1
    a714:	2806d7fa 	srli	r3,r5,31
    a718:	2ad4703a 	and	r10,r5,r11
    a71c:	3ad2703a 	and	r9,r7,r11
    a720:	3804d53a 	srli	r2,r7,20
    a724:	3018d77a 	srli	r12,r6,29
    a728:	280ad53a 	srli	r5,r5,20
    a72c:	501490fa 	slli	r10,r10,3
    a730:	2010d77a 	srli	r8,r4,29
    a734:	481290fa 	slli	r9,r9,3
    a738:	380ed7fa 	srli	r7,r7,31
    a73c:	defffb04 	addi	sp,sp,-20
    a740:	dc800215 	stw	r18,8(sp)
    a744:	dc400115 	stw	r17,4(sp)
    a748:	dc000015 	stw	r16,0(sp)
    a74c:	dfc00415 	stw	ra,16(sp)
    a750:	dcc00315 	stw	r19,12(sp)
    a754:	1c803fcc 	andi	r18,r3,255
    a758:	2c01ffcc 	andi	r16,r5,2047
    a75c:	5210b03a 	or	r8,r10,r8
    a760:	202290fa 	slli	r17,r4,3
    a764:	1081ffcc 	andi	r2,r2,2047
    a768:	4b12b03a 	or	r9,r9,r12
    a76c:	300c90fa 	slli	r6,r6,3
    a770:	91c07526 	beq	r18,r7,a948 <__adddf3+0x23c>
    a774:	8087c83a 	sub	r3,r16,r2
    a778:	00c0ab0e 	bge	zero,r3,aa28 <__adddf3+0x31c>
    a77c:	10002a1e 	bne	r2,zero,a828 <__adddf3+0x11c>
    a780:	4984b03a 	or	r2,r9,r6
    a784:	1000961e 	bne	r2,zero,a9e0 <__adddf3+0x2d4>
    a788:	888001cc 	andi	r2,r17,7
    a78c:	10000726 	beq	r2,zero,a7ac <__adddf3+0xa0>
    a790:	888003cc 	andi	r2,r17,15
    a794:	00c00104 	movi	r3,4
    a798:	10c00426 	beq	r2,r3,a7ac <__adddf3+0xa0>
    a79c:	88c7883a 	add	r3,r17,r3
    a7a0:	1c63803a 	cmpltu	r17,r3,r17
    a7a4:	4451883a 	add	r8,r8,r17
    a7a8:	1823883a 	mov	r17,r3
    a7ac:	4080202c 	andhi	r2,r8,128
    a7b0:	10005926 	beq	r2,zero,a918 <__adddf3+0x20c>
    a7b4:	84000044 	addi	r16,r16,1
    a7b8:	0081ffc4 	movi	r2,2047
    a7bc:	8080ba26 	beq	r16,r2,aaa8 <__adddf3+0x39c>
    a7c0:	00bfe034 	movhi	r2,65408
    a7c4:	10bfffc4 	addi	r2,r2,-1
    a7c8:	4090703a 	and	r8,r8,r2
    a7cc:	4004977a 	slli	r2,r8,29
    a7d0:	4010927a 	slli	r8,r8,9
    a7d4:	8822d0fa 	srli	r17,r17,3
    a7d8:	8401ffcc 	andi	r16,r16,2047
    a7dc:	4010d33a 	srli	r8,r8,12
    a7e0:	9007883a 	mov	r3,r18
    a7e4:	1444b03a 	or	r2,r2,r17
    a7e8:	8401ffcc 	andi	r16,r16,2047
    a7ec:	8020953a 	slli	r16,r16,20
    a7f0:	18c03fcc 	andi	r3,r3,255
    a7f4:	01000434 	movhi	r4,16
    a7f8:	213fffc4 	addi	r4,r4,-1
    a7fc:	180697fa 	slli	r3,r3,31
    a800:	4110703a 	and	r8,r8,r4
    a804:	4410b03a 	or	r8,r8,r16
    a808:	40c6b03a 	or	r3,r8,r3
    a80c:	dfc00417 	ldw	ra,16(sp)
    a810:	dcc00317 	ldw	r19,12(sp)
    a814:	dc800217 	ldw	r18,8(sp)
    a818:	dc400117 	ldw	r17,4(sp)
    a81c:	dc000017 	ldw	r16,0(sp)
    a820:	dec00504 	addi	sp,sp,20
    a824:	f800283a 	ret
    a828:	0081ffc4 	movi	r2,2047
    a82c:	80bfd626 	beq	r16,r2,a788 <__alt_data_end+0xfffea788>
    a830:	4a402034 	orhi	r9,r9,128
    a834:	00800e04 	movi	r2,56
    a838:	10c09f16 	blt	r2,r3,aab8 <__adddf3+0x3ac>
    a83c:	008007c4 	movi	r2,31
    a840:	10c0c216 	blt	r2,r3,ab4c <__adddf3+0x440>
    a844:	00800804 	movi	r2,32
    a848:	10c5c83a 	sub	r2,r2,r3
    a84c:	488a983a 	sll	r5,r9,r2
    a850:	30c8d83a 	srl	r4,r6,r3
    a854:	3084983a 	sll	r2,r6,r2
    a858:	48c6d83a 	srl	r3,r9,r3
    a85c:	290cb03a 	or	r6,r5,r4
    a860:	1004c03a 	cmpne	r2,r2,zero
    a864:	308cb03a 	or	r6,r6,r2
    a868:	898dc83a 	sub	r6,r17,r6
    a86c:	89a3803a 	cmpltu	r17,r17,r6
    a870:	40d1c83a 	sub	r8,r8,r3
    a874:	4451c83a 	sub	r8,r8,r17
    a878:	3023883a 	mov	r17,r6
    a87c:	4080202c 	andhi	r2,r8,128
    a880:	10002326 	beq	r2,zero,a910 <__adddf3+0x204>
    a884:	04c02034 	movhi	r19,128
    a888:	9cffffc4 	addi	r19,r19,-1
    a88c:	44e6703a 	and	r19,r8,r19
    a890:	98007626 	beq	r19,zero,aa6c <__adddf3+0x360>
    a894:	9809883a 	mov	r4,r19
    a898:	000cd100 	call	cd10 <__clzsi2>
    a89c:	10fffe04 	addi	r3,r2,-8
    a8a0:	010007c4 	movi	r4,31
    a8a4:	20c07716 	blt	r4,r3,aa84 <__adddf3+0x378>
    a8a8:	00800804 	movi	r2,32
    a8ac:	10c5c83a 	sub	r2,r2,r3
    a8b0:	8884d83a 	srl	r2,r17,r2
    a8b4:	98d0983a 	sll	r8,r19,r3
    a8b8:	88e2983a 	sll	r17,r17,r3
    a8bc:	1204b03a 	or	r2,r2,r8
    a8c0:	1c007416 	blt	r3,r16,aa94 <__adddf3+0x388>
    a8c4:	1c21c83a 	sub	r16,r3,r16
    a8c8:	82000044 	addi	r8,r16,1
    a8cc:	00c007c4 	movi	r3,31
    a8d0:	1a009116 	blt	r3,r8,ab18 <__adddf3+0x40c>
    a8d4:	00c00804 	movi	r3,32
    a8d8:	1a07c83a 	sub	r3,r3,r8
    a8dc:	8a08d83a 	srl	r4,r17,r8
    a8e0:	88e2983a 	sll	r17,r17,r3
    a8e4:	10c6983a 	sll	r3,r2,r3
    a8e8:	1210d83a 	srl	r8,r2,r8
    a8ec:	8804c03a 	cmpne	r2,r17,zero
    a8f0:	1906b03a 	or	r3,r3,r4
    a8f4:	18a2b03a 	or	r17,r3,r2
    a8f8:	0021883a 	mov	r16,zero
    a8fc:	003fa206 	br	a788 <__alt_data_end+0xfffea788>
    a900:	1890b03a 	or	r8,r3,r2
    a904:	40017d26 	beq	r8,zero,aefc <__adddf3+0x7f0>
    a908:	1011883a 	mov	r8,r2
    a90c:	1823883a 	mov	r17,r3
    a910:	888001cc 	andi	r2,r17,7
    a914:	103f9e1e 	bne	r2,zero,a790 <__alt_data_end+0xfffea790>
    a918:	4004977a 	slli	r2,r8,29
    a91c:	8822d0fa 	srli	r17,r17,3
    a920:	4010d0fa 	srli	r8,r8,3
    a924:	9007883a 	mov	r3,r18
    a928:	1444b03a 	or	r2,r2,r17
    a92c:	0101ffc4 	movi	r4,2047
    a930:	81002426 	beq	r16,r4,a9c4 <__adddf3+0x2b8>
    a934:	8120703a 	and	r16,r16,r4
    a938:	01000434 	movhi	r4,16
    a93c:	213fffc4 	addi	r4,r4,-1
    a940:	4110703a 	and	r8,r8,r4
    a944:	003fa806 	br	a7e8 <__alt_data_end+0xfffea7e8>
    a948:	8089c83a 	sub	r4,r16,r2
    a94c:	01005e0e 	bge	zero,r4,aac8 <__adddf3+0x3bc>
    a950:	10002b26 	beq	r2,zero,aa00 <__adddf3+0x2f4>
    a954:	0081ffc4 	movi	r2,2047
    a958:	80bf8b26 	beq	r16,r2,a788 <__alt_data_end+0xfffea788>
    a95c:	4a402034 	orhi	r9,r9,128
    a960:	00800e04 	movi	r2,56
    a964:	1100a40e 	bge	r2,r4,abf8 <__adddf3+0x4ec>
    a968:	498cb03a 	or	r6,r9,r6
    a96c:	300ac03a 	cmpne	r5,r6,zero
    a970:	0013883a 	mov	r9,zero
    a974:	2c4b883a 	add	r5,r5,r17
    a978:	2c63803a 	cmpltu	r17,r5,r17
    a97c:	4a11883a 	add	r8,r9,r8
    a980:	8a11883a 	add	r8,r17,r8
    a984:	2823883a 	mov	r17,r5
    a988:	4080202c 	andhi	r2,r8,128
    a98c:	103fe026 	beq	r2,zero,a910 <__alt_data_end+0xfffea910>
    a990:	84000044 	addi	r16,r16,1
    a994:	0081ffc4 	movi	r2,2047
    a998:	8080d226 	beq	r16,r2,ace4 <__adddf3+0x5d8>
    a99c:	00bfe034 	movhi	r2,65408
    a9a0:	10bfffc4 	addi	r2,r2,-1
    a9a4:	4090703a 	and	r8,r8,r2
    a9a8:	880ad07a 	srli	r5,r17,1
    a9ac:	400897fa 	slli	r4,r8,31
    a9b0:	88c0004c 	andi	r3,r17,1
    a9b4:	28e2b03a 	or	r17,r5,r3
    a9b8:	4010d07a 	srli	r8,r8,1
    a9bc:	2462b03a 	or	r17,r4,r17
    a9c0:	003f7106 	br	a788 <__alt_data_end+0xfffea788>
    a9c4:	4088b03a 	or	r4,r8,r2
    a9c8:	20014526 	beq	r4,zero,aee0 <__adddf3+0x7d4>
    a9cc:	01000434 	movhi	r4,16
    a9d0:	42000234 	orhi	r8,r8,8
    a9d4:	213fffc4 	addi	r4,r4,-1
    a9d8:	4110703a 	and	r8,r8,r4
    a9dc:	003f8206 	br	a7e8 <__alt_data_end+0xfffea7e8>
    a9e0:	18ffffc4 	addi	r3,r3,-1
    a9e4:	1800491e 	bne	r3,zero,ab0c <__adddf3+0x400>
    a9e8:	898bc83a 	sub	r5,r17,r6
    a9ec:	8963803a 	cmpltu	r17,r17,r5
    a9f0:	4251c83a 	sub	r8,r8,r9
    a9f4:	4451c83a 	sub	r8,r8,r17
    a9f8:	2823883a 	mov	r17,r5
    a9fc:	003f9f06 	br	a87c <__alt_data_end+0xfffea87c>
    aa00:	4984b03a 	or	r2,r9,r6
    aa04:	103f6026 	beq	r2,zero,a788 <__alt_data_end+0xfffea788>
    aa08:	213fffc4 	addi	r4,r4,-1
    aa0c:	2000931e 	bne	r4,zero,ac5c <__adddf3+0x550>
    aa10:	898d883a 	add	r6,r17,r6
    aa14:	3463803a 	cmpltu	r17,r6,r17
    aa18:	4251883a 	add	r8,r8,r9
    aa1c:	8a11883a 	add	r8,r17,r8
    aa20:	3023883a 	mov	r17,r6
    aa24:	003fd806 	br	a988 <__alt_data_end+0xfffea988>
    aa28:	1800541e 	bne	r3,zero,ab7c <__adddf3+0x470>
    aa2c:	80800044 	addi	r2,r16,1
    aa30:	1081ffcc 	andi	r2,r2,2047
    aa34:	00c00044 	movi	r3,1
    aa38:	1880a00e 	bge	r3,r2,acbc <__adddf3+0x5b0>
    aa3c:	8989c83a 	sub	r4,r17,r6
    aa40:	8905803a 	cmpltu	r2,r17,r4
    aa44:	4267c83a 	sub	r19,r8,r9
    aa48:	98a7c83a 	sub	r19,r19,r2
    aa4c:	9880202c 	andhi	r2,r19,128
    aa50:	10006326 	beq	r2,zero,abe0 <__adddf3+0x4d4>
    aa54:	3463c83a 	sub	r17,r6,r17
    aa58:	4a07c83a 	sub	r3,r9,r8
    aa5c:	344d803a 	cmpltu	r6,r6,r17
    aa60:	19a7c83a 	sub	r19,r3,r6
    aa64:	3825883a 	mov	r18,r7
    aa68:	983f8a1e 	bne	r19,zero,a894 <__alt_data_end+0xfffea894>
    aa6c:	8809883a 	mov	r4,r17
    aa70:	000cd100 	call	cd10 <__clzsi2>
    aa74:	10800804 	addi	r2,r2,32
    aa78:	10fffe04 	addi	r3,r2,-8
    aa7c:	010007c4 	movi	r4,31
    aa80:	20ff890e 	bge	r4,r3,a8a8 <__alt_data_end+0xfffea8a8>
    aa84:	10bff604 	addi	r2,r2,-40
    aa88:	8884983a 	sll	r2,r17,r2
    aa8c:	0023883a 	mov	r17,zero
    aa90:	1c3f8c0e 	bge	r3,r16,a8c4 <__alt_data_end+0xfffea8c4>
    aa94:	023fe034 	movhi	r8,65408
    aa98:	423fffc4 	addi	r8,r8,-1
    aa9c:	80e1c83a 	sub	r16,r16,r3
    aaa0:	1210703a 	and	r8,r2,r8
    aaa4:	003f3806 	br	a788 <__alt_data_end+0xfffea788>
    aaa8:	9007883a 	mov	r3,r18
    aaac:	0011883a 	mov	r8,zero
    aab0:	0005883a 	mov	r2,zero
    aab4:	003f4c06 	br	a7e8 <__alt_data_end+0xfffea7e8>
    aab8:	498cb03a 	or	r6,r9,r6
    aabc:	300cc03a 	cmpne	r6,r6,zero
    aac0:	0007883a 	mov	r3,zero
    aac4:	003f6806 	br	a868 <__alt_data_end+0xfffea868>
    aac8:	20009c1e 	bne	r4,zero,ad3c <__adddf3+0x630>
    aacc:	80800044 	addi	r2,r16,1
    aad0:	1141ffcc 	andi	r5,r2,2047
    aad4:	01000044 	movi	r4,1
    aad8:	2140670e 	bge	r4,r5,ac78 <__adddf3+0x56c>
    aadc:	0101ffc4 	movi	r4,2047
    aae0:	11007f26 	beq	r2,r4,ace0 <__adddf3+0x5d4>
    aae4:	898d883a 	add	r6,r17,r6
    aae8:	4247883a 	add	r3,r8,r9
    aaec:	3451803a 	cmpltu	r8,r6,r17
    aaf0:	40d1883a 	add	r8,r8,r3
    aaf4:	402297fa 	slli	r17,r8,31
    aaf8:	300cd07a 	srli	r6,r6,1
    aafc:	4010d07a 	srli	r8,r8,1
    ab00:	1021883a 	mov	r16,r2
    ab04:	89a2b03a 	or	r17,r17,r6
    ab08:	003f1f06 	br	a788 <__alt_data_end+0xfffea788>
    ab0c:	0081ffc4 	movi	r2,2047
    ab10:	80bf481e 	bne	r16,r2,a834 <__alt_data_end+0xfffea834>
    ab14:	003f1c06 	br	a788 <__alt_data_end+0xfffea788>
    ab18:	843ff844 	addi	r16,r16,-31
    ab1c:	01000804 	movi	r4,32
    ab20:	1406d83a 	srl	r3,r2,r16
    ab24:	41005026 	beq	r8,r4,ac68 <__adddf3+0x55c>
    ab28:	01001004 	movi	r4,64
    ab2c:	2211c83a 	sub	r8,r4,r8
    ab30:	1204983a 	sll	r2,r2,r8
    ab34:	88a2b03a 	or	r17,r17,r2
    ab38:	8822c03a 	cmpne	r17,r17,zero
    ab3c:	1c62b03a 	or	r17,r3,r17
    ab40:	0011883a 	mov	r8,zero
    ab44:	0021883a 	mov	r16,zero
    ab48:	003f7106 	br	a910 <__alt_data_end+0xfffea910>
    ab4c:	193ff804 	addi	r4,r3,-32
    ab50:	00800804 	movi	r2,32
    ab54:	4908d83a 	srl	r4,r9,r4
    ab58:	18804526 	beq	r3,r2,ac70 <__adddf3+0x564>
    ab5c:	00801004 	movi	r2,64
    ab60:	10c5c83a 	sub	r2,r2,r3
    ab64:	4886983a 	sll	r3,r9,r2
    ab68:	198cb03a 	or	r6,r3,r6
    ab6c:	300cc03a 	cmpne	r6,r6,zero
    ab70:	218cb03a 	or	r6,r4,r6
    ab74:	0007883a 	mov	r3,zero
    ab78:	003f3b06 	br	a868 <__alt_data_end+0xfffea868>
    ab7c:	80002a26 	beq	r16,zero,ac28 <__adddf3+0x51c>
    ab80:	0101ffc4 	movi	r4,2047
    ab84:	11006826 	beq	r2,r4,ad28 <__adddf3+0x61c>
    ab88:	00c7c83a 	sub	r3,zero,r3
    ab8c:	42002034 	orhi	r8,r8,128
    ab90:	01000e04 	movi	r4,56
    ab94:	20c07c16 	blt	r4,r3,ad88 <__adddf3+0x67c>
    ab98:	010007c4 	movi	r4,31
    ab9c:	20c0da16 	blt	r4,r3,af08 <__adddf3+0x7fc>
    aba0:	01000804 	movi	r4,32
    aba4:	20c9c83a 	sub	r4,r4,r3
    aba8:	4114983a 	sll	r10,r8,r4
    abac:	88cad83a 	srl	r5,r17,r3
    abb0:	8908983a 	sll	r4,r17,r4
    abb4:	40c6d83a 	srl	r3,r8,r3
    abb8:	5162b03a 	or	r17,r10,r5
    abbc:	2008c03a 	cmpne	r4,r4,zero
    abc0:	8922b03a 	or	r17,r17,r4
    abc4:	3463c83a 	sub	r17,r6,r17
    abc8:	48c7c83a 	sub	r3,r9,r3
    abcc:	344d803a 	cmpltu	r6,r6,r17
    abd0:	1991c83a 	sub	r8,r3,r6
    abd4:	1021883a 	mov	r16,r2
    abd8:	3825883a 	mov	r18,r7
    abdc:	003f2706 	br	a87c <__alt_data_end+0xfffea87c>
    abe0:	24d0b03a 	or	r8,r4,r19
    abe4:	40001b1e 	bne	r8,zero,ac54 <__adddf3+0x548>
    abe8:	0005883a 	mov	r2,zero
    abec:	0007883a 	mov	r3,zero
    abf0:	0021883a 	mov	r16,zero
    abf4:	003f4d06 	br	a92c <__alt_data_end+0xfffea92c>
    abf8:	008007c4 	movi	r2,31
    abfc:	11003c16 	blt	r2,r4,acf0 <__adddf3+0x5e4>
    ac00:	00800804 	movi	r2,32
    ac04:	1105c83a 	sub	r2,r2,r4
    ac08:	488e983a 	sll	r7,r9,r2
    ac0c:	310ad83a 	srl	r5,r6,r4
    ac10:	3084983a 	sll	r2,r6,r2
    ac14:	4912d83a 	srl	r9,r9,r4
    ac18:	394ab03a 	or	r5,r7,r5
    ac1c:	1004c03a 	cmpne	r2,r2,zero
    ac20:	288ab03a 	or	r5,r5,r2
    ac24:	003f5306 	br	a974 <__alt_data_end+0xfffea974>
    ac28:	4448b03a 	or	r4,r8,r17
    ac2c:	20003e26 	beq	r4,zero,ad28 <__adddf3+0x61c>
    ac30:	00c6303a 	nor	r3,zero,r3
    ac34:	18003a1e 	bne	r3,zero,ad20 <__adddf3+0x614>
    ac38:	3463c83a 	sub	r17,r6,r17
    ac3c:	4a07c83a 	sub	r3,r9,r8
    ac40:	344d803a 	cmpltu	r6,r6,r17
    ac44:	1991c83a 	sub	r8,r3,r6
    ac48:	1021883a 	mov	r16,r2
    ac4c:	3825883a 	mov	r18,r7
    ac50:	003f0a06 	br	a87c <__alt_data_end+0xfffea87c>
    ac54:	2023883a 	mov	r17,r4
    ac58:	003f0d06 	br	a890 <__alt_data_end+0xfffea890>
    ac5c:	0081ffc4 	movi	r2,2047
    ac60:	80bf3f1e 	bne	r16,r2,a960 <__alt_data_end+0xfffea960>
    ac64:	003ec806 	br	a788 <__alt_data_end+0xfffea788>
    ac68:	0005883a 	mov	r2,zero
    ac6c:	003fb106 	br	ab34 <__alt_data_end+0xfffeab34>
    ac70:	0007883a 	mov	r3,zero
    ac74:	003fbc06 	br	ab68 <__alt_data_end+0xfffeab68>
    ac78:	4444b03a 	or	r2,r8,r17
    ac7c:	8000871e 	bne	r16,zero,ae9c <__adddf3+0x790>
    ac80:	1000ba26 	beq	r2,zero,af6c <__adddf3+0x860>
    ac84:	4984b03a 	or	r2,r9,r6
    ac88:	103ebf26 	beq	r2,zero,a788 <__alt_data_end+0xfffea788>
    ac8c:	8985883a 	add	r2,r17,r6
    ac90:	4247883a 	add	r3,r8,r9
    ac94:	1451803a 	cmpltu	r8,r2,r17
    ac98:	40d1883a 	add	r8,r8,r3
    ac9c:	40c0202c 	andhi	r3,r8,128
    aca0:	1023883a 	mov	r17,r2
    aca4:	183f1a26 	beq	r3,zero,a910 <__alt_data_end+0xfffea910>
    aca8:	00bfe034 	movhi	r2,65408
    acac:	10bfffc4 	addi	r2,r2,-1
    acb0:	2021883a 	mov	r16,r4
    acb4:	4090703a 	and	r8,r8,r2
    acb8:	003eb306 	br	a788 <__alt_data_end+0xfffea788>
    acbc:	4444b03a 	or	r2,r8,r17
    acc0:	8000291e 	bne	r16,zero,ad68 <__adddf3+0x65c>
    acc4:	10004b1e 	bne	r2,zero,adf4 <__adddf3+0x6e8>
    acc8:	4990b03a 	or	r8,r9,r6
    accc:	40008b26 	beq	r8,zero,aefc <__adddf3+0x7f0>
    acd0:	4811883a 	mov	r8,r9
    acd4:	3023883a 	mov	r17,r6
    acd8:	3825883a 	mov	r18,r7
    acdc:	003eaa06 	br	a788 <__alt_data_end+0xfffea788>
    ace0:	1021883a 	mov	r16,r2
    ace4:	0011883a 	mov	r8,zero
    ace8:	0005883a 	mov	r2,zero
    acec:	003f0f06 	br	a92c <__alt_data_end+0xfffea92c>
    acf0:	217ff804 	addi	r5,r4,-32
    acf4:	00800804 	movi	r2,32
    acf8:	494ad83a 	srl	r5,r9,r5
    acfc:	20807d26 	beq	r4,r2,aef4 <__adddf3+0x7e8>
    ad00:	00801004 	movi	r2,64
    ad04:	1109c83a 	sub	r4,r2,r4
    ad08:	4912983a 	sll	r9,r9,r4
    ad0c:	498cb03a 	or	r6,r9,r6
    ad10:	300cc03a 	cmpne	r6,r6,zero
    ad14:	298ab03a 	or	r5,r5,r6
    ad18:	0013883a 	mov	r9,zero
    ad1c:	003f1506 	br	a974 <__alt_data_end+0xfffea974>
    ad20:	0101ffc4 	movi	r4,2047
    ad24:	113f9a1e 	bne	r2,r4,ab90 <__alt_data_end+0xfffeab90>
    ad28:	4811883a 	mov	r8,r9
    ad2c:	3023883a 	mov	r17,r6
    ad30:	1021883a 	mov	r16,r2
    ad34:	3825883a 	mov	r18,r7
    ad38:	003e9306 	br	a788 <__alt_data_end+0xfffea788>
    ad3c:	8000161e 	bne	r16,zero,ad98 <__adddf3+0x68c>
    ad40:	444ab03a 	or	r5,r8,r17
    ad44:	28005126 	beq	r5,zero,ae8c <__adddf3+0x780>
    ad48:	0108303a 	nor	r4,zero,r4
    ad4c:	20004d1e 	bne	r4,zero,ae84 <__adddf3+0x778>
    ad50:	89a3883a 	add	r17,r17,r6
    ad54:	4253883a 	add	r9,r8,r9
    ad58:	898d803a 	cmpltu	r6,r17,r6
    ad5c:	3251883a 	add	r8,r6,r9
    ad60:	1021883a 	mov	r16,r2
    ad64:	003f0806 	br	a988 <__alt_data_end+0xfffea988>
    ad68:	1000301e 	bne	r2,zero,ae2c <__adddf3+0x720>
    ad6c:	4984b03a 	or	r2,r9,r6
    ad70:	10007126 	beq	r2,zero,af38 <__adddf3+0x82c>
    ad74:	4811883a 	mov	r8,r9
    ad78:	3023883a 	mov	r17,r6
    ad7c:	3825883a 	mov	r18,r7
    ad80:	0401ffc4 	movi	r16,2047
    ad84:	003e8006 	br	a788 <__alt_data_end+0xfffea788>
    ad88:	4462b03a 	or	r17,r8,r17
    ad8c:	8822c03a 	cmpne	r17,r17,zero
    ad90:	0007883a 	mov	r3,zero
    ad94:	003f8b06 	br	abc4 <__alt_data_end+0xfffeabc4>
    ad98:	0141ffc4 	movi	r5,2047
    ad9c:	11403b26 	beq	r2,r5,ae8c <__adddf3+0x780>
    ada0:	0109c83a 	sub	r4,zero,r4
    ada4:	42002034 	orhi	r8,r8,128
    ada8:	01400e04 	movi	r5,56
    adac:	29006716 	blt	r5,r4,af4c <__adddf3+0x840>
    adb0:	014007c4 	movi	r5,31
    adb4:	29007016 	blt	r5,r4,af78 <__adddf3+0x86c>
    adb8:	01400804 	movi	r5,32
    adbc:	290bc83a 	sub	r5,r5,r4
    adc0:	4154983a 	sll	r10,r8,r5
    adc4:	890ed83a 	srl	r7,r17,r4
    adc8:	894a983a 	sll	r5,r17,r5
    adcc:	4108d83a 	srl	r4,r8,r4
    add0:	51e2b03a 	or	r17,r10,r7
    add4:	280ac03a 	cmpne	r5,r5,zero
    add8:	8962b03a 	or	r17,r17,r5
    addc:	89a3883a 	add	r17,r17,r6
    ade0:	2253883a 	add	r9,r4,r9
    ade4:	898d803a 	cmpltu	r6,r17,r6
    ade8:	3251883a 	add	r8,r6,r9
    adec:	1021883a 	mov	r16,r2
    adf0:	003ee506 	br	a988 <__alt_data_end+0xfffea988>
    adf4:	4984b03a 	or	r2,r9,r6
    adf8:	103e6326 	beq	r2,zero,a788 <__alt_data_end+0xfffea788>
    adfc:	8987c83a 	sub	r3,r17,r6
    ae00:	88c9803a 	cmpltu	r4,r17,r3
    ae04:	4245c83a 	sub	r2,r8,r9
    ae08:	1105c83a 	sub	r2,r2,r4
    ae0c:	1100202c 	andhi	r4,r2,128
    ae10:	203ebb26 	beq	r4,zero,a900 <__alt_data_end+0xfffea900>
    ae14:	3463c83a 	sub	r17,r6,r17
    ae18:	4a07c83a 	sub	r3,r9,r8
    ae1c:	344d803a 	cmpltu	r6,r6,r17
    ae20:	1991c83a 	sub	r8,r3,r6
    ae24:	3825883a 	mov	r18,r7
    ae28:	003e5706 	br	a788 <__alt_data_end+0xfffea788>
    ae2c:	4984b03a 	or	r2,r9,r6
    ae30:	10002e26 	beq	r2,zero,aeec <__adddf3+0x7e0>
    ae34:	4004d0fa 	srli	r2,r8,3
    ae38:	8822d0fa 	srli	r17,r17,3
    ae3c:	4010977a 	slli	r8,r8,29
    ae40:	10c0022c 	andhi	r3,r2,8
    ae44:	4462b03a 	or	r17,r8,r17
    ae48:	18000826 	beq	r3,zero,ae6c <__adddf3+0x760>
    ae4c:	4808d0fa 	srli	r4,r9,3
    ae50:	20c0022c 	andhi	r3,r4,8
    ae54:	1800051e 	bne	r3,zero,ae6c <__adddf3+0x760>
    ae58:	300cd0fa 	srli	r6,r6,3
    ae5c:	4806977a 	slli	r3,r9,29
    ae60:	2005883a 	mov	r2,r4
    ae64:	3825883a 	mov	r18,r7
    ae68:	19a2b03a 	or	r17,r3,r6
    ae6c:	8810d77a 	srli	r8,r17,29
    ae70:	100490fa 	slli	r2,r2,3
    ae74:	882290fa 	slli	r17,r17,3
    ae78:	0401ffc4 	movi	r16,2047
    ae7c:	4090b03a 	or	r8,r8,r2
    ae80:	003e4106 	br	a788 <__alt_data_end+0xfffea788>
    ae84:	0141ffc4 	movi	r5,2047
    ae88:	117fc71e 	bne	r2,r5,ada8 <__alt_data_end+0xfffeada8>
    ae8c:	4811883a 	mov	r8,r9
    ae90:	3023883a 	mov	r17,r6
    ae94:	1021883a 	mov	r16,r2
    ae98:	003e3b06 	br	a788 <__alt_data_end+0xfffea788>
    ae9c:	10002f26 	beq	r2,zero,af5c <__adddf3+0x850>
    aea0:	4984b03a 	or	r2,r9,r6
    aea4:	10001126 	beq	r2,zero,aeec <__adddf3+0x7e0>
    aea8:	4004d0fa 	srli	r2,r8,3
    aeac:	8822d0fa 	srli	r17,r17,3
    aeb0:	4010977a 	slli	r8,r8,29
    aeb4:	10c0022c 	andhi	r3,r2,8
    aeb8:	4462b03a 	or	r17,r8,r17
    aebc:	183feb26 	beq	r3,zero,ae6c <__alt_data_end+0xfffeae6c>
    aec0:	4808d0fa 	srli	r4,r9,3
    aec4:	20c0022c 	andhi	r3,r4,8
    aec8:	183fe81e 	bne	r3,zero,ae6c <__alt_data_end+0xfffeae6c>
    aecc:	300cd0fa 	srli	r6,r6,3
    aed0:	4806977a 	slli	r3,r9,29
    aed4:	2005883a 	mov	r2,r4
    aed8:	19a2b03a 	or	r17,r3,r6
    aedc:	003fe306 	br	ae6c <__alt_data_end+0xfffeae6c>
    aee0:	0011883a 	mov	r8,zero
    aee4:	0005883a 	mov	r2,zero
    aee8:	003e3f06 	br	a7e8 <__alt_data_end+0xfffea7e8>
    aeec:	0401ffc4 	movi	r16,2047
    aef0:	003e2506 	br	a788 <__alt_data_end+0xfffea788>
    aef4:	0013883a 	mov	r9,zero
    aef8:	003f8406 	br	ad0c <__alt_data_end+0xfffead0c>
    aefc:	0005883a 	mov	r2,zero
    af00:	0007883a 	mov	r3,zero
    af04:	003e8906 	br	a92c <__alt_data_end+0xfffea92c>
    af08:	197ff804 	addi	r5,r3,-32
    af0c:	01000804 	movi	r4,32
    af10:	414ad83a 	srl	r5,r8,r5
    af14:	19002426 	beq	r3,r4,afa8 <__adddf3+0x89c>
    af18:	01001004 	movi	r4,64
    af1c:	20c7c83a 	sub	r3,r4,r3
    af20:	40c6983a 	sll	r3,r8,r3
    af24:	1c46b03a 	or	r3,r3,r17
    af28:	1806c03a 	cmpne	r3,r3,zero
    af2c:	28e2b03a 	or	r17,r5,r3
    af30:	0007883a 	mov	r3,zero
    af34:	003f2306 	br	abc4 <__alt_data_end+0xfffeabc4>
    af38:	0007883a 	mov	r3,zero
    af3c:	5811883a 	mov	r8,r11
    af40:	00bfffc4 	movi	r2,-1
    af44:	0401ffc4 	movi	r16,2047
    af48:	003e7806 	br	a92c <__alt_data_end+0xfffea92c>
    af4c:	4462b03a 	or	r17,r8,r17
    af50:	8822c03a 	cmpne	r17,r17,zero
    af54:	0009883a 	mov	r4,zero
    af58:	003fa006 	br	addc <__alt_data_end+0xfffeaddc>
    af5c:	4811883a 	mov	r8,r9
    af60:	3023883a 	mov	r17,r6
    af64:	0401ffc4 	movi	r16,2047
    af68:	003e0706 	br	a788 <__alt_data_end+0xfffea788>
    af6c:	4811883a 	mov	r8,r9
    af70:	3023883a 	mov	r17,r6
    af74:	003e0406 	br	a788 <__alt_data_end+0xfffea788>
    af78:	21fff804 	addi	r7,r4,-32
    af7c:	01400804 	movi	r5,32
    af80:	41ced83a 	srl	r7,r8,r7
    af84:	21400a26 	beq	r4,r5,afb0 <__adddf3+0x8a4>
    af88:	01401004 	movi	r5,64
    af8c:	2909c83a 	sub	r4,r5,r4
    af90:	4108983a 	sll	r4,r8,r4
    af94:	2448b03a 	or	r4,r4,r17
    af98:	2008c03a 	cmpne	r4,r4,zero
    af9c:	3922b03a 	or	r17,r7,r4
    afa0:	0009883a 	mov	r4,zero
    afa4:	003f8d06 	br	addc <__alt_data_end+0xfffeaddc>
    afa8:	0007883a 	mov	r3,zero
    afac:	003fdd06 	br	af24 <__alt_data_end+0xfffeaf24>
    afb0:	0009883a 	mov	r4,zero
    afb4:	003ff706 	br	af94 <__alt_data_end+0xfffeaf94>

0000afb8 <__divdf3>:
    afb8:	defff204 	addi	sp,sp,-56
    afbc:	dd400915 	stw	r21,36(sp)
    afc0:	282ad53a 	srli	r21,r5,20
    afc4:	dd000815 	stw	r20,32(sp)
    afc8:	2828d7fa 	srli	r20,r5,31
    afcc:	dc000415 	stw	r16,16(sp)
    afd0:	04000434 	movhi	r16,16
    afd4:	df000c15 	stw	fp,48(sp)
    afd8:	843fffc4 	addi	r16,r16,-1
    afdc:	dfc00d15 	stw	ra,52(sp)
    afe0:	ddc00b15 	stw	r23,44(sp)
    afe4:	dd800a15 	stw	r22,40(sp)
    afe8:	dcc00715 	stw	r19,28(sp)
    afec:	dc800615 	stw	r18,24(sp)
    aff0:	dc400515 	stw	r17,20(sp)
    aff4:	ad41ffcc 	andi	r21,r21,2047
    aff8:	2c20703a 	and	r16,r5,r16
    affc:	a7003fcc 	andi	fp,r20,255
    b000:	a8006126 	beq	r21,zero,b188 <__divdf3+0x1d0>
    b004:	0081ffc4 	movi	r2,2047
    b008:	2025883a 	mov	r18,r4
    b00c:	a8803726 	beq	r21,r2,b0ec <__divdf3+0x134>
    b010:	80800434 	orhi	r2,r16,16
    b014:	100490fa 	slli	r2,r2,3
    b018:	2020d77a 	srli	r16,r4,29
    b01c:	202490fa 	slli	r18,r4,3
    b020:	ad7f0044 	addi	r21,r21,-1023
    b024:	80a0b03a 	or	r16,r16,r2
    b028:	0027883a 	mov	r19,zero
    b02c:	0013883a 	mov	r9,zero
    b030:	3804d53a 	srli	r2,r7,20
    b034:	382cd7fa 	srli	r22,r7,31
    b038:	04400434 	movhi	r17,16
    b03c:	8c7fffc4 	addi	r17,r17,-1
    b040:	1081ffcc 	andi	r2,r2,2047
    b044:	3011883a 	mov	r8,r6
    b048:	3c62703a 	and	r17,r7,r17
    b04c:	b5c03fcc 	andi	r23,r22,255
    b050:	10006c26 	beq	r2,zero,b204 <__divdf3+0x24c>
    b054:	00c1ffc4 	movi	r3,2047
    b058:	10c06426 	beq	r2,r3,b1ec <__divdf3+0x234>
    b05c:	88c00434 	orhi	r3,r17,16
    b060:	180690fa 	slli	r3,r3,3
    b064:	3022d77a 	srli	r17,r6,29
    b068:	301090fa 	slli	r8,r6,3
    b06c:	10bf0044 	addi	r2,r2,-1023
    b070:	88e2b03a 	or	r17,r17,r3
    b074:	000f883a 	mov	r7,zero
    b078:	a58cf03a 	xor	r6,r20,r22
    b07c:	3cc8b03a 	or	r4,r7,r19
    b080:	a8abc83a 	sub	r21,r21,r2
    b084:	008003c4 	movi	r2,15
    b088:	3007883a 	mov	r3,r6
    b08c:	34c03fcc 	andi	r19,r6,255
    b090:	11009036 	bltu	r2,r4,b2d4 <__divdf3+0x31c>
    b094:	200890ba 	slli	r4,r4,2
    b098:	00800074 	movhi	r2,1
    b09c:	10ac2b04 	addi	r2,r2,-20308
    b0a0:	2089883a 	add	r4,r4,r2
    b0a4:	20800017 	ldw	r2,0(r4)
    b0a8:	1000683a 	jmp	r2
    b0ac:	0000b2d4 	movui	zero,715
    b0b0:	0000b124 	muli	zero,zero,708
    b0b4:	0000b2c4 	movi	zero,715
    b0b8:	0000b118 	cmpnei	zero,zero,708
    b0bc:	0000b2c4 	movi	zero,715
    b0c0:	0000b298 	cmpnei	zero,zero,714
    b0c4:	0000b2c4 	movi	zero,715
    b0c8:	0000b118 	cmpnei	zero,zero,708
    b0cc:	0000b124 	muli	zero,zero,708
    b0d0:	0000b124 	muli	zero,zero,708
    b0d4:	0000b298 	cmpnei	zero,zero,714
    b0d8:	0000b118 	cmpnei	zero,zero,708
    b0dc:	0000b108 	cmpgei	zero,zero,708
    b0e0:	0000b108 	cmpgei	zero,zero,708
    b0e4:	0000b108 	cmpgei	zero,zero,708
    b0e8:	0000b5b8 	rdprs	zero,zero,726
    b0ec:	2404b03a 	or	r2,r4,r16
    b0f0:	1000661e 	bne	r2,zero,b28c <__divdf3+0x2d4>
    b0f4:	04c00204 	movi	r19,8
    b0f8:	0021883a 	mov	r16,zero
    b0fc:	0025883a 	mov	r18,zero
    b100:	02400084 	movi	r9,2
    b104:	003fca06 	br	b030 <__alt_data_end+0xfffeb030>
    b108:	8023883a 	mov	r17,r16
    b10c:	9011883a 	mov	r8,r18
    b110:	e02f883a 	mov	r23,fp
    b114:	480f883a 	mov	r7,r9
    b118:	00800084 	movi	r2,2
    b11c:	3881311e 	bne	r7,r2,b5e4 <__divdf3+0x62c>
    b120:	b827883a 	mov	r19,r23
    b124:	98c0004c 	andi	r3,r19,1
    b128:	0081ffc4 	movi	r2,2047
    b12c:	000b883a 	mov	r5,zero
    b130:	0025883a 	mov	r18,zero
    b134:	1004953a 	slli	r2,r2,20
    b138:	18c03fcc 	andi	r3,r3,255
    b13c:	04400434 	movhi	r17,16
    b140:	8c7fffc4 	addi	r17,r17,-1
    b144:	180697fa 	slli	r3,r3,31
    b148:	2c4a703a 	and	r5,r5,r17
    b14c:	288ab03a 	or	r5,r5,r2
    b150:	28c6b03a 	or	r3,r5,r3
    b154:	9005883a 	mov	r2,r18
    b158:	dfc00d17 	ldw	ra,52(sp)
    b15c:	df000c17 	ldw	fp,48(sp)
    b160:	ddc00b17 	ldw	r23,44(sp)
    b164:	dd800a17 	ldw	r22,40(sp)
    b168:	dd400917 	ldw	r21,36(sp)
    b16c:	dd000817 	ldw	r20,32(sp)
    b170:	dcc00717 	ldw	r19,28(sp)
    b174:	dc800617 	ldw	r18,24(sp)
    b178:	dc400517 	ldw	r17,20(sp)
    b17c:	dc000417 	ldw	r16,16(sp)
    b180:	dec00e04 	addi	sp,sp,56
    b184:	f800283a 	ret
    b188:	2404b03a 	or	r2,r4,r16
    b18c:	2027883a 	mov	r19,r4
    b190:	10003926 	beq	r2,zero,b278 <__divdf3+0x2c0>
    b194:	80012e26 	beq	r16,zero,b650 <__divdf3+0x698>
    b198:	8009883a 	mov	r4,r16
    b19c:	d9800315 	stw	r6,12(sp)
    b1a0:	d9c00215 	stw	r7,8(sp)
    b1a4:	000cd100 	call	cd10 <__clzsi2>
    b1a8:	d9800317 	ldw	r6,12(sp)
    b1ac:	d9c00217 	ldw	r7,8(sp)
    b1b0:	113ffd44 	addi	r4,r2,-11
    b1b4:	00c00704 	movi	r3,28
    b1b8:	19012116 	blt	r3,r4,b640 <__divdf3+0x688>
    b1bc:	00c00744 	movi	r3,29
    b1c0:	147ffe04 	addi	r17,r2,-8
    b1c4:	1907c83a 	sub	r3,r3,r4
    b1c8:	8460983a 	sll	r16,r16,r17
    b1cc:	98c6d83a 	srl	r3,r19,r3
    b1d0:	9c64983a 	sll	r18,r19,r17
    b1d4:	1c20b03a 	or	r16,r3,r16
    b1d8:	1080fcc4 	addi	r2,r2,1011
    b1dc:	00abc83a 	sub	r21,zero,r2
    b1e0:	0027883a 	mov	r19,zero
    b1e4:	0013883a 	mov	r9,zero
    b1e8:	003f9106 	br	b030 <__alt_data_end+0xfffeb030>
    b1ec:	3446b03a 	or	r3,r6,r17
    b1f0:	18001f1e 	bne	r3,zero,b270 <__divdf3+0x2b8>
    b1f4:	0023883a 	mov	r17,zero
    b1f8:	0011883a 	mov	r8,zero
    b1fc:	01c00084 	movi	r7,2
    b200:	003f9d06 	br	b078 <__alt_data_end+0xfffeb078>
    b204:	3446b03a 	or	r3,r6,r17
    b208:	18001526 	beq	r3,zero,b260 <__divdf3+0x2a8>
    b20c:	88011b26 	beq	r17,zero,b67c <__divdf3+0x6c4>
    b210:	8809883a 	mov	r4,r17
    b214:	d9800315 	stw	r6,12(sp)
    b218:	da400115 	stw	r9,4(sp)
    b21c:	000cd100 	call	cd10 <__clzsi2>
    b220:	d9800317 	ldw	r6,12(sp)
    b224:	da400117 	ldw	r9,4(sp)
    b228:	113ffd44 	addi	r4,r2,-11
    b22c:	00c00704 	movi	r3,28
    b230:	19010e16 	blt	r3,r4,b66c <__divdf3+0x6b4>
    b234:	00c00744 	movi	r3,29
    b238:	123ffe04 	addi	r8,r2,-8
    b23c:	1907c83a 	sub	r3,r3,r4
    b240:	8a22983a 	sll	r17,r17,r8
    b244:	30c6d83a 	srl	r3,r6,r3
    b248:	3210983a 	sll	r8,r6,r8
    b24c:	1c62b03a 	or	r17,r3,r17
    b250:	1080fcc4 	addi	r2,r2,1011
    b254:	0085c83a 	sub	r2,zero,r2
    b258:	000f883a 	mov	r7,zero
    b25c:	003f8606 	br	b078 <__alt_data_end+0xfffeb078>
    b260:	0023883a 	mov	r17,zero
    b264:	0011883a 	mov	r8,zero
    b268:	01c00044 	movi	r7,1
    b26c:	003f8206 	br	b078 <__alt_data_end+0xfffeb078>
    b270:	01c000c4 	movi	r7,3
    b274:	003f8006 	br	b078 <__alt_data_end+0xfffeb078>
    b278:	04c00104 	movi	r19,4
    b27c:	0021883a 	mov	r16,zero
    b280:	0025883a 	mov	r18,zero
    b284:	02400044 	movi	r9,1
    b288:	003f6906 	br	b030 <__alt_data_end+0xfffeb030>
    b28c:	04c00304 	movi	r19,12
    b290:	024000c4 	movi	r9,3
    b294:	003f6606 	br	b030 <__alt_data_end+0xfffeb030>
    b298:	01400434 	movhi	r5,16
    b29c:	0007883a 	mov	r3,zero
    b2a0:	297fffc4 	addi	r5,r5,-1
    b2a4:	04bfffc4 	movi	r18,-1
    b2a8:	0081ffc4 	movi	r2,2047
    b2ac:	003fa106 	br	b134 <__alt_data_end+0xfffeb134>
    b2b0:	00c00044 	movi	r3,1
    b2b4:	1887c83a 	sub	r3,r3,r2
    b2b8:	01000e04 	movi	r4,56
    b2bc:	20c1210e 	bge	r4,r3,b744 <__divdf3+0x78c>
    b2c0:	98c0004c 	andi	r3,r19,1
    b2c4:	0005883a 	mov	r2,zero
    b2c8:	000b883a 	mov	r5,zero
    b2cc:	0025883a 	mov	r18,zero
    b2d0:	003f9806 	br	b134 <__alt_data_end+0xfffeb134>
    b2d4:	8c00fd36 	bltu	r17,r16,b6cc <__divdf3+0x714>
    b2d8:	8440fb26 	beq	r16,r17,b6c8 <__divdf3+0x710>
    b2dc:	8007883a 	mov	r3,r16
    b2e0:	ad7fffc4 	addi	r21,r21,-1
    b2e4:	0021883a 	mov	r16,zero
    b2e8:	4004d63a 	srli	r2,r8,24
    b2ec:	8822923a 	slli	r17,r17,8
    b2f0:	1809883a 	mov	r4,r3
    b2f4:	402c923a 	slli	r22,r8,8
    b2f8:	88b8b03a 	or	fp,r17,r2
    b2fc:	e028d43a 	srli	r20,fp,16
    b300:	d8c00015 	stw	r3,0(sp)
    b304:	e5ffffcc 	andi	r23,fp,65535
    b308:	a00b883a 	mov	r5,r20
    b30c:	00006200 	call	620 <__udivsi3>
    b310:	d8c00017 	ldw	r3,0(sp)
    b314:	a00b883a 	mov	r5,r20
    b318:	d8800315 	stw	r2,12(sp)
    b31c:	1809883a 	mov	r4,r3
    b320:	00006840 	call	684 <__umodsi3>
    b324:	d9800317 	ldw	r6,12(sp)
    b328:	1006943a 	slli	r3,r2,16
    b32c:	9004d43a 	srli	r2,r18,16
    b330:	b9a3383a 	mul	r17,r23,r6
    b334:	10c4b03a 	or	r2,r2,r3
    b338:	1440062e 	bgeu	r2,r17,b354 <__divdf3+0x39c>
    b33c:	1705883a 	add	r2,r2,fp
    b340:	30ffffc4 	addi	r3,r6,-1
    b344:	1700ee36 	bltu	r2,fp,b700 <__divdf3+0x748>
    b348:	1440ed2e 	bgeu	r2,r17,b700 <__divdf3+0x748>
    b34c:	31bfff84 	addi	r6,r6,-2
    b350:	1705883a 	add	r2,r2,fp
    b354:	1463c83a 	sub	r17,r2,r17
    b358:	a00b883a 	mov	r5,r20
    b35c:	8809883a 	mov	r4,r17
    b360:	d9800315 	stw	r6,12(sp)
    b364:	00006200 	call	620 <__udivsi3>
    b368:	a00b883a 	mov	r5,r20
    b36c:	8809883a 	mov	r4,r17
    b370:	d8800215 	stw	r2,8(sp)
    b374:	00006840 	call	684 <__umodsi3>
    b378:	d9c00217 	ldw	r7,8(sp)
    b37c:	1004943a 	slli	r2,r2,16
    b380:	94bfffcc 	andi	r18,r18,65535
    b384:	b9d1383a 	mul	r8,r23,r7
    b388:	90a4b03a 	or	r18,r18,r2
    b38c:	d9800317 	ldw	r6,12(sp)
    b390:	9200062e 	bgeu	r18,r8,b3ac <__divdf3+0x3f4>
    b394:	9725883a 	add	r18,r18,fp
    b398:	38bfffc4 	addi	r2,r7,-1
    b39c:	9700d636 	bltu	r18,fp,b6f8 <__divdf3+0x740>
    b3a0:	9200d52e 	bgeu	r18,r8,b6f8 <__divdf3+0x740>
    b3a4:	39ffff84 	addi	r7,r7,-2
    b3a8:	9725883a 	add	r18,r18,fp
    b3ac:	3004943a 	slli	r2,r6,16
    b3b0:	b012d43a 	srli	r9,r22,16
    b3b4:	b1bfffcc 	andi	r6,r22,65535
    b3b8:	11e2b03a 	or	r17,r2,r7
    b3bc:	8806d43a 	srli	r3,r17,16
    b3c0:	893fffcc 	andi	r4,r17,65535
    b3c4:	218b383a 	mul	r5,r4,r6
    b3c8:	30c5383a 	mul	r2,r6,r3
    b3cc:	2249383a 	mul	r4,r4,r9
    b3d0:	280ed43a 	srli	r7,r5,16
    b3d4:	9225c83a 	sub	r18,r18,r8
    b3d8:	2089883a 	add	r4,r4,r2
    b3dc:	3909883a 	add	r4,r7,r4
    b3e0:	1a47383a 	mul	r3,r3,r9
    b3e4:	2080022e 	bgeu	r4,r2,b3f0 <__divdf3+0x438>
    b3e8:	00800074 	movhi	r2,1
    b3ec:	1887883a 	add	r3,r3,r2
    b3f0:	2004d43a 	srli	r2,r4,16
    b3f4:	2008943a 	slli	r4,r4,16
    b3f8:	297fffcc 	andi	r5,r5,65535
    b3fc:	10c7883a 	add	r3,r2,r3
    b400:	2149883a 	add	r4,r4,r5
    b404:	90c0a536 	bltu	r18,r3,b69c <__divdf3+0x6e4>
    b408:	90c0bf26 	beq	r18,r3,b708 <__divdf3+0x750>
    b40c:	90c7c83a 	sub	r3,r18,r3
    b410:	810fc83a 	sub	r7,r16,r4
    b414:	81e5803a 	cmpltu	r18,r16,r7
    b418:	1ca5c83a 	sub	r18,r3,r18
    b41c:	e480c126 	beq	fp,r18,b724 <__divdf3+0x76c>
    b420:	a00b883a 	mov	r5,r20
    b424:	9009883a 	mov	r4,r18
    b428:	d9800315 	stw	r6,12(sp)
    b42c:	d9c00215 	stw	r7,8(sp)
    b430:	da400115 	stw	r9,4(sp)
    b434:	00006200 	call	620 <__udivsi3>
    b438:	a00b883a 	mov	r5,r20
    b43c:	9009883a 	mov	r4,r18
    b440:	d8800015 	stw	r2,0(sp)
    b444:	00006840 	call	684 <__umodsi3>
    b448:	d9c00217 	ldw	r7,8(sp)
    b44c:	da000017 	ldw	r8,0(sp)
    b450:	1006943a 	slli	r3,r2,16
    b454:	3804d43a 	srli	r2,r7,16
    b458:	ba21383a 	mul	r16,r23,r8
    b45c:	d9800317 	ldw	r6,12(sp)
    b460:	10c4b03a 	or	r2,r2,r3
    b464:	da400117 	ldw	r9,4(sp)
    b468:	1400062e 	bgeu	r2,r16,b484 <__divdf3+0x4cc>
    b46c:	1705883a 	add	r2,r2,fp
    b470:	40ffffc4 	addi	r3,r8,-1
    b474:	1700ad36 	bltu	r2,fp,b72c <__divdf3+0x774>
    b478:	1400ac2e 	bgeu	r2,r16,b72c <__divdf3+0x774>
    b47c:	423fff84 	addi	r8,r8,-2
    b480:	1705883a 	add	r2,r2,fp
    b484:	1421c83a 	sub	r16,r2,r16
    b488:	a00b883a 	mov	r5,r20
    b48c:	8009883a 	mov	r4,r16
    b490:	d9800315 	stw	r6,12(sp)
    b494:	d9c00215 	stw	r7,8(sp)
    b498:	da000015 	stw	r8,0(sp)
    b49c:	da400115 	stw	r9,4(sp)
    b4a0:	00006200 	call	620 <__udivsi3>
    b4a4:	8009883a 	mov	r4,r16
    b4a8:	a00b883a 	mov	r5,r20
    b4ac:	1025883a 	mov	r18,r2
    b4b0:	00006840 	call	684 <__umodsi3>
    b4b4:	d9c00217 	ldw	r7,8(sp)
    b4b8:	1004943a 	slli	r2,r2,16
    b4bc:	bcaf383a 	mul	r23,r23,r18
    b4c0:	393fffcc 	andi	r4,r7,65535
    b4c4:	2088b03a 	or	r4,r4,r2
    b4c8:	d9800317 	ldw	r6,12(sp)
    b4cc:	da000017 	ldw	r8,0(sp)
    b4d0:	da400117 	ldw	r9,4(sp)
    b4d4:	25c0062e 	bgeu	r4,r23,b4f0 <__divdf3+0x538>
    b4d8:	2709883a 	add	r4,r4,fp
    b4dc:	90bfffc4 	addi	r2,r18,-1
    b4e0:	27009436 	bltu	r4,fp,b734 <__divdf3+0x77c>
    b4e4:	25c0932e 	bgeu	r4,r23,b734 <__divdf3+0x77c>
    b4e8:	94bfff84 	addi	r18,r18,-2
    b4ec:	2709883a 	add	r4,r4,fp
    b4f0:	4004943a 	slli	r2,r8,16
    b4f4:	25efc83a 	sub	r23,r4,r23
    b4f8:	1490b03a 	or	r8,r2,r18
    b4fc:	4008d43a 	srli	r4,r8,16
    b500:	40ffffcc 	andi	r3,r8,65535
    b504:	30c5383a 	mul	r2,r6,r3
    b508:	1a47383a 	mul	r3,r3,r9
    b50c:	310d383a 	mul	r6,r6,r4
    b510:	100ad43a 	srli	r5,r2,16
    b514:	4913383a 	mul	r9,r9,r4
    b518:	1987883a 	add	r3,r3,r6
    b51c:	28c7883a 	add	r3,r5,r3
    b520:	1980022e 	bgeu	r3,r6,b52c <__divdf3+0x574>
    b524:	01000074 	movhi	r4,1
    b528:	4913883a 	add	r9,r9,r4
    b52c:	1808d43a 	srli	r4,r3,16
    b530:	1806943a 	slli	r3,r3,16
    b534:	10bfffcc 	andi	r2,r2,65535
    b538:	2253883a 	add	r9,r4,r9
    b53c:	1887883a 	add	r3,r3,r2
    b540:	ba403836 	bltu	r23,r9,b624 <__divdf3+0x66c>
    b544:	ba403626 	beq	r23,r9,b620 <__divdf3+0x668>
    b548:	42000054 	ori	r8,r8,1
    b54c:	a880ffc4 	addi	r2,r21,1023
    b550:	00bf570e 	bge	zero,r2,b2b0 <__alt_data_end+0xfffeb2b0>
    b554:	40c001cc 	andi	r3,r8,7
    b558:	18000726 	beq	r3,zero,b578 <__divdf3+0x5c0>
    b55c:	40c003cc 	andi	r3,r8,15
    b560:	01000104 	movi	r4,4
    b564:	19000426 	beq	r3,r4,b578 <__divdf3+0x5c0>
    b568:	4107883a 	add	r3,r8,r4
    b56c:	1a11803a 	cmpltu	r8,r3,r8
    b570:	8a23883a 	add	r17,r17,r8
    b574:	1811883a 	mov	r8,r3
    b578:	88c0402c 	andhi	r3,r17,256
    b57c:	18000426 	beq	r3,zero,b590 <__divdf3+0x5d8>
    b580:	00ffc034 	movhi	r3,65280
    b584:	18ffffc4 	addi	r3,r3,-1
    b588:	a8810004 	addi	r2,r21,1024
    b58c:	88e2703a 	and	r17,r17,r3
    b590:	00c1ff84 	movi	r3,2046
    b594:	18bee316 	blt	r3,r2,b124 <__alt_data_end+0xfffeb124>
    b598:	8824977a 	slli	r18,r17,29
    b59c:	4010d0fa 	srli	r8,r8,3
    b5a0:	8822927a 	slli	r17,r17,9
    b5a4:	1081ffcc 	andi	r2,r2,2047
    b5a8:	9224b03a 	or	r18,r18,r8
    b5ac:	880ad33a 	srli	r5,r17,12
    b5b0:	98c0004c 	andi	r3,r19,1
    b5b4:	003edf06 	br	b134 <__alt_data_end+0xfffeb134>
    b5b8:	8080022c 	andhi	r2,r16,8
    b5bc:	10001226 	beq	r2,zero,b608 <__divdf3+0x650>
    b5c0:	8880022c 	andhi	r2,r17,8
    b5c4:	1000101e 	bne	r2,zero,b608 <__divdf3+0x650>
    b5c8:	00800434 	movhi	r2,16
    b5cc:	89400234 	orhi	r5,r17,8
    b5d0:	10bfffc4 	addi	r2,r2,-1
    b5d4:	b007883a 	mov	r3,r22
    b5d8:	288a703a 	and	r5,r5,r2
    b5dc:	4025883a 	mov	r18,r8
    b5e0:	003f3106 	br	b2a8 <__alt_data_end+0xfffeb2a8>
    b5e4:	008000c4 	movi	r2,3
    b5e8:	3880a626 	beq	r7,r2,b884 <__divdf3+0x8cc>
    b5ec:	00800044 	movi	r2,1
    b5f0:	3880521e 	bne	r7,r2,b73c <__divdf3+0x784>
    b5f4:	b807883a 	mov	r3,r23
    b5f8:	0005883a 	mov	r2,zero
    b5fc:	000b883a 	mov	r5,zero
    b600:	0025883a 	mov	r18,zero
    b604:	003ecb06 	br	b134 <__alt_data_end+0xfffeb134>
    b608:	00800434 	movhi	r2,16
    b60c:	81400234 	orhi	r5,r16,8
    b610:	10bfffc4 	addi	r2,r2,-1
    b614:	a007883a 	mov	r3,r20
    b618:	288a703a 	and	r5,r5,r2
    b61c:	003f2206 	br	b2a8 <__alt_data_end+0xfffeb2a8>
    b620:	183fca26 	beq	r3,zero,b54c <__alt_data_end+0xfffeb54c>
    b624:	e5ef883a 	add	r23,fp,r23
    b628:	40bfffc4 	addi	r2,r8,-1
    b62c:	bf00392e 	bgeu	r23,fp,b714 <__divdf3+0x75c>
    b630:	1011883a 	mov	r8,r2
    b634:	ba7fc41e 	bne	r23,r9,b548 <__alt_data_end+0xfffeb548>
    b638:	b0ffc31e 	bne	r22,r3,b548 <__alt_data_end+0xfffeb548>
    b63c:	003fc306 	br	b54c <__alt_data_end+0xfffeb54c>
    b640:	143ff604 	addi	r16,r2,-40
    b644:	9c20983a 	sll	r16,r19,r16
    b648:	0025883a 	mov	r18,zero
    b64c:	003ee206 	br	b1d8 <__alt_data_end+0xfffeb1d8>
    b650:	d9800315 	stw	r6,12(sp)
    b654:	d9c00215 	stw	r7,8(sp)
    b658:	000cd100 	call	cd10 <__clzsi2>
    b65c:	10800804 	addi	r2,r2,32
    b660:	d9c00217 	ldw	r7,8(sp)
    b664:	d9800317 	ldw	r6,12(sp)
    b668:	003ed106 	br	b1b0 <__alt_data_end+0xfffeb1b0>
    b66c:	147ff604 	addi	r17,r2,-40
    b670:	3462983a 	sll	r17,r6,r17
    b674:	0011883a 	mov	r8,zero
    b678:	003ef506 	br	b250 <__alt_data_end+0xfffeb250>
    b67c:	3009883a 	mov	r4,r6
    b680:	d9800315 	stw	r6,12(sp)
    b684:	da400115 	stw	r9,4(sp)
    b688:	000cd100 	call	cd10 <__clzsi2>
    b68c:	10800804 	addi	r2,r2,32
    b690:	da400117 	ldw	r9,4(sp)
    b694:	d9800317 	ldw	r6,12(sp)
    b698:	003ee306 	br	b228 <__alt_data_end+0xfffeb228>
    b69c:	85a1883a 	add	r16,r16,r22
    b6a0:	8585803a 	cmpltu	r2,r16,r22
    b6a4:	1705883a 	add	r2,r2,fp
    b6a8:	14a5883a 	add	r18,r2,r18
    b6ac:	88bfffc4 	addi	r2,r17,-1
    b6b0:	e4800c2e 	bgeu	fp,r18,b6e4 <__divdf3+0x72c>
    b6b4:	90c03e36 	bltu	r18,r3,b7b0 <__divdf3+0x7f8>
    b6b8:	1c806926 	beq	r3,r18,b860 <__divdf3+0x8a8>
    b6bc:	90c7c83a 	sub	r3,r18,r3
    b6c0:	1023883a 	mov	r17,r2
    b6c4:	003f5206 	br	b410 <__alt_data_end+0xfffeb410>
    b6c8:	923f0436 	bltu	r18,r8,b2dc <__alt_data_end+0xfffeb2dc>
    b6cc:	800897fa 	slli	r4,r16,31
    b6d0:	9004d07a 	srli	r2,r18,1
    b6d4:	8006d07a 	srli	r3,r16,1
    b6d8:	902097fa 	slli	r16,r18,31
    b6dc:	20a4b03a 	or	r18,r4,r2
    b6e0:	003f0106 	br	b2e8 <__alt_data_end+0xfffeb2e8>
    b6e4:	e4bff51e 	bne	fp,r18,b6bc <__alt_data_end+0xfffeb6bc>
    b6e8:	85bff22e 	bgeu	r16,r22,b6b4 <__alt_data_end+0xfffeb6b4>
    b6ec:	e0c7c83a 	sub	r3,fp,r3
    b6f0:	1023883a 	mov	r17,r2
    b6f4:	003f4606 	br	b410 <__alt_data_end+0xfffeb410>
    b6f8:	100f883a 	mov	r7,r2
    b6fc:	003f2b06 	br	b3ac <__alt_data_end+0xfffeb3ac>
    b700:	180d883a 	mov	r6,r3
    b704:	003f1306 	br	b354 <__alt_data_end+0xfffeb354>
    b708:	813fe436 	bltu	r16,r4,b69c <__alt_data_end+0xfffeb69c>
    b70c:	0007883a 	mov	r3,zero
    b710:	003f3f06 	br	b410 <__alt_data_end+0xfffeb410>
    b714:	ba402c36 	bltu	r23,r9,b7c8 <__divdf3+0x810>
    b718:	4dc05426 	beq	r9,r23,b86c <__divdf3+0x8b4>
    b71c:	1011883a 	mov	r8,r2
    b720:	003f8906 	br	b548 <__alt_data_end+0xfffeb548>
    b724:	023fffc4 	movi	r8,-1
    b728:	003f8806 	br	b54c <__alt_data_end+0xfffeb54c>
    b72c:	1811883a 	mov	r8,r3
    b730:	003f5406 	br	b484 <__alt_data_end+0xfffeb484>
    b734:	1025883a 	mov	r18,r2
    b738:	003f6d06 	br	b4f0 <__alt_data_end+0xfffeb4f0>
    b73c:	b827883a 	mov	r19,r23
    b740:	003f8206 	br	b54c <__alt_data_end+0xfffeb54c>
    b744:	010007c4 	movi	r4,31
    b748:	20c02616 	blt	r4,r3,b7e4 <__divdf3+0x82c>
    b74c:	00800804 	movi	r2,32
    b750:	10c5c83a 	sub	r2,r2,r3
    b754:	888a983a 	sll	r5,r17,r2
    b758:	40c8d83a 	srl	r4,r8,r3
    b75c:	4084983a 	sll	r2,r8,r2
    b760:	88e2d83a 	srl	r17,r17,r3
    b764:	2906b03a 	or	r3,r5,r4
    b768:	1004c03a 	cmpne	r2,r2,zero
    b76c:	1886b03a 	or	r3,r3,r2
    b770:	188001cc 	andi	r2,r3,7
    b774:	10000726 	beq	r2,zero,b794 <__divdf3+0x7dc>
    b778:	188003cc 	andi	r2,r3,15
    b77c:	01000104 	movi	r4,4
    b780:	11000426 	beq	r2,r4,b794 <__divdf3+0x7dc>
    b784:	1805883a 	mov	r2,r3
    b788:	10c00104 	addi	r3,r2,4
    b78c:	1885803a 	cmpltu	r2,r3,r2
    b790:	88a3883a 	add	r17,r17,r2
    b794:	8880202c 	andhi	r2,r17,128
    b798:	10002726 	beq	r2,zero,b838 <__divdf3+0x880>
    b79c:	98c0004c 	andi	r3,r19,1
    b7a0:	00800044 	movi	r2,1
    b7a4:	000b883a 	mov	r5,zero
    b7a8:	0025883a 	mov	r18,zero
    b7ac:	003e6106 	br	b134 <__alt_data_end+0xfffeb134>
    b7b0:	85a1883a 	add	r16,r16,r22
    b7b4:	8585803a 	cmpltu	r2,r16,r22
    b7b8:	1705883a 	add	r2,r2,fp
    b7bc:	14a5883a 	add	r18,r2,r18
    b7c0:	8c7fff84 	addi	r17,r17,-2
    b7c4:	003f1106 	br	b40c <__alt_data_end+0xfffeb40c>
    b7c8:	b589883a 	add	r4,r22,r22
    b7cc:	25ad803a 	cmpltu	r22,r4,r22
    b7d0:	b739883a 	add	fp,r22,fp
    b7d4:	40bfff84 	addi	r2,r8,-2
    b7d8:	bf2f883a 	add	r23,r23,fp
    b7dc:	202d883a 	mov	r22,r4
    b7e0:	003f9306 	br	b630 <__alt_data_end+0xfffeb630>
    b7e4:	013ff844 	movi	r4,-31
    b7e8:	2085c83a 	sub	r2,r4,r2
    b7ec:	8888d83a 	srl	r4,r17,r2
    b7f0:	00800804 	movi	r2,32
    b7f4:	18802126 	beq	r3,r2,b87c <__divdf3+0x8c4>
    b7f8:	00801004 	movi	r2,64
    b7fc:	10c5c83a 	sub	r2,r2,r3
    b800:	8884983a 	sll	r2,r17,r2
    b804:	1204b03a 	or	r2,r2,r8
    b808:	1004c03a 	cmpne	r2,r2,zero
    b80c:	2084b03a 	or	r2,r4,r2
    b810:	144001cc 	andi	r17,r2,7
    b814:	88000d1e 	bne	r17,zero,b84c <__divdf3+0x894>
    b818:	000b883a 	mov	r5,zero
    b81c:	1024d0fa 	srli	r18,r2,3
    b820:	98c0004c 	andi	r3,r19,1
    b824:	0005883a 	mov	r2,zero
    b828:	9464b03a 	or	r18,r18,r17
    b82c:	003e4106 	br	b134 <__alt_data_end+0xfffeb134>
    b830:	1007883a 	mov	r3,r2
    b834:	0023883a 	mov	r17,zero
    b838:	880a927a 	slli	r5,r17,9
    b83c:	1805883a 	mov	r2,r3
    b840:	8822977a 	slli	r17,r17,29
    b844:	280ad33a 	srli	r5,r5,12
    b848:	003ff406 	br	b81c <__alt_data_end+0xfffeb81c>
    b84c:	10c003cc 	andi	r3,r2,15
    b850:	01000104 	movi	r4,4
    b854:	193ff626 	beq	r3,r4,b830 <__alt_data_end+0xfffeb830>
    b858:	0023883a 	mov	r17,zero
    b85c:	003fca06 	br	b788 <__alt_data_end+0xfffeb788>
    b860:	813fd336 	bltu	r16,r4,b7b0 <__alt_data_end+0xfffeb7b0>
    b864:	1023883a 	mov	r17,r2
    b868:	003fa806 	br	b70c <__alt_data_end+0xfffeb70c>
    b86c:	b0ffd636 	bltu	r22,r3,b7c8 <__alt_data_end+0xfffeb7c8>
    b870:	1011883a 	mov	r8,r2
    b874:	b0ff341e 	bne	r22,r3,b548 <__alt_data_end+0xfffeb548>
    b878:	003f3406 	br	b54c <__alt_data_end+0xfffeb54c>
    b87c:	0005883a 	mov	r2,zero
    b880:	003fe006 	br	b804 <__alt_data_end+0xfffeb804>
    b884:	00800434 	movhi	r2,16
    b888:	89400234 	orhi	r5,r17,8
    b88c:	10bfffc4 	addi	r2,r2,-1
    b890:	b807883a 	mov	r3,r23
    b894:	288a703a 	and	r5,r5,r2
    b898:	4025883a 	mov	r18,r8
    b89c:	003e8206 	br	b2a8 <__alt_data_end+0xfffeb2a8>

0000b8a0 <__eqdf2>:
    b8a0:	2804d53a 	srli	r2,r5,20
    b8a4:	3806d53a 	srli	r3,r7,20
    b8a8:	02000434 	movhi	r8,16
    b8ac:	423fffc4 	addi	r8,r8,-1
    b8b0:	1081ffcc 	andi	r2,r2,2047
    b8b4:	0281ffc4 	movi	r10,2047
    b8b8:	2a12703a 	and	r9,r5,r8
    b8bc:	18c1ffcc 	andi	r3,r3,2047
    b8c0:	3a10703a 	and	r8,r7,r8
    b8c4:	280ad7fa 	srli	r5,r5,31
    b8c8:	380ed7fa 	srli	r7,r7,31
    b8cc:	12801026 	beq	r2,r10,b910 <__eqdf2+0x70>
    b8d0:	0281ffc4 	movi	r10,2047
    b8d4:	1a800a26 	beq	r3,r10,b900 <__eqdf2+0x60>
    b8d8:	10c00226 	beq	r2,r3,b8e4 <__eqdf2+0x44>
    b8dc:	00800044 	movi	r2,1
    b8e0:	f800283a 	ret
    b8e4:	4a3ffd1e 	bne	r9,r8,b8dc <__alt_data_end+0xfffeb8dc>
    b8e8:	21bffc1e 	bne	r4,r6,b8dc <__alt_data_end+0xfffeb8dc>
    b8ec:	29c00c26 	beq	r5,r7,b920 <__eqdf2+0x80>
    b8f0:	103ffa1e 	bne	r2,zero,b8dc <__alt_data_end+0xfffeb8dc>
    b8f4:	2244b03a 	or	r2,r4,r9
    b8f8:	1004c03a 	cmpne	r2,r2,zero
    b8fc:	f800283a 	ret
    b900:	3214b03a 	or	r10,r6,r8
    b904:	503ff426 	beq	r10,zero,b8d8 <__alt_data_end+0xfffeb8d8>
    b908:	00800044 	movi	r2,1
    b90c:	f800283a 	ret
    b910:	2254b03a 	or	r10,r4,r9
    b914:	503fee26 	beq	r10,zero,b8d0 <__alt_data_end+0xfffeb8d0>
    b918:	00800044 	movi	r2,1
    b91c:	f800283a 	ret
    b920:	0005883a 	mov	r2,zero
    b924:	f800283a 	ret

0000b928 <__gedf2>:
    b928:	2804d53a 	srli	r2,r5,20
    b92c:	3806d53a 	srli	r3,r7,20
    b930:	02000434 	movhi	r8,16
    b934:	423fffc4 	addi	r8,r8,-1
    b938:	1081ffcc 	andi	r2,r2,2047
    b93c:	0241ffc4 	movi	r9,2047
    b940:	2a14703a 	and	r10,r5,r8
    b944:	18c1ffcc 	andi	r3,r3,2047
    b948:	3a10703a 	and	r8,r7,r8
    b94c:	280ad7fa 	srli	r5,r5,31
    b950:	380ed7fa 	srli	r7,r7,31
    b954:	12401d26 	beq	r2,r9,b9cc <__gedf2+0xa4>
    b958:	0241ffc4 	movi	r9,2047
    b95c:	1a401226 	beq	r3,r9,b9a8 <__gedf2+0x80>
    b960:	1000081e 	bne	r2,zero,b984 <__gedf2+0x5c>
    b964:	2296b03a 	or	r11,r4,r10
    b968:	5813003a 	cmpeq	r9,r11,zero
    b96c:	1800091e 	bne	r3,zero,b994 <__gedf2+0x6c>
    b970:	3218b03a 	or	r12,r6,r8
    b974:	6000071e 	bne	r12,zero,b994 <__gedf2+0x6c>
    b978:	0005883a 	mov	r2,zero
    b97c:	5800101e 	bne	r11,zero,b9c0 <__gedf2+0x98>
    b980:	f800283a 	ret
    b984:	18000c1e 	bne	r3,zero,b9b8 <__gedf2+0x90>
    b988:	3212b03a 	or	r9,r6,r8
    b98c:	48000c26 	beq	r9,zero,b9c0 <__gedf2+0x98>
    b990:	0013883a 	mov	r9,zero
    b994:	39c03fcc 	andi	r7,r7,255
    b998:	48000826 	beq	r9,zero,b9bc <__gedf2+0x94>
    b99c:	38000926 	beq	r7,zero,b9c4 <__gedf2+0x9c>
    b9a0:	00800044 	movi	r2,1
    b9a4:	f800283a 	ret
    b9a8:	3212b03a 	or	r9,r6,r8
    b9ac:	483fec26 	beq	r9,zero,b960 <__alt_data_end+0xfffeb960>
    b9b0:	00bfff84 	movi	r2,-2
    b9b4:	f800283a 	ret
    b9b8:	39c03fcc 	andi	r7,r7,255
    b9bc:	29c00626 	beq	r5,r7,b9d8 <__gedf2+0xb0>
    b9c0:	283ff726 	beq	r5,zero,b9a0 <__alt_data_end+0xfffeb9a0>
    b9c4:	00bfffc4 	movi	r2,-1
    b9c8:	f800283a 	ret
    b9cc:	2292b03a 	or	r9,r4,r10
    b9d0:	483fe126 	beq	r9,zero,b958 <__alt_data_end+0xfffeb958>
    b9d4:	003ff606 	br	b9b0 <__alt_data_end+0xfffeb9b0>
    b9d8:	18bff916 	blt	r3,r2,b9c0 <__alt_data_end+0xfffeb9c0>
    b9dc:	10c00316 	blt	r2,r3,b9ec <__gedf2+0xc4>
    b9e0:	42bff736 	bltu	r8,r10,b9c0 <__alt_data_end+0xfffeb9c0>
    b9e4:	52000326 	beq	r10,r8,b9f4 <__gedf2+0xcc>
    b9e8:	5200042e 	bgeu	r10,r8,b9fc <__gedf2+0xd4>
    b9ec:	283fec1e 	bne	r5,zero,b9a0 <__alt_data_end+0xfffeb9a0>
    b9f0:	003ff406 	br	b9c4 <__alt_data_end+0xfffeb9c4>
    b9f4:	313ff236 	bltu	r6,r4,b9c0 <__alt_data_end+0xfffeb9c0>
    b9f8:	21bffc36 	bltu	r4,r6,b9ec <__alt_data_end+0xfffeb9ec>
    b9fc:	0005883a 	mov	r2,zero
    ba00:	f800283a 	ret

0000ba04 <__ledf2>:
    ba04:	2804d53a 	srli	r2,r5,20
    ba08:	3810d53a 	srli	r8,r7,20
    ba0c:	00c00434 	movhi	r3,16
    ba10:	18ffffc4 	addi	r3,r3,-1
    ba14:	1081ffcc 	andi	r2,r2,2047
    ba18:	0241ffc4 	movi	r9,2047
    ba1c:	28d4703a 	and	r10,r5,r3
    ba20:	4201ffcc 	andi	r8,r8,2047
    ba24:	38c6703a 	and	r3,r7,r3
    ba28:	280ad7fa 	srli	r5,r5,31
    ba2c:	380ed7fa 	srli	r7,r7,31
    ba30:	12401f26 	beq	r2,r9,bab0 <__ledf2+0xac>
    ba34:	0241ffc4 	movi	r9,2047
    ba38:	42401426 	beq	r8,r9,ba8c <__ledf2+0x88>
    ba3c:	1000091e 	bne	r2,zero,ba64 <__ledf2+0x60>
    ba40:	2296b03a 	or	r11,r4,r10
    ba44:	5813003a 	cmpeq	r9,r11,zero
    ba48:	29403fcc 	andi	r5,r5,255
    ba4c:	40000a1e 	bne	r8,zero,ba78 <__ledf2+0x74>
    ba50:	30d8b03a 	or	r12,r6,r3
    ba54:	6000081e 	bne	r12,zero,ba78 <__ledf2+0x74>
    ba58:	0005883a 	mov	r2,zero
    ba5c:	5800111e 	bne	r11,zero,baa4 <__ledf2+0xa0>
    ba60:	f800283a 	ret
    ba64:	29403fcc 	andi	r5,r5,255
    ba68:	40000c1e 	bne	r8,zero,ba9c <__ledf2+0x98>
    ba6c:	30d2b03a 	or	r9,r6,r3
    ba70:	48000c26 	beq	r9,zero,baa4 <__ledf2+0xa0>
    ba74:	0013883a 	mov	r9,zero
    ba78:	39c03fcc 	andi	r7,r7,255
    ba7c:	48000826 	beq	r9,zero,baa0 <__ledf2+0x9c>
    ba80:	38001126 	beq	r7,zero,bac8 <__ledf2+0xc4>
    ba84:	00800044 	movi	r2,1
    ba88:	f800283a 	ret
    ba8c:	30d2b03a 	or	r9,r6,r3
    ba90:	483fea26 	beq	r9,zero,ba3c <__alt_data_end+0xfffeba3c>
    ba94:	00800084 	movi	r2,2
    ba98:	f800283a 	ret
    ba9c:	39c03fcc 	andi	r7,r7,255
    baa0:	39400726 	beq	r7,r5,bac0 <__ledf2+0xbc>
    baa4:	2800081e 	bne	r5,zero,bac8 <__ledf2+0xc4>
    baa8:	00800044 	movi	r2,1
    baac:	f800283a 	ret
    bab0:	2292b03a 	or	r9,r4,r10
    bab4:	483fdf26 	beq	r9,zero,ba34 <__alt_data_end+0xfffeba34>
    bab8:	00800084 	movi	r2,2
    babc:	f800283a 	ret
    bac0:	4080030e 	bge	r8,r2,bad0 <__ledf2+0xcc>
    bac4:	383fef26 	beq	r7,zero,ba84 <__alt_data_end+0xfffeba84>
    bac8:	00bfffc4 	movi	r2,-1
    bacc:	f800283a 	ret
    bad0:	123feb16 	blt	r2,r8,ba80 <__alt_data_end+0xfffeba80>
    bad4:	1abff336 	bltu	r3,r10,baa4 <__alt_data_end+0xfffebaa4>
    bad8:	50c00326 	beq	r10,r3,bae8 <__ledf2+0xe4>
    badc:	50c0042e 	bgeu	r10,r3,baf0 <__ledf2+0xec>
    bae0:	283fe81e 	bne	r5,zero,ba84 <__alt_data_end+0xfffeba84>
    bae4:	003ff806 	br	bac8 <__alt_data_end+0xfffebac8>
    bae8:	313fee36 	bltu	r6,r4,baa4 <__alt_data_end+0xfffebaa4>
    baec:	21bffc36 	bltu	r4,r6,bae0 <__alt_data_end+0xfffebae0>
    baf0:	0005883a 	mov	r2,zero
    baf4:	f800283a 	ret

0000baf8 <__muldf3>:
    baf8:	defff304 	addi	sp,sp,-52
    bafc:	2804d53a 	srli	r2,r5,20
    bb00:	dd800915 	stw	r22,36(sp)
    bb04:	282cd7fa 	srli	r22,r5,31
    bb08:	dc000315 	stw	r16,12(sp)
    bb0c:	04000434 	movhi	r16,16
    bb10:	dd400815 	stw	r21,32(sp)
    bb14:	dc800515 	stw	r18,20(sp)
    bb18:	843fffc4 	addi	r16,r16,-1
    bb1c:	dfc00c15 	stw	ra,48(sp)
    bb20:	df000b15 	stw	fp,44(sp)
    bb24:	ddc00a15 	stw	r23,40(sp)
    bb28:	dd000715 	stw	r20,28(sp)
    bb2c:	dcc00615 	stw	r19,24(sp)
    bb30:	dc400415 	stw	r17,16(sp)
    bb34:	1481ffcc 	andi	r18,r2,2047
    bb38:	2c20703a 	and	r16,r5,r16
    bb3c:	b02b883a 	mov	r21,r22
    bb40:	b2403fcc 	andi	r9,r22,255
    bb44:	90006026 	beq	r18,zero,bcc8 <__muldf3+0x1d0>
    bb48:	0081ffc4 	movi	r2,2047
    bb4c:	2029883a 	mov	r20,r4
    bb50:	90803626 	beq	r18,r2,bc2c <__muldf3+0x134>
    bb54:	80800434 	orhi	r2,r16,16
    bb58:	100490fa 	slli	r2,r2,3
    bb5c:	2020d77a 	srli	r16,r4,29
    bb60:	202890fa 	slli	r20,r4,3
    bb64:	94bf0044 	addi	r18,r18,-1023
    bb68:	80a0b03a 	or	r16,r16,r2
    bb6c:	0027883a 	mov	r19,zero
    bb70:	0039883a 	mov	fp,zero
    bb74:	3804d53a 	srli	r2,r7,20
    bb78:	382ed7fa 	srli	r23,r7,31
    bb7c:	04400434 	movhi	r17,16
    bb80:	8c7fffc4 	addi	r17,r17,-1
    bb84:	1081ffcc 	andi	r2,r2,2047
    bb88:	3011883a 	mov	r8,r6
    bb8c:	3c62703a 	and	r17,r7,r17
    bb90:	ba803fcc 	andi	r10,r23,255
    bb94:	10006d26 	beq	r2,zero,bd4c <__muldf3+0x254>
    bb98:	00c1ffc4 	movi	r3,2047
    bb9c:	10c06526 	beq	r2,r3,bd34 <__muldf3+0x23c>
    bba0:	88c00434 	orhi	r3,r17,16
    bba4:	180690fa 	slli	r3,r3,3
    bba8:	3022d77a 	srli	r17,r6,29
    bbac:	301090fa 	slli	r8,r6,3
    bbb0:	10bf0044 	addi	r2,r2,-1023
    bbb4:	88e2b03a 	or	r17,r17,r3
    bbb8:	000b883a 	mov	r5,zero
    bbbc:	9085883a 	add	r2,r18,r2
    bbc0:	2cc8b03a 	or	r4,r5,r19
    bbc4:	00c003c4 	movi	r3,15
    bbc8:	bdacf03a 	xor	r22,r23,r22
    bbcc:	12c00044 	addi	r11,r2,1
    bbd0:	19009936 	bltu	r3,r4,be38 <__muldf3+0x340>
    bbd4:	200890ba 	slli	r4,r4,2
    bbd8:	00c00074 	movhi	r3,1
    bbdc:	18eefb04 	addi	r3,r3,-17428
    bbe0:	20c9883a 	add	r4,r4,r3
    bbe4:	20c00017 	ldw	r3,0(r4)
    bbe8:	1800683a 	jmp	r3
    bbec:	0000be38 	rdprs	zero,zero,760
    bbf0:	0000bc4c 	andi	zero,zero,753
    bbf4:	0000bc4c 	andi	zero,zero,753
    bbf8:	0000bc48 	cmpgei	zero,zero,753
    bbfc:	0000be14 	movui	zero,760
    bc00:	0000be14 	movui	zero,760
    bc04:	0000bdfc 	xorhi	zero,zero,759
    bc08:	0000bc48 	cmpgei	zero,zero,753
    bc0c:	0000be14 	movui	zero,760
    bc10:	0000bdfc 	xorhi	zero,zero,759
    bc14:	0000be14 	movui	zero,760
    bc18:	0000bc48 	cmpgei	zero,zero,753
    bc1c:	0000be24 	muli	zero,zero,760
    bc20:	0000be24 	muli	zero,zero,760
    bc24:	0000be24 	muli	zero,zero,760
    bc28:	0000c040 	call	c04 <___vfprintf_internal_r+0x4bc>
    bc2c:	2404b03a 	or	r2,r4,r16
    bc30:	10006f1e 	bne	r2,zero,bdf0 <__muldf3+0x2f8>
    bc34:	04c00204 	movi	r19,8
    bc38:	0021883a 	mov	r16,zero
    bc3c:	0029883a 	mov	r20,zero
    bc40:	07000084 	movi	fp,2
    bc44:	003fcb06 	br	bb74 <__alt_data_end+0xfffebb74>
    bc48:	502d883a 	mov	r22,r10
    bc4c:	00800084 	movi	r2,2
    bc50:	28805726 	beq	r5,r2,bdb0 <__muldf3+0x2b8>
    bc54:	008000c4 	movi	r2,3
    bc58:	28816626 	beq	r5,r2,c1f4 <__muldf3+0x6fc>
    bc5c:	00800044 	movi	r2,1
    bc60:	2881411e 	bne	r5,r2,c168 <__muldf3+0x670>
    bc64:	b02b883a 	mov	r21,r22
    bc68:	0005883a 	mov	r2,zero
    bc6c:	000b883a 	mov	r5,zero
    bc70:	0029883a 	mov	r20,zero
    bc74:	1004953a 	slli	r2,r2,20
    bc78:	a8c03fcc 	andi	r3,r21,255
    bc7c:	04400434 	movhi	r17,16
    bc80:	8c7fffc4 	addi	r17,r17,-1
    bc84:	180697fa 	slli	r3,r3,31
    bc88:	2c4a703a 	and	r5,r5,r17
    bc8c:	288ab03a 	or	r5,r5,r2
    bc90:	28c6b03a 	or	r3,r5,r3
    bc94:	a005883a 	mov	r2,r20
    bc98:	dfc00c17 	ldw	ra,48(sp)
    bc9c:	df000b17 	ldw	fp,44(sp)
    bca0:	ddc00a17 	ldw	r23,40(sp)
    bca4:	dd800917 	ldw	r22,36(sp)
    bca8:	dd400817 	ldw	r21,32(sp)
    bcac:	dd000717 	ldw	r20,28(sp)
    bcb0:	dcc00617 	ldw	r19,24(sp)
    bcb4:	dc800517 	ldw	r18,20(sp)
    bcb8:	dc400417 	ldw	r17,16(sp)
    bcbc:	dc000317 	ldw	r16,12(sp)
    bcc0:	dec00d04 	addi	sp,sp,52
    bcc4:	f800283a 	ret
    bcc8:	2404b03a 	or	r2,r4,r16
    bccc:	2027883a 	mov	r19,r4
    bcd0:	10004226 	beq	r2,zero,bddc <__muldf3+0x2e4>
    bcd4:	8000fc26 	beq	r16,zero,c0c8 <__muldf3+0x5d0>
    bcd8:	8009883a 	mov	r4,r16
    bcdc:	d9800215 	stw	r6,8(sp)
    bce0:	d9c00015 	stw	r7,0(sp)
    bce4:	da400115 	stw	r9,4(sp)
    bce8:	000cd100 	call	cd10 <__clzsi2>
    bcec:	d9800217 	ldw	r6,8(sp)
    bcf0:	d9c00017 	ldw	r7,0(sp)
    bcf4:	da400117 	ldw	r9,4(sp)
    bcf8:	113ffd44 	addi	r4,r2,-11
    bcfc:	00c00704 	movi	r3,28
    bd00:	1900ed16 	blt	r3,r4,c0b8 <__muldf3+0x5c0>
    bd04:	00c00744 	movi	r3,29
    bd08:	147ffe04 	addi	r17,r2,-8
    bd0c:	1907c83a 	sub	r3,r3,r4
    bd10:	8460983a 	sll	r16,r16,r17
    bd14:	98c6d83a 	srl	r3,r19,r3
    bd18:	9c68983a 	sll	r20,r19,r17
    bd1c:	1c20b03a 	or	r16,r3,r16
    bd20:	1080fcc4 	addi	r2,r2,1011
    bd24:	00a5c83a 	sub	r18,zero,r2
    bd28:	0027883a 	mov	r19,zero
    bd2c:	0039883a 	mov	fp,zero
    bd30:	003f9006 	br	bb74 <__alt_data_end+0xfffebb74>
    bd34:	3446b03a 	or	r3,r6,r17
    bd38:	1800261e 	bne	r3,zero,bdd4 <__muldf3+0x2dc>
    bd3c:	0023883a 	mov	r17,zero
    bd40:	0011883a 	mov	r8,zero
    bd44:	01400084 	movi	r5,2
    bd48:	003f9c06 	br	bbbc <__alt_data_end+0xfffebbbc>
    bd4c:	3446b03a 	or	r3,r6,r17
    bd50:	18001c26 	beq	r3,zero,bdc4 <__muldf3+0x2cc>
    bd54:	8800ce26 	beq	r17,zero,c090 <__muldf3+0x598>
    bd58:	8809883a 	mov	r4,r17
    bd5c:	d9800215 	stw	r6,8(sp)
    bd60:	da400115 	stw	r9,4(sp)
    bd64:	da800015 	stw	r10,0(sp)
    bd68:	000cd100 	call	cd10 <__clzsi2>
    bd6c:	d9800217 	ldw	r6,8(sp)
    bd70:	da400117 	ldw	r9,4(sp)
    bd74:	da800017 	ldw	r10,0(sp)
    bd78:	113ffd44 	addi	r4,r2,-11
    bd7c:	00c00704 	movi	r3,28
    bd80:	1900bf16 	blt	r3,r4,c080 <__muldf3+0x588>
    bd84:	00c00744 	movi	r3,29
    bd88:	123ffe04 	addi	r8,r2,-8
    bd8c:	1907c83a 	sub	r3,r3,r4
    bd90:	8a22983a 	sll	r17,r17,r8
    bd94:	30c6d83a 	srl	r3,r6,r3
    bd98:	3210983a 	sll	r8,r6,r8
    bd9c:	1c62b03a 	or	r17,r3,r17
    bda0:	1080fcc4 	addi	r2,r2,1011
    bda4:	0085c83a 	sub	r2,zero,r2
    bda8:	000b883a 	mov	r5,zero
    bdac:	003f8306 	br	bbbc <__alt_data_end+0xfffebbbc>
    bdb0:	b02b883a 	mov	r21,r22
    bdb4:	0081ffc4 	movi	r2,2047
    bdb8:	000b883a 	mov	r5,zero
    bdbc:	0029883a 	mov	r20,zero
    bdc0:	003fac06 	br	bc74 <__alt_data_end+0xfffebc74>
    bdc4:	0023883a 	mov	r17,zero
    bdc8:	0011883a 	mov	r8,zero
    bdcc:	01400044 	movi	r5,1
    bdd0:	003f7a06 	br	bbbc <__alt_data_end+0xfffebbbc>
    bdd4:	014000c4 	movi	r5,3
    bdd8:	003f7806 	br	bbbc <__alt_data_end+0xfffebbbc>
    bddc:	04c00104 	movi	r19,4
    bde0:	0021883a 	mov	r16,zero
    bde4:	0029883a 	mov	r20,zero
    bde8:	07000044 	movi	fp,1
    bdec:	003f6106 	br	bb74 <__alt_data_end+0xfffebb74>
    bdf0:	04c00304 	movi	r19,12
    bdf4:	070000c4 	movi	fp,3
    bdf8:	003f5e06 	br	bb74 <__alt_data_end+0xfffebb74>
    bdfc:	01400434 	movhi	r5,16
    be00:	002b883a 	mov	r21,zero
    be04:	297fffc4 	addi	r5,r5,-1
    be08:	053fffc4 	movi	r20,-1
    be0c:	0081ffc4 	movi	r2,2047
    be10:	003f9806 	br	bc74 <__alt_data_end+0xfffebc74>
    be14:	8023883a 	mov	r17,r16
    be18:	a011883a 	mov	r8,r20
    be1c:	e00b883a 	mov	r5,fp
    be20:	003f8a06 	br	bc4c <__alt_data_end+0xfffebc4c>
    be24:	8023883a 	mov	r17,r16
    be28:	a011883a 	mov	r8,r20
    be2c:	482d883a 	mov	r22,r9
    be30:	e00b883a 	mov	r5,fp
    be34:	003f8506 	br	bc4c <__alt_data_end+0xfffebc4c>
    be38:	a00ad43a 	srli	r5,r20,16
    be3c:	401ad43a 	srli	r13,r8,16
    be40:	a53fffcc 	andi	r20,r20,65535
    be44:	423fffcc 	andi	r8,r8,65535
    be48:	4519383a 	mul	r12,r8,r20
    be4c:	4147383a 	mul	r3,r8,r5
    be50:	6d09383a 	mul	r4,r13,r20
    be54:	600cd43a 	srli	r6,r12,16
    be58:	2b5d383a 	mul	r14,r5,r13
    be5c:	20c9883a 	add	r4,r4,r3
    be60:	310d883a 	add	r6,r6,r4
    be64:	30c0022e 	bgeu	r6,r3,be70 <__muldf3+0x378>
    be68:	00c00074 	movhi	r3,1
    be6c:	70dd883a 	add	r14,r14,r3
    be70:	8826d43a 	srli	r19,r17,16
    be74:	8bffffcc 	andi	r15,r17,65535
    be78:	7d23383a 	mul	r17,r15,r20
    be7c:	7949383a 	mul	r4,r15,r5
    be80:	9d29383a 	mul	r20,r19,r20
    be84:	8814d43a 	srli	r10,r17,16
    be88:	3012943a 	slli	r9,r6,16
    be8c:	a129883a 	add	r20,r20,r4
    be90:	633fffcc 	andi	r12,r12,65535
    be94:	5515883a 	add	r10,r10,r20
    be98:	3006d43a 	srli	r3,r6,16
    be9c:	4b13883a 	add	r9,r9,r12
    bea0:	2ccb383a 	mul	r5,r5,r19
    bea4:	5100022e 	bgeu	r10,r4,beb0 <__muldf3+0x3b8>
    bea8:	01000074 	movhi	r4,1
    beac:	290b883a 	add	r5,r5,r4
    beb0:	802ad43a 	srli	r21,r16,16
    beb4:	843fffcc 	andi	r16,r16,65535
    beb8:	440d383a 	mul	r6,r8,r16
    bebc:	4565383a 	mul	r18,r8,r21
    bec0:	8349383a 	mul	r4,r16,r13
    bec4:	500e943a 	slli	r7,r10,16
    bec8:	3010d43a 	srli	r8,r6,16
    becc:	5028d43a 	srli	r20,r10,16
    bed0:	2489883a 	add	r4,r4,r18
    bed4:	8abfffcc 	andi	r10,r17,65535
    bed8:	3a95883a 	add	r10,r7,r10
    bedc:	4119883a 	add	r12,r8,r4
    bee0:	a169883a 	add	r20,r20,r5
    bee4:	1a87883a 	add	r3,r3,r10
    bee8:	6d5b383a 	mul	r13,r13,r21
    beec:	6480022e 	bgeu	r12,r18,bef8 <__muldf3+0x400>
    bef0:	01000074 	movhi	r4,1
    bef4:	691b883a 	add	r13,r13,r4
    bef8:	7c25383a 	mul	r18,r15,r16
    befc:	7d4b383a 	mul	r5,r15,r21
    bf00:	84cf383a 	mul	r7,r16,r19
    bf04:	901ed43a 	srli	r15,r18,16
    bf08:	6008d43a 	srli	r4,r12,16
    bf0c:	6010943a 	slli	r8,r12,16
    bf10:	394f883a 	add	r7,r7,r5
    bf14:	333fffcc 	andi	r12,r6,65535
    bf18:	79df883a 	add	r15,r15,r7
    bf1c:	235b883a 	add	r13,r4,r13
    bf20:	9d63383a 	mul	r17,r19,r21
    bf24:	4309883a 	add	r4,r8,r12
    bf28:	7940022e 	bgeu	r15,r5,bf34 <__muldf3+0x43c>
    bf2c:	01400074 	movhi	r5,1
    bf30:	8963883a 	add	r17,r17,r5
    bf34:	780a943a 	slli	r5,r15,16
    bf38:	91bfffcc 	andi	r6,r18,65535
    bf3c:	70c7883a 	add	r3,r14,r3
    bf40:	298d883a 	add	r6,r5,r6
    bf44:	1a8f803a 	cmpltu	r7,r3,r10
    bf48:	350b883a 	add	r5,r6,r20
    bf4c:	20c7883a 	add	r3,r4,r3
    bf50:	3955883a 	add	r10,r7,r5
    bf54:	1909803a 	cmpltu	r4,r3,r4
    bf58:	6a91883a 	add	r8,r13,r10
    bf5c:	780cd43a 	srli	r6,r15,16
    bf60:	2219883a 	add	r12,r4,r8
    bf64:	2d0b803a 	cmpltu	r5,r5,r20
    bf68:	51cf803a 	cmpltu	r7,r10,r7
    bf6c:	29ceb03a 	or	r7,r5,r7
    bf70:	4351803a 	cmpltu	r8,r8,r13
    bf74:	610b803a 	cmpltu	r5,r12,r4
    bf78:	4148b03a 	or	r4,r8,r5
    bf7c:	398f883a 	add	r7,r7,r6
    bf80:	3909883a 	add	r4,r7,r4
    bf84:	1810927a 	slli	r8,r3,9
    bf88:	2449883a 	add	r4,r4,r17
    bf8c:	2008927a 	slli	r4,r4,9
    bf90:	6022d5fa 	srli	r17,r12,23
    bf94:	1806d5fa 	srli	r3,r3,23
    bf98:	4252b03a 	or	r9,r8,r9
    bf9c:	600a927a 	slli	r5,r12,9
    bfa0:	4810c03a 	cmpne	r8,r9,zero
    bfa4:	2462b03a 	or	r17,r4,r17
    bfa8:	40c6b03a 	or	r3,r8,r3
    bfac:	8900402c 	andhi	r4,r17,256
    bfb0:	1950b03a 	or	r8,r3,r5
    bfb4:	20000726 	beq	r4,zero,bfd4 <__muldf3+0x4dc>
    bfb8:	4006d07a 	srli	r3,r8,1
    bfbc:	880497fa 	slli	r2,r17,31
    bfc0:	4200004c 	andi	r8,r8,1
    bfc4:	8822d07a 	srli	r17,r17,1
    bfc8:	1a10b03a 	or	r8,r3,r8
    bfcc:	1210b03a 	or	r8,r2,r8
    bfd0:	5805883a 	mov	r2,r11
    bfd4:	1140ffc4 	addi	r5,r2,1023
    bfd8:	0140440e 	bge	zero,r5,c0ec <__muldf3+0x5f4>
    bfdc:	40c001cc 	andi	r3,r8,7
    bfe0:	18000726 	beq	r3,zero,c000 <__muldf3+0x508>
    bfe4:	40c003cc 	andi	r3,r8,15
    bfe8:	01000104 	movi	r4,4
    bfec:	19000426 	beq	r3,r4,c000 <__muldf3+0x508>
    bff0:	4107883a 	add	r3,r8,r4
    bff4:	1a11803a 	cmpltu	r8,r3,r8
    bff8:	8a23883a 	add	r17,r17,r8
    bffc:	1811883a 	mov	r8,r3
    c000:	88c0402c 	andhi	r3,r17,256
    c004:	18000426 	beq	r3,zero,c018 <__muldf3+0x520>
    c008:	11410004 	addi	r5,r2,1024
    c00c:	00bfc034 	movhi	r2,65280
    c010:	10bfffc4 	addi	r2,r2,-1
    c014:	88a2703a 	and	r17,r17,r2
    c018:	0081ff84 	movi	r2,2046
    c01c:	117f6416 	blt	r2,r5,bdb0 <__alt_data_end+0xfffebdb0>
    c020:	8828977a 	slli	r20,r17,29
    c024:	4010d0fa 	srli	r8,r8,3
    c028:	8822927a 	slli	r17,r17,9
    c02c:	2881ffcc 	andi	r2,r5,2047
    c030:	a228b03a 	or	r20,r20,r8
    c034:	880ad33a 	srli	r5,r17,12
    c038:	b02b883a 	mov	r21,r22
    c03c:	003f0d06 	br	bc74 <__alt_data_end+0xfffebc74>
    c040:	8080022c 	andhi	r2,r16,8
    c044:	10000926 	beq	r2,zero,c06c <__muldf3+0x574>
    c048:	8880022c 	andhi	r2,r17,8
    c04c:	1000071e 	bne	r2,zero,c06c <__muldf3+0x574>
    c050:	00800434 	movhi	r2,16
    c054:	89400234 	orhi	r5,r17,8
    c058:	10bfffc4 	addi	r2,r2,-1
    c05c:	b82b883a 	mov	r21,r23
    c060:	288a703a 	and	r5,r5,r2
    c064:	4029883a 	mov	r20,r8
    c068:	003f6806 	br	be0c <__alt_data_end+0xfffebe0c>
    c06c:	00800434 	movhi	r2,16
    c070:	81400234 	orhi	r5,r16,8
    c074:	10bfffc4 	addi	r2,r2,-1
    c078:	288a703a 	and	r5,r5,r2
    c07c:	003f6306 	br	be0c <__alt_data_end+0xfffebe0c>
    c080:	147ff604 	addi	r17,r2,-40
    c084:	3462983a 	sll	r17,r6,r17
    c088:	0011883a 	mov	r8,zero
    c08c:	003f4406 	br	bda0 <__alt_data_end+0xfffebda0>
    c090:	3009883a 	mov	r4,r6
    c094:	d9800215 	stw	r6,8(sp)
    c098:	da400115 	stw	r9,4(sp)
    c09c:	da800015 	stw	r10,0(sp)
    c0a0:	000cd100 	call	cd10 <__clzsi2>
    c0a4:	10800804 	addi	r2,r2,32
    c0a8:	da800017 	ldw	r10,0(sp)
    c0ac:	da400117 	ldw	r9,4(sp)
    c0b0:	d9800217 	ldw	r6,8(sp)
    c0b4:	003f3006 	br	bd78 <__alt_data_end+0xfffebd78>
    c0b8:	143ff604 	addi	r16,r2,-40
    c0bc:	9c20983a 	sll	r16,r19,r16
    c0c0:	0029883a 	mov	r20,zero
    c0c4:	003f1606 	br	bd20 <__alt_data_end+0xfffebd20>
    c0c8:	d9800215 	stw	r6,8(sp)
    c0cc:	d9c00015 	stw	r7,0(sp)
    c0d0:	da400115 	stw	r9,4(sp)
    c0d4:	000cd100 	call	cd10 <__clzsi2>
    c0d8:	10800804 	addi	r2,r2,32
    c0dc:	da400117 	ldw	r9,4(sp)
    c0e0:	d9c00017 	ldw	r7,0(sp)
    c0e4:	d9800217 	ldw	r6,8(sp)
    c0e8:	003f0306 	br	bcf8 <__alt_data_end+0xfffebcf8>
    c0ec:	00c00044 	movi	r3,1
    c0f0:	1947c83a 	sub	r3,r3,r5
    c0f4:	00800e04 	movi	r2,56
    c0f8:	10feda16 	blt	r2,r3,bc64 <__alt_data_end+0xfffebc64>
    c0fc:	008007c4 	movi	r2,31
    c100:	10c01b16 	blt	r2,r3,c170 <__muldf3+0x678>
    c104:	00800804 	movi	r2,32
    c108:	10c5c83a 	sub	r2,r2,r3
    c10c:	888a983a 	sll	r5,r17,r2
    c110:	40c8d83a 	srl	r4,r8,r3
    c114:	4084983a 	sll	r2,r8,r2
    c118:	88e2d83a 	srl	r17,r17,r3
    c11c:	2906b03a 	or	r3,r5,r4
    c120:	1004c03a 	cmpne	r2,r2,zero
    c124:	1886b03a 	or	r3,r3,r2
    c128:	188001cc 	andi	r2,r3,7
    c12c:	10000726 	beq	r2,zero,c14c <__muldf3+0x654>
    c130:	188003cc 	andi	r2,r3,15
    c134:	01000104 	movi	r4,4
    c138:	11000426 	beq	r2,r4,c14c <__muldf3+0x654>
    c13c:	1805883a 	mov	r2,r3
    c140:	10c00104 	addi	r3,r2,4
    c144:	1885803a 	cmpltu	r2,r3,r2
    c148:	88a3883a 	add	r17,r17,r2
    c14c:	8880202c 	andhi	r2,r17,128
    c150:	10001c26 	beq	r2,zero,c1c4 <__muldf3+0x6cc>
    c154:	b02b883a 	mov	r21,r22
    c158:	00800044 	movi	r2,1
    c15c:	000b883a 	mov	r5,zero
    c160:	0029883a 	mov	r20,zero
    c164:	003ec306 	br	bc74 <__alt_data_end+0xfffebc74>
    c168:	5805883a 	mov	r2,r11
    c16c:	003f9906 	br	bfd4 <__alt_data_end+0xfffebfd4>
    c170:	00bff844 	movi	r2,-31
    c174:	1145c83a 	sub	r2,r2,r5
    c178:	8888d83a 	srl	r4,r17,r2
    c17c:	00800804 	movi	r2,32
    c180:	18801a26 	beq	r3,r2,c1ec <__muldf3+0x6f4>
    c184:	00801004 	movi	r2,64
    c188:	10c5c83a 	sub	r2,r2,r3
    c18c:	8884983a 	sll	r2,r17,r2
    c190:	1204b03a 	or	r2,r2,r8
    c194:	1004c03a 	cmpne	r2,r2,zero
    c198:	2084b03a 	or	r2,r4,r2
    c19c:	144001cc 	andi	r17,r2,7
    c1a0:	88000d1e 	bne	r17,zero,c1d8 <__muldf3+0x6e0>
    c1a4:	000b883a 	mov	r5,zero
    c1a8:	1028d0fa 	srli	r20,r2,3
    c1ac:	b02b883a 	mov	r21,r22
    c1b0:	0005883a 	mov	r2,zero
    c1b4:	a468b03a 	or	r20,r20,r17
    c1b8:	003eae06 	br	bc74 <__alt_data_end+0xfffebc74>
    c1bc:	1007883a 	mov	r3,r2
    c1c0:	0023883a 	mov	r17,zero
    c1c4:	880a927a 	slli	r5,r17,9
    c1c8:	1805883a 	mov	r2,r3
    c1cc:	8822977a 	slli	r17,r17,29
    c1d0:	280ad33a 	srli	r5,r5,12
    c1d4:	003ff406 	br	c1a8 <__alt_data_end+0xfffec1a8>
    c1d8:	10c003cc 	andi	r3,r2,15
    c1dc:	01000104 	movi	r4,4
    c1e0:	193ff626 	beq	r3,r4,c1bc <__alt_data_end+0xfffec1bc>
    c1e4:	0023883a 	mov	r17,zero
    c1e8:	003fd506 	br	c140 <__alt_data_end+0xfffec140>
    c1ec:	0005883a 	mov	r2,zero
    c1f0:	003fe706 	br	c190 <__alt_data_end+0xfffec190>
    c1f4:	00800434 	movhi	r2,16
    c1f8:	89400234 	orhi	r5,r17,8
    c1fc:	10bfffc4 	addi	r2,r2,-1
    c200:	b02b883a 	mov	r21,r22
    c204:	288a703a 	and	r5,r5,r2
    c208:	4029883a 	mov	r20,r8
    c20c:	003eff06 	br	be0c <__alt_data_end+0xfffebe0c>

0000c210 <__subdf3>:
    c210:	02000434 	movhi	r8,16
    c214:	423fffc4 	addi	r8,r8,-1
    c218:	defffb04 	addi	sp,sp,-20
    c21c:	2a14703a 	and	r10,r5,r8
    c220:	3812d53a 	srli	r9,r7,20
    c224:	3a10703a 	and	r8,r7,r8
    c228:	2006d77a 	srli	r3,r4,29
    c22c:	3004d77a 	srli	r2,r6,29
    c230:	dc000015 	stw	r16,0(sp)
    c234:	501490fa 	slli	r10,r10,3
    c238:	2820d53a 	srli	r16,r5,20
    c23c:	401090fa 	slli	r8,r8,3
    c240:	dc800215 	stw	r18,8(sp)
    c244:	dc400115 	stw	r17,4(sp)
    c248:	dfc00415 	stw	ra,16(sp)
    c24c:	202290fa 	slli	r17,r4,3
    c250:	dcc00315 	stw	r19,12(sp)
    c254:	4a41ffcc 	andi	r9,r9,2047
    c258:	0101ffc4 	movi	r4,2047
    c25c:	2824d7fa 	srli	r18,r5,31
    c260:	8401ffcc 	andi	r16,r16,2047
    c264:	50c6b03a 	or	r3,r10,r3
    c268:	380ed7fa 	srli	r7,r7,31
    c26c:	408ab03a 	or	r5,r8,r2
    c270:	300c90fa 	slli	r6,r6,3
    c274:	49009626 	beq	r9,r4,c4d0 <__subdf3+0x2c0>
    c278:	39c0005c 	xori	r7,r7,1
    c27c:	8245c83a 	sub	r2,r16,r9
    c280:	3c807426 	beq	r7,r18,c454 <__subdf3+0x244>
    c284:	0080af0e 	bge	zero,r2,c544 <__subdf3+0x334>
    c288:	48002a1e 	bne	r9,zero,c334 <__subdf3+0x124>
    c28c:	2988b03a 	or	r4,r5,r6
    c290:	20009a1e 	bne	r4,zero,c4fc <__subdf3+0x2ec>
    c294:	888001cc 	andi	r2,r17,7
    c298:	10000726 	beq	r2,zero,c2b8 <__subdf3+0xa8>
    c29c:	888003cc 	andi	r2,r17,15
    c2a0:	01000104 	movi	r4,4
    c2a4:	11000426 	beq	r2,r4,c2b8 <__subdf3+0xa8>
    c2a8:	890b883a 	add	r5,r17,r4
    c2ac:	2c63803a 	cmpltu	r17,r5,r17
    c2b0:	1c47883a 	add	r3,r3,r17
    c2b4:	2823883a 	mov	r17,r5
    c2b8:	1880202c 	andhi	r2,r3,128
    c2bc:	10005926 	beq	r2,zero,c424 <__subdf3+0x214>
    c2c0:	84000044 	addi	r16,r16,1
    c2c4:	0081ffc4 	movi	r2,2047
    c2c8:	8080be26 	beq	r16,r2,c5c4 <__subdf3+0x3b4>
    c2cc:	017fe034 	movhi	r5,65408
    c2d0:	297fffc4 	addi	r5,r5,-1
    c2d4:	1946703a 	and	r3,r3,r5
    c2d8:	1804977a 	slli	r2,r3,29
    c2dc:	1806927a 	slli	r3,r3,9
    c2e0:	8822d0fa 	srli	r17,r17,3
    c2e4:	8401ffcc 	andi	r16,r16,2047
    c2e8:	180ad33a 	srli	r5,r3,12
    c2ec:	9100004c 	andi	r4,r18,1
    c2f0:	1444b03a 	or	r2,r2,r17
    c2f4:	80c1ffcc 	andi	r3,r16,2047
    c2f8:	1820953a 	slli	r16,r3,20
    c2fc:	20c03fcc 	andi	r3,r4,255
    c300:	180897fa 	slli	r4,r3,31
    c304:	00c00434 	movhi	r3,16
    c308:	18ffffc4 	addi	r3,r3,-1
    c30c:	28c6703a 	and	r3,r5,r3
    c310:	1c06b03a 	or	r3,r3,r16
    c314:	1906b03a 	or	r3,r3,r4
    c318:	dfc00417 	ldw	ra,16(sp)
    c31c:	dcc00317 	ldw	r19,12(sp)
    c320:	dc800217 	ldw	r18,8(sp)
    c324:	dc400117 	ldw	r17,4(sp)
    c328:	dc000017 	ldw	r16,0(sp)
    c32c:	dec00504 	addi	sp,sp,20
    c330:	f800283a 	ret
    c334:	0101ffc4 	movi	r4,2047
    c338:	813fd626 	beq	r16,r4,c294 <__alt_data_end+0xfffec294>
    c33c:	29402034 	orhi	r5,r5,128
    c340:	01000e04 	movi	r4,56
    c344:	2080a316 	blt	r4,r2,c5d4 <__subdf3+0x3c4>
    c348:	010007c4 	movi	r4,31
    c34c:	2080c616 	blt	r4,r2,c668 <__subdf3+0x458>
    c350:	01000804 	movi	r4,32
    c354:	2089c83a 	sub	r4,r4,r2
    c358:	2910983a 	sll	r8,r5,r4
    c35c:	308ed83a 	srl	r7,r6,r2
    c360:	3108983a 	sll	r4,r6,r4
    c364:	2884d83a 	srl	r2,r5,r2
    c368:	41ccb03a 	or	r6,r8,r7
    c36c:	2008c03a 	cmpne	r4,r4,zero
    c370:	310cb03a 	or	r6,r6,r4
    c374:	898dc83a 	sub	r6,r17,r6
    c378:	89a3803a 	cmpltu	r17,r17,r6
    c37c:	1887c83a 	sub	r3,r3,r2
    c380:	1c47c83a 	sub	r3,r3,r17
    c384:	3023883a 	mov	r17,r6
    c388:	1880202c 	andhi	r2,r3,128
    c38c:	10002326 	beq	r2,zero,c41c <__subdf3+0x20c>
    c390:	04c02034 	movhi	r19,128
    c394:	9cffffc4 	addi	r19,r19,-1
    c398:	1ce6703a 	and	r19,r3,r19
    c39c:	98007a26 	beq	r19,zero,c588 <__subdf3+0x378>
    c3a0:	9809883a 	mov	r4,r19
    c3a4:	000cd100 	call	cd10 <__clzsi2>
    c3a8:	113ffe04 	addi	r4,r2,-8
    c3ac:	00c007c4 	movi	r3,31
    c3b0:	19007b16 	blt	r3,r4,c5a0 <__subdf3+0x390>
    c3b4:	00800804 	movi	r2,32
    c3b8:	1105c83a 	sub	r2,r2,r4
    c3bc:	8884d83a 	srl	r2,r17,r2
    c3c0:	9906983a 	sll	r3,r19,r4
    c3c4:	8922983a 	sll	r17,r17,r4
    c3c8:	10c4b03a 	or	r2,r2,r3
    c3cc:	24007816 	blt	r4,r16,c5b0 <__subdf3+0x3a0>
    c3d0:	2421c83a 	sub	r16,r4,r16
    c3d4:	80c00044 	addi	r3,r16,1
    c3d8:	010007c4 	movi	r4,31
    c3dc:	20c09516 	blt	r4,r3,c634 <__subdf3+0x424>
    c3e0:	01400804 	movi	r5,32
    c3e4:	28cbc83a 	sub	r5,r5,r3
    c3e8:	88c8d83a 	srl	r4,r17,r3
    c3ec:	8962983a 	sll	r17,r17,r5
    c3f0:	114a983a 	sll	r5,r2,r5
    c3f4:	10c6d83a 	srl	r3,r2,r3
    c3f8:	8804c03a 	cmpne	r2,r17,zero
    c3fc:	290ab03a 	or	r5,r5,r4
    c400:	28a2b03a 	or	r17,r5,r2
    c404:	0021883a 	mov	r16,zero
    c408:	003fa206 	br	c294 <__alt_data_end+0xfffec294>
    c40c:	2090b03a 	or	r8,r4,r2
    c410:	40018e26 	beq	r8,zero,ca4c <__subdf3+0x83c>
    c414:	1007883a 	mov	r3,r2
    c418:	2023883a 	mov	r17,r4
    c41c:	888001cc 	andi	r2,r17,7
    c420:	103f9e1e 	bne	r2,zero,c29c <__alt_data_end+0xfffec29c>
    c424:	1804977a 	slli	r2,r3,29
    c428:	8822d0fa 	srli	r17,r17,3
    c42c:	1810d0fa 	srli	r8,r3,3
    c430:	9100004c 	andi	r4,r18,1
    c434:	1444b03a 	or	r2,r2,r17
    c438:	00c1ffc4 	movi	r3,2047
    c43c:	80c02826 	beq	r16,r3,c4e0 <__subdf3+0x2d0>
    c440:	01400434 	movhi	r5,16
    c444:	297fffc4 	addi	r5,r5,-1
    c448:	80e0703a 	and	r16,r16,r3
    c44c:	414a703a 	and	r5,r8,r5
    c450:	003fa806 	br	c2f4 <__alt_data_end+0xfffec2f4>
    c454:	0080630e 	bge	zero,r2,c5e4 <__subdf3+0x3d4>
    c458:	48003026 	beq	r9,zero,c51c <__subdf3+0x30c>
    c45c:	0101ffc4 	movi	r4,2047
    c460:	813f8c26 	beq	r16,r4,c294 <__alt_data_end+0xfffec294>
    c464:	29402034 	orhi	r5,r5,128
    c468:	01000e04 	movi	r4,56
    c46c:	2080a90e 	bge	r4,r2,c714 <__subdf3+0x504>
    c470:	298cb03a 	or	r6,r5,r6
    c474:	3012c03a 	cmpne	r9,r6,zero
    c478:	0005883a 	mov	r2,zero
    c47c:	4c53883a 	add	r9,r9,r17
    c480:	4c63803a 	cmpltu	r17,r9,r17
    c484:	10c7883a 	add	r3,r2,r3
    c488:	88c7883a 	add	r3,r17,r3
    c48c:	4823883a 	mov	r17,r9
    c490:	1880202c 	andhi	r2,r3,128
    c494:	1000d026 	beq	r2,zero,c7d8 <__subdf3+0x5c8>
    c498:	84000044 	addi	r16,r16,1
    c49c:	0081ffc4 	movi	r2,2047
    c4a0:	8080fe26 	beq	r16,r2,c89c <__subdf3+0x68c>
    c4a4:	00bfe034 	movhi	r2,65408
    c4a8:	10bfffc4 	addi	r2,r2,-1
    c4ac:	1886703a 	and	r3,r3,r2
    c4b0:	880ad07a 	srli	r5,r17,1
    c4b4:	180497fa 	slli	r2,r3,31
    c4b8:	8900004c 	andi	r4,r17,1
    c4bc:	2922b03a 	or	r17,r5,r4
    c4c0:	1806d07a 	srli	r3,r3,1
    c4c4:	1462b03a 	or	r17,r2,r17
    c4c8:	3825883a 	mov	r18,r7
    c4cc:	003f7106 	br	c294 <__alt_data_end+0xfffec294>
    c4d0:	2984b03a 	or	r2,r5,r6
    c4d4:	103f6826 	beq	r2,zero,c278 <__alt_data_end+0xfffec278>
    c4d8:	39c03fcc 	andi	r7,r7,255
    c4dc:	003f6706 	br	c27c <__alt_data_end+0xfffec27c>
    c4e0:	4086b03a 	or	r3,r8,r2
    c4e4:	18015226 	beq	r3,zero,ca30 <__subdf3+0x820>
    c4e8:	00c00434 	movhi	r3,16
    c4ec:	41400234 	orhi	r5,r8,8
    c4f0:	18ffffc4 	addi	r3,r3,-1
    c4f4:	28ca703a 	and	r5,r5,r3
    c4f8:	003f7e06 	br	c2f4 <__alt_data_end+0xfffec2f4>
    c4fc:	10bfffc4 	addi	r2,r2,-1
    c500:	1000491e 	bne	r2,zero,c628 <__subdf3+0x418>
    c504:	898fc83a 	sub	r7,r17,r6
    c508:	89e3803a 	cmpltu	r17,r17,r7
    c50c:	1947c83a 	sub	r3,r3,r5
    c510:	1c47c83a 	sub	r3,r3,r17
    c514:	3823883a 	mov	r17,r7
    c518:	003f9b06 	br	c388 <__alt_data_end+0xfffec388>
    c51c:	2988b03a 	or	r4,r5,r6
    c520:	203f5c26 	beq	r4,zero,c294 <__alt_data_end+0xfffec294>
    c524:	10bfffc4 	addi	r2,r2,-1
    c528:	1000931e 	bne	r2,zero,c778 <__subdf3+0x568>
    c52c:	898d883a 	add	r6,r17,r6
    c530:	3463803a 	cmpltu	r17,r6,r17
    c534:	1947883a 	add	r3,r3,r5
    c538:	88c7883a 	add	r3,r17,r3
    c53c:	3023883a 	mov	r17,r6
    c540:	003fd306 	br	c490 <__alt_data_end+0xfffec490>
    c544:	1000541e 	bne	r2,zero,c698 <__subdf3+0x488>
    c548:	80800044 	addi	r2,r16,1
    c54c:	1081ffcc 	andi	r2,r2,2047
    c550:	01000044 	movi	r4,1
    c554:	2080a20e 	bge	r4,r2,c7e0 <__subdf3+0x5d0>
    c558:	8989c83a 	sub	r4,r17,r6
    c55c:	8905803a 	cmpltu	r2,r17,r4
    c560:	1967c83a 	sub	r19,r3,r5
    c564:	98a7c83a 	sub	r19,r19,r2
    c568:	9880202c 	andhi	r2,r19,128
    c56c:	10006326 	beq	r2,zero,c6fc <__subdf3+0x4ec>
    c570:	3463c83a 	sub	r17,r6,r17
    c574:	28c7c83a 	sub	r3,r5,r3
    c578:	344d803a 	cmpltu	r6,r6,r17
    c57c:	19a7c83a 	sub	r19,r3,r6
    c580:	3825883a 	mov	r18,r7
    c584:	983f861e 	bne	r19,zero,c3a0 <__alt_data_end+0xfffec3a0>
    c588:	8809883a 	mov	r4,r17
    c58c:	000cd100 	call	cd10 <__clzsi2>
    c590:	10800804 	addi	r2,r2,32
    c594:	113ffe04 	addi	r4,r2,-8
    c598:	00c007c4 	movi	r3,31
    c59c:	193f850e 	bge	r3,r4,c3b4 <__alt_data_end+0xfffec3b4>
    c5a0:	10bff604 	addi	r2,r2,-40
    c5a4:	8884983a 	sll	r2,r17,r2
    c5a8:	0023883a 	mov	r17,zero
    c5ac:	243f880e 	bge	r4,r16,c3d0 <__alt_data_end+0xfffec3d0>
    c5b0:	00ffe034 	movhi	r3,65408
    c5b4:	18ffffc4 	addi	r3,r3,-1
    c5b8:	8121c83a 	sub	r16,r16,r4
    c5bc:	10c6703a 	and	r3,r2,r3
    c5c0:	003f3406 	br	c294 <__alt_data_end+0xfffec294>
    c5c4:	9100004c 	andi	r4,r18,1
    c5c8:	000b883a 	mov	r5,zero
    c5cc:	0005883a 	mov	r2,zero
    c5d0:	003f4806 	br	c2f4 <__alt_data_end+0xfffec2f4>
    c5d4:	298cb03a 	or	r6,r5,r6
    c5d8:	300cc03a 	cmpne	r6,r6,zero
    c5dc:	0005883a 	mov	r2,zero
    c5e0:	003f6406 	br	c374 <__alt_data_end+0xfffec374>
    c5e4:	10009a1e 	bne	r2,zero,c850 <__subdf3+0x640>
    c5e8:	82400044 	addi	r9,r16,1
    c5ec:	4881ffcc 	andi	r2,r9,2047
    c5f0:	02800044 	movi	r10,1
    c5f4:	5080670e 	bge	r10,r2,c794 <__subdf3+0x584>
    c5f8:	0081ffc4 	movi	r2,2047
    c5fc:	4880af26 	beq	r9,r2,c8bc <__subdf3+0x6ac>
    c600:	898d883a 	add	r6,r17,r6
    c604:	1945883a 	add	r2,r3,r5
    c608:	3447803a 	cmpltu	r3,r6,r17
    c60c:	1887883a 	add	r3,r3,r2
    c610:	182297fa 	slli	r17,r3,31
    c614:	300cd07a 	srli	r6,r6,1
    c618:	1806d07a 	srli	r3,r3,1
    c61c:	4821883a 	mov	r16,r9
    c620:	89a2b03a 	or	r17,r17,r6
    c624:	003f1b06 	br	c294 <__alt_data_end+0xfffec294>
    c628:	0101ffc4 	movi	r4,2047
    c62c:	813f441e 	bne	r16,r4,c340 <__alt_data_end+0xfffec340>
    c630:	003f1806 	br	c294 <__alt_data_end+0xfffec294>
    c634:	843ff844 	addi	r16,r16,-31
    c638:	01400804 	movi	r5,32
    c63c:	1408d83a 	srl	r4,r2,r16
    c640:	19405026 	beq	r3,r5,c784 <__subdf3+0x574>
    c644:	01401004 	movi	r5,64
    c648:	28c7c83a 	sub	r3,r5,r3
    c64c:	10c4983a 	sll	r2,r2,r3
    c650:	88a2b03a 	or	r17,r17,r2
    c654:	8822c03a 	cmpne	r17,r17,zero
    c658:	2462b03a 	or	r17,r4,r17
    c65c:	0007883a 	mov	r3,zero
    c660:	0021883a 	mov	r16,zero
    c664:	003f6d06 	br	c41c <__alt_data_end+0xfffec41c>
    c668:	11fff804 	addi	r7,r2,-32
    c66c:	01000804 	movi	r4,32
    c670:	29ced83a 	srl	r7,r5,r7
    c674:	11004526 	beq	r2,r4,c78c <__subdf3+0x57c>
    c678:	01001004 	movi	r4,64
    c67c:	2089c83a 	sub	r4,r4,r2
    c680:	2904983a 	sll	r2,r5,r4
    c684:	118cb03a 	or	r6,r2,r6
    c688:	300cc03a 	cmpne	r6,r6,zero
    c68c:	398cb03a 	or	r6,r7,r6
    c690:	0005883a 	mov	r2,zero
    c694:	003f3706 	br	c374 <__alt_data_end+0xfffec374>
    c698:	80002a26 	beq	r16,zero,c744 <__subdf3+0x534>
    c69c:	0101ffc4 	movi	r4,2047
    c6a0:	49006626 	beq	r9,r4,c83c <__subdf3+0x62c>
    c6a4:	0085c83a 	sub	r2,zero,r2
    c6a8:	18c02034 	orhi	r3,r3,128
    c6ac:	01000e04 	movi	r4,56
    c6b0:	20807e16 	blt	r4,r2,c8ac <__subdf3+0x69c>
    c6b4:	010007c4 	movi	r4,31
    c6b8:	2080e716 	blt	r4,r2,ca58 <__subdf3+0x848>
    c6bc:	01000804 	movi	r4,32
    c6c0:	2089c83a 	sub	r4,r4,r2
    c6c4:	1914983a 	sll	r10,r3,r4
    c6c8:	8890d83a 	srl	r8,r17,r2
    c6cc:	8908983a 	sll	r4,r17,r4
    c6d0:	1884d83a 	srl	r2,r3,r2
    c6d4:	5222b03a 	or	r17,r10,r8
    c6d8:	2006c03a 	cmpne	r3,r4,zero
    c6dc:	88e2b03a 	or	r17,r17,r3
    c6e0:	3463c83a 	sub	r17,r6,r17
    c6e4:	2885c83a 	sub	r2,r5,r2
    c6e8:	344d803a 	cmpltu	r6,r6,r17
    c6ec:	1187c83a 	sub	r3,r2,r6
    c6f0:	4821883a 	mov	r16,r9
    c6f4:	3825883a 	mov	r18,r7
    c6f8:	003f2306 	br	c388 <__alt_data_end+0xfffec388>
    c6fc:	24d0b03a 	or	r8,r4,r19
    c700:	40001b1e 	bne	r8,zero,c770 <__subdf3+0x560>
    c704:	0005883a 	mov	r2,zero
    c708:	0009883a 	mov	r4,zero
    c70c:	0021883a 	mov	r16,zero
    c710:	003f4906 	br	c438 <__alt_data_end+0xfffec438>
    c714:	010007c4 	movi	r4,31
    c718:	20803a16 	blt	r4,r2,c804 <__subdf3+0x5f4>
    c71c:	01000804 	movi	r4,32
    c720:	2089c83a 	sub	r4,r4,r2
    c724:	2912983a 	sll	r9,r5,r4
    c728:	3090d83a 	srl	r8,r6,r2
    c72c:	3108983a 	sll	r4,r6,r4
    c730:	2884d83a 	srl	r2,r5,r2
    c734:	4a12b03a 	or	r9,r9,r8
    c738:	2008c03a 	cmpne	r4,r4,zero
    c73c:	4912b03a 	or	r9,r9,r4
    c740:	003f4e06 	br	c47c <__alt_data_end+0xfffec47c>
    c744:	1c48b03a 	or	r4,r3,r17
    c748:	20003c26 	beq	r4,zero,c83c <__subdf3+0x62c>
    c74c:	0084303a 	nor	r2,zero,r2
    c750:	1000381e 	bne	r2,zero,c834 <__subdf3+0x624>
    c754:	3463c83a 	sub	r17,r6,r17
    c758:	28c5c83a 	sub	r2,r5,r3
    c75c:	344d803a 	cmpltu	r6,r6,r17
    c760:	1187c83a 	sub	r3,r2,r6
    c764:	4821883a 	mov	r16,r9
    c768:	3825883a 	mov	r18,r7
    c76c:	003f0606 	br	c388 <__alt_data_end+0xfffec388>
    c770:	2023883a 	mov	r17,r4
    c774:	003f0906 	br	c39c <__alt_data_end+0xfffec39c>
    c778:	0101ffc4 	movi	r4,2047
    c77c:	813f3a1e 	bne	r16,r4,c468 <__alt_data_end+0xfffec468>
    c780:	003ec406 	br	c294 <__alt_data_end+0xfffec294>
    c784:	0005883a 	mov	r2,zero
    c788:	003fb106 	br	c650 <__alt_data_end+0xfffec650>
    c78c:	0005883a 	mov	r2,zero
    c790:	003fbc06 	br	c684 <__alt_data_end+0xfffec684>
    c794:	1c44b03a 	or	r2,r3,r17
    c798:	80008e1e 	bne	r16,zero,c9d4 <__subdf3+0x7c4>
    c79c:	1000c826 	beq	r2,zero,cac0 <__subdf3+0x8b0>
    c7a0:	2984b03a 	or	r2,r5,r6
    c7a4:	103ebb26 	beq	r2,zero,c294 <__alt_data_end+0xfffec294>
    c7a8:	8989883a 	add	r4,r17,r6
    c7ac:	1945883a 	add	r2,r3,r5
    c7b0:	2447803a 	cmpltu	r3,r4,r17
    c7b4:	1887883a 	add	r3,r3,r2
    c7b8:	1880202c 	andhi	r2,r3,128
    c7bc:	2023883a 	mov	r17,r4
    c7c0:	103f1626 	beq	r2,zero,c41c <__alt_data_end+0xfffec41c>
    c7c4:	00bfe034 	movhi	r2,65408
    c7c8:	10bfffc4 	addi	r2,r2,-1
    c7cc:	5021883a 	mov	r16,r10
    c7d0:	1886703a 	and	r3,r3,r2
    c7d4:	003eaf06 	br	c294 <__alt_data_end+0xfffec294>
    c7d8:	3825883a 	mov	r18,r7
    c7dc:	003f0f06 	br	c41c <__alt_data_end+0xfffec41c>
    c7e0:	1c44b03a 	or	r2,r3,r17
    c7e4:	8000251e 	bne	r16,zero,c87c <__subdf3+0x66c>
    c7e8:	1000661e 	bne	r2,zero,c984 <__subdf3+0x774>
    c7ec:	2990b03a 	or	r8,r5,r6
    c7f0:	40009626 	beq	r8,zero,ca4c <__subdf3+0x83c>
    c7f4:	2807883a 	mov	r3,r5
    c7f8:	3023883a 	mov	r17,r6
    c7fc:	3825883a 	mov	r18,r7
    c800:	003ea406 	br	c294 <__alt_data_end+0xfffec294>
    c804:	127ff804 	addi	r9,r2,-32
    c808:	01000804 	movi	r4,32
    c80c:	2a52d83a 	srl	r9,r5,r9
    c810:	11008c26 	beq	r2,r4,ca44 <__subdf3+0x834>
    c814:	01001004 	movi	r4,64
    c818:	2085c83a 	sub	r2,r4,r2
    c81c:	2884983a 	sll	r2,r5,r2
    c820:	118cb03a 	or	r6,r2,r6
    c824:	300cc03a 	cmpne	r6,r6,zero
    c828:	4992b03a 	or	r9,r9,r6
    c82c:	0005883a 	mov	r2,zero
    c830:	003f1206 	br	c47c <__alt_data_end+0xfffec47c>
    c834:	0101ffc4 	movi	r4,2047
    c838:	493f9c1e 	bne	r9,r4,c6ac <__alt_data_end+0xfffec6ac>
    c83c:	2807883a 	mov	r3,r5
    c840:	3023883a 	mov	r17,r6
    c844:	4821883a 	mov	r16,r9
    c848:	3825883a 	mov	r18,r7
    c84c:	003e9106 	br	c294 <__alt_data_end+0xfffec294>
    c850:	80001f1e 	bne	r16,zero,c8d0 <__subdf3+0x6c0>
    c854:	1c48b03a 	or	r4,r3,r17
    c858:	20005a26 	beq	r4,zero,c9c4 <__subdf3+0x7b4>
    c85c:	0084303a 	nor	r2,zero,r2
    c860:	1000561e 	bne	r2,zero,c9bc <__subdf3+0x7ac>
    c864:	89a3883a 	add	r17,r17,r6
    c868:	1945883a 	add	r2,r3,r5
    c86c:	898d803a 	cmpltu	r6,r17,r6
    c870:	3087883a 	add	r3,r6,r2
    c874:	4821883a 	mov	r16,r9
    c878:	003f0506 	br	c490 <__alt_data_end+0xfffec490>
    c87c:	10002b1e 	bne	r2,zero,c92c <__subdf3+0x71c>
    c880:	2984b03a 	or	r2,r5,r6
    c884:	10008026 	beq	r2,zero,ca88 <__subdf3+0x878>
    c888:	2807883a 	mov	r3,r5
    c88c:	3023883a 	mov	r17,r6
    c890:	3825883a 	mov	r18,r7
    c894:	0401ffc4 	movi	r16,2047
    c898:	003e7e06 	br	c294 <__alt_data_end+0xfffec294>
    c89c:	3809883a 	mov	r4,r7
    c8a0:	0011883a 	mov	r8,zero
    c8a4:	0005883a 	mov	r2,zero
    c8a8:	003ee306 	br	c438 <__alt_data_end+0xfffec438>
    c8ac:	1c62b03a 	or	r17,r3,r17
    c8b0:	8822c03a 	cmpne	r17,r17,zero
    c8b4:	0005883a 	mov	r2,zero
    c8b8:	003f8906 	br	c6e0 <__alt_data_end+0xfffec6e0>
    c8bc:	3809883a 	mov	r4,r7
    c8c0:	4821883a 	mov	r16,r9
    c8c4:	0011883a 	mov	r8,zero
    c8c8:	0005883a 	mov	r2,zero
    c8cc:	003eda06 	br	c438 <__alt_data_end+0xfffec438>
    c8d0:	0101ffc4 	movi	r4,2047
    c8d4:	49003b26 	beq	r9,r4,c9c4 <__subdf3+0x7b4>
    c8d8:	0085c83a 	sub	r2,zero,r2
    c8dc:	18c02034 	orhi	r3,r3,128
    c8e0:	01000e04 	movi	r4,56
    c8e4:	20806e16 	blt	r4,r2,caa0 <__subdf3+0x890>
    c8e8:	010007c4 	movi	r4,31
    c8ec:	20807716 	blt	r4,r2,cacc <__subdf3+0x8bc>
    c8f0:	01000804 	movi	r4,32
    c8f4:	2089c83a 	sub	r4,r4,r2
    c8f8:	1914983a 	sll	r10,r3,r4
    c8fc:	8890d83a 	srl	r8,r17,r2
    c900:	8908983a 	sll	r4,r17,r4
    c904:	1884d83a 	srl	r2,r3,r2
    c908:	5222b03a 	or	r17,r10,r8
    c90c:	2006c03a 	cmpne	r3,r4,zero
    c910:	88e2b03a 	or	r17,r17,r3
    c914:	89a3883a 	add	r17,r17,r6
    c918:	1145883a 	add	r2,r2,r5
    c91c:	898d803a 	cmpltu	r6,r17,r6
    c920:	3087883a 	add	r3,r6,r2
    c924:	4821883a 	mov	r16,r9
    c928:	003ed906 	br	c490 <__alt_data_end+0xfffec490>
    c92c:	2984b03a 	or	r2,r5,r6
    c930:	10004226 	beq	r2,zero,ca3c <__subdf3+0x82c>
    c934:	1808d0fa 	srli	r4,r3,3
    c938:	8822d0fa 	srli	r17,r17,3
    c93c:	1806977a 	slli	r3,r3,29
    c940:	2080022c 	andhi	r2,r4,8
    c944:	1c62b03a 	or	r17,r3,r17
    c948:	10000826 	beq	r2,zero,c96c <__subdf3+0x75c>
    c94c:	2812d0fa 	srli	r9,r5,3
    c950:	4880022c 	andhi	r2,r9,8
    c954:	1000051e 	bne	r2,zero,c96c <__subdf3+0x75c>
    c958:	300cd0fa 	srli	r6,r6,3
    c95c:	2804977a 	slli	r2,r5,29
    c960:	4809883a 	mov	r4,r9
    c964:	3825883a 	mov	r18,r7
    c968:	11a2b03a 	or	r17,r2,r6
    c96c:	8806d77a 	srli	r3,r17,29
    c970:	200890fa 	slli	r4,r4,3
    c974:	882290fa 	slli	r17,r17,3
    c978:	0401ffc4 	movi	r16,2047
    c97c:	1906b03a 	or	r3,r3,r4
    c980:	003e4406 	br	c294 <__alt_data_end+0xfffec294>
    c984:	2984b03a 	or	r2,r5,r6
    c988:	103e4226 	beq	r2,zero,c294 <__alt_data_end+0xfffec294>
    c98c:	8989c83a 	sub	r4,r17,r6
    c990:	8911803a 	cmpltu	r8,r17,r4
    c994:	1945c83a 	sub	r2,r3,r5
    c998:	1205c83a 	sub	r2,r2,r8
    c99c:	1200202c 	andhi	r8,r2,128
    c9a0:	403e9a26 	beq	r8,zero,c40c <__alt_data_end+0xfffec40c>
    c9a4:	3463c83a 	sub	r17,r6,r17
    c9a8:	28c5c83a 	sub	r2,r5,r3
    c9ac:	344d803a 	cmpltu	r6,r6,r17
    c9b0:	1187c83a 	sub	r3,r2,r6
    c9b4:	3825883a 	mov	r18,r7
    c9b8:	003e3606 	br	c294 <__alt_data_end+0xfffec294>
    c9bc:	0101ffc4 	movi	r4,2047
    c9c0:	493fc71e 	bne	r9,r4,c8e0 <__alt_data_end+0xfffec8e0>
    c9c4:	2807883a 	mov	r3,r5
    c9c8:	3023883a 	mov	r17,r6
    c9cc:	4821883a 	mov	r16,r9
    c9d0:	003e3006 	br	c294 <__alt_data_end+0xfffec294>
    c9d4:	10003626 	beq	r2,zero,cab0 <__subdf3+0x8a0>
    c9d8:	2984b03a 	or	r2,r5,r6
    c9dc:	10001726 	beq	r2,zero,ca3c <__subdf3+0x82c>
    c9e0:	1808d0fa 	srli	r4,r3,3
    c9e4:	8822d0fa 	srli	r17,r17,3
    c9e8:	1806977a 	slli	r3,r3,29
    c9ec:	2080022c 	andhi	r2,r4,8
    c9f0:	1c62b03a 	or	r17,r3,r17
    c9f4:	10000726 	beq	r2,zero,ca14 <__subdf3+0x804>
    c9f8:	2812d0fa 	srli	r9,r5,3
    c9fc:	4880022c 	andhi	r2,r9,8
    ca00:	1000041e 	bne	r2,zero,ca14 <__subdf3+0x804>
    ca04:	300cd0fa 	srli	r6,r6,3
    ca08:	2804977a 	slli	r2,r5,29
    ca0c:	4809883a 	mov	r4,r9
    ca10:	11a2b03a 	or	r17,r2,r6
    ca14:	8806d77a 	srli	r3,r17,29
    ca18:	200890fa 	slli	r4,r4,3
    ca1c:	882290fa 	slli	r17,r17,3
    ca20:	3825883a 	mov	r18,r7
    ca24:	1906b03a 	or	r3,r3,r4
    ca28:	0401ffc4 	movi	r16,2047
    ca2c:	003e1906 	br	c294 <__alt_data_end+0xfffec294>
    ca30:	000b883a 	mov	r5,zero
    ca34:	0005883a 	mov	r2,zero
    ca38:	003e2e06 	br	c2f4 <__alt_data_end+0xfffec2f4>
    ca3c:	0401ffc4 	movi	r16,2047
    ca40:	003e1406 	br	c294 <__alt_data_end+0xfffec294>
    ca44:	0005883a 	mov	r2,zero
    ca48:	003f7506 	br	c820 <__alt_data_end+0xfffec820>
    ca4c:	0005883a 	mov	r2,zero
    ca50:	0009883a 	mov	r4,zero
    ca54:	003e7806 	br	c438 <__alt_data_end+0xfffec438>
    ca58:	123ff804 	addi	r8,r2,-32
    ca5c:	01000804 	movi	r4,32
    ca60:	1a10d83a 	srl	r8,r3,r8
    ca64:	11002526 	beq	r2,r4,cafc <__subdf3+0x8ec>
    ca68:	01001004 	movi	r4,64
    ca6c:	2085c83a 	sub	r2,r4,r2
    ca70:	1884983a 	sll	r2,r3,r2
    ca74:	1444b03a 	or	r2,r2,r17
    ca78:	1004c03a 	cmpne	r2,r2,zero
    ca7c:	40a2b03a 	or	r17,r8,r2
    ca80:	0005883a 	mov	r2,zero
    ca84:	003f1606 	br	c6e0 <__alt_data_end+0xfffec6e0>
    ca88:	02000434 	movhi	r8,16
    ca8c:	0009883a 	mov	r4,zero
    ca90:	423fffc4 	addi	r8,r8,-1
    ca94:	00bfffc4 	movi	r2,-1
    ca98:	0401ffc4 	movi	r16,2047
    ca9c:	003e6606 	br	c438 <__alt_data_end+0xfffec438>
    caa0:	1c62b03a 	or	r17,r3,r17
    caa4:	8822c03a 	cmpne	r17,r17,zero
    caa8:	0005883a 	mov	r2,zero
    caac:	003f9906 	br	c914 <__alt_data_end+0xfffec914>
    cab0:	2807883a 	mov	r3,r5
    cab4:	3023883a 	mov	r17,r6
    cab8:	0401ffc4 	movi	r16,2047
    cabc:	003df506 	br	c294 <__alt_data_end+0xfffec294>
    cac0:	2807883a 	mov	r3,r5
    cac4:	3023883a 	mov	r17,r6
    cac8:	003df206 	br	c294 <__alt_data_end+0xfffec294>
    cacc:	123ff804 	addi	r8,r2,-32
    cad0:	01000804 	movi	r4,32
    cad4:	1a10d83a 	srl	r8,r3,r8
    cad8:	11000a26 	beq	r2,r4,cb04 <__subdf3+0x8f4>
    cadc:	01001004 	movi	r4,64
    cae0:	2085c83a 	sub	r2,r4,r2
    cae4:	1884983a 	sll	r2,r3,r2
    cae8:	1444b03a 	or	r2,r2,r17
    caec:	1004c03a 	cmpne	r2,r2,zero
    caf0:	40a2b03a 	or	r17,r8,r2
    caf4:	0005883a 	mov	r2,zero
    caf8:	003f8606 	br	c914 <__alt_data_end+0xfffec914>
    cafc:	0005883a 	mov	r2,zero
    cb00:	003fdc06 	br	ca74 <__alt_data_end+0xfffeca74>
    cb04:	0005883a 	mov	r2,zero
    cb08:	003ff706 	br	cae8 <__alt_data_end+0xfffecae8>

0000cb0c <__fixdfsi>:
    cb0c:	280cd53a 	srli	r6,r5,20
    cb10:	00c00434 	movhi	r3,16
    cb14:	18ffffc4 	addi	r3,r3,-1
    cb18:	3181ffcc 	andi	r6,r6,2047
    cb1c:	01c0ff84 	movi	r7,1022
    cb20:	28c6703a 	and	r3,r5,r3
    cb24:	280ad7fa 	srli	r5,r5,31
    cb28:	3980120e 	bge	r7,r6,cb74 <__fixdfsi+0x68>
    cb2c:	00810744 	movi	r2,1053
    cb30:	11800c16 	blt	r2,r6,cb64 <__fixdfsi+0x58>
    cb34:	00810cc4 	movi	r2,1075
    cb38:	1185c83a 	sub	r2,r2,r6
    cb3c:	01c007c4 	movi	r7,31
    cb40:	18c00434 	orhi	r3,r3,16
    cb44:	38800d16 	blt	r7,r2,cb7c <__fixdfsi+0x70>
    cb48:	31befb44 	addi	r6,r6,-1043
    cb4c:	2084d83a 	srl	r2,r4,r2
    cb50:	1986983a 	sll	r3,r3,r6
    cb54:	1884b03a 	or	r2,r3,r2
    cb58:	28000726 	beq	r5,zero,cb78 <__fixdfsi+0x6c>
    cb5c:	0085c83a 	sub	r2,zero,r2
    cb60:	f800283a 	ret
    cb64:	00a00034 	movhi	r2,32768
    cb68:	10bfffc4 	addi	r2,r2,-1
    cb6c:	2885883a 	add	r2,r5,r2
    cb70:	f800283a 	ret
    cb74:	0005883a 	mov	r2,zero
    cb78:	f800283a 	ret
    cb7c:	008104c4 	movi	r2,1043
    cb80:	1185c83a 	sub	r2,r2,r6
    cb84:	1884d83a 	srl	r2,r3,r2
    cb88:	003ff306 	br	cb58 <__alt_data_end+0xfffecb58>

0000cb8c <__floatsidf>:
    cb8c:	defffd04 	addi	sp,sp,-12
    cb90:	dfc00215 	stw	ra,8(sp)
    cb94:	dc400115 	stw	r17,4(sp)
    cb98:	dc000015 	stw	r16,0(sp)
    cb9c:	20002b26 	beq	r4,zero,cc4c <__floatsidf+0xc0>
    cba0:	2023883a 	mov	r17,r4
    cba4:	2020d7fa 	srli	r16,r4,31
    cba8:	20002d16 	blt	r4,zero,cc60 <__floatsidf+0xd4>
    cbac:	8809883a 	mov	r4,r17
    cbb0:	000cd100 	call	cd10 <__clzsi2>
    cbb4:	01410784 	movi	r5,1054
    cbb8:	288bc83a 	sub	r5,r5,r2
    cbbc:	01010cc4 	movi	r4,1075
    cbc0:	2149c83a 	sub	r4,r4,r5
    cbc4:	00c007c4 	movi	r3,31
    cbc8:	1900160e 	bge	r3,r4,cc24 <__floatsidf+0x98>
    cbcc:	00c104c4 	movi	r3,1043
    cbd0:	1947c83a 	sub	r3,r3,r5
    cbd4:	88c6983a 	sll	r3,r17,r3
    cbd8:	00800434 	movhi	r2,16
    cbdc:	10bfffc4 	addi	r2,r2,-1
    cbe0:	1886703a 	and	r3,r3,r2
    cbe4:	2941ffcc 	andi	r5,r5,2047
    cbe8:	800d883a 	mov	r6,r16
    cbec:	0005883a 	mov	r2,zero
    cbf0:	280a953a 	slli	r5,r5,20
    cbf4:	31803fcc 	andi	r6,r6,255
    cbf8:	01000434 	movhi	r4,16
    cbfc:	300c97fa 	slli	r6,r6,31
    cc00:	213fffc4 	addi	r4,r4,-1
    cc04:	1906703a 	and	r3,r3,r4
    cc08:	1946b03a 	or	r3,r3,r5
    cc0c:	1986b03a 	or	r3,r3,r6
    cc10:	dfc00217 	ldw	ra,8(sp)
    cc14:	dc400117 	ldw	r17,4(sp)
    cc18:	dc000017 	ldw	r16,0(sp)
    cc1c:	dec00304 	addi	sp,sp,12
    cc20:	f800283a 	ret
    cc24:	00c002c4 	movi	r3,11
    cc28:	1887c83a 	sub	r3,r3,r2
    cc2c:	88c6d83a 	srl	r3,r17,r3
    cc30:	8904983a 	sll	r2,r17,r4
    cc34:	01000434 	movhi	r4,16
    cc38:	213fffc4 	addi	r4,r4,-1
    cc3c:	2941ffcc 	andi	r5,r5,2047
    cc40:	1906703a 	and	r3,r3,r4
    cc44:	800d883a 	mov	r6,r16
    cc48:	003fe906 	br	cbf0 <__alt_data_end+0xfffecbf0>
    cc4c:	000d883a 	mov	r6,zero
    cc50:	000b883a 	mov	r5,zero
    cc54:	0007883a 	mov	r3,zero
    cc58:	0005883a 	mov	r2,zero
    cc5c:	003fe406 	br	cbf0 <__alt_data_end+0xfffecbf0>
    cc60:	0123c83a 	sub	r17,zero,r4
    cc64:	003fd106 	br	cbac <__alt_data_end+0xfffecbac>

0000cc68 <__floatunsidf>:
    cc68:	defffe04 	addi	sp,sp,-8
    cc6c:	dc000015 	stw	r16,0(sp)
    cc70:	dfc00115 	stw	ra,4(sp)
    cc74:	2021883a 	mov	r16,r4
    cc78:	20002226 	beq	r4,zero,cd04 <__floatunsidf+0x9c>
    cc7c:	000cd100 	call	cd10 <__clzsi2>
    cc80:	01010784 	movi	r4,1054
    cc84:	2089c83a 	sub	r4,r4,r2
    cc88:	01810cc4 	movi	r6,1075
    cc8c:	310dc83a 	sub	r6,r6,r4
    cc90:	00c007c4 	movi	r3,31
    cc94:	1980120e 	bge	r3,r6,cce0 <__floatunsidf+0x78>
    cc98:	00c104c4 	movi	r3,1043
    cc9c:	1907c83a 	sub	r3,r3,r4
    cca0:	80ca983a 	sll	r5,r16,r3
    cca4:	00800434 	movhi	r2,16
    cca8:	10bfffc4 	addi	r2,r2,-1
    ccac:	2101ffcc 	andi	r4,r4,2047
    ccb0:	0021883a 	mov	r16,zero
    ccb4:	288a703a 	and	r5,r5,r2
    ccb8:	2008953a 	slli	r4,r4,20
    ccbc:	00c00434 	movhi	r3,16
    ccc0:	18ffffc4 	addi	r3,r3,-1
    ccc4:	28c6703a 	and	r3,r5,r3
    ccc8:	8005883a 	mov	r2,r16
    cccc:	1906b03a 	or	r3,r3,r4
    ccd0:	dfc00117 	ldw	ra,4(sp)
    ccd4:	dc000017 	ldw	r16,0(sp)
    ccd8:	dec00204 	addi	sp,sp,8
    ccdc:	f800283a 	ret
    cce0:	00c002c4 	movi	r3,11
    cce4:	188bc83a 	sub	r5,r3,r2
    cce8:	814ad83a 	srl	r5,r16,r5
    ccec:	00c00434 	movhi	r3,16
    ccf0:	18ffffc4 	addi	r3,r3,-1
    ccf4:	81a0983a 	sll	r16,r16,r6
    ccf8:	2101ffcc 	andi	r4,r4,2047
    ccfc:	28ca703a 	and	r5,r5,r3
    cd00:	003fed06 	br	ccb8 <__alt_data_end+0xfffeccb8>
    cd04:	0009883a 	mov	r4,zero
    cd08:	000b883a 	mov	r5,zero
    cd0c:	003fea06 	br	ccb8 <__alt_data_end+0xfffeccb8>

0000cd10 <__clzsi2>:
    cd10:	00bfffd4 	movui	r2,65535
    cd14:	11000536 	bltu	r2,r4,cd2c <__clzsi2+0x1c>
    cd18:	00803fc4 	movi	r2,255
    cd1c:	11000f36 	bltu	r2,r4,cd5c <__clzsi2+0x4c>
    cd20:	00800804 	movi	r2,32
    cd24:	0007883a 	mov	r3,zero
    cd28:	00000506 	br	cd40 <__clzsi2+0x30>
    cd2c:	00804034 	movhi	r2,256
    cd30:	10bfffc4 	addi	r2,r2,-1
    cd34:	11000c2e 	bgeu	r2,r4,cd68 <__clzsi2+0x58>
    cd38:	00800204 	movi	r2,8
    cd3c:	00c00604 	movi	r3,24
    cd40:	20c8d83a 	srl	r4,r4,r3
    cd44:	00c00074 	movhi	r3,1
    cd48:	18fdaa04 	addi	r3,r3,-2392
    cd4c:	1909883a 	add	r4,r3,r4
    cd50:	20c00003 	ldbu	r3,0(r4)
    cd54:	10c5c83a 	sub	r2,r2,r3
    cd58:	f800283a 	ret
    cd5c:	00800604 	movi	r2,24
    cd60:	00c00204 	movi	r3,8
    cd64:	003ff606 	br	cd40 <__alt_data_end+0xfffecd40>
    cd68:	00800404 	movi	r2,16
    cd6c:	1007883a 	mov	r3,r2
    cd70:	003ff306 	br	cd40 <__alt_data_end+0xfffecd40>

0000cd74 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cd74:	defffe04 	addi	sp,sp,-8
    cd78:	dfc00115 	stw	ra,4(sp)
    cd7c:	df000015 	stw	fp,0(sp)
    cd80:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cd84:	d0a00b17 	ldw	r2,-32724(gp)
    cd88:	10000326 	beq	r2,zero,cd98 <alt_get_errno+0x24>
    cd8c:	d0a00b17 	ldw	r2,-32724(gp)
    cd90:	103ee83a 	callr	r2
    cd94:	00000106 	br	cd9c <alt_get_errno+0x28>
    cd98:	d0a6d104 	addi	r2,gp,-25788
}
    cd9c:	e037883a 	mov	sp,fp
    cda0:	dfc00117 	ldw	ra,4(sp)
    cda4:	df000017 	ldw	fp,0(sp)
    cda8:	dec00204 	addi	sp,sp,8
    cdac:	f800283a 	ret

0000cdb0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    cdb0:	defffb04 	addi	sp,sp,-20
    cdb4:	dfc00415 	stw	ra,16(sp)
    cdb8:	df000315 	stw	fp,12(sp)
    cdbc:	df000304 	addi	fp,sp,12
    cdc0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    cdc4:	e0bfff17 	ldw	r2,-4(fp)
    cdc8:	10000616 	blt	r2,zero,cde4 <close+0x34>
    cdcc:	e0bfff17 	ldw	r2,-4(fp)
    cdd0:	10c00324 	muli	r3,r2,12
    cdd4:	00800074 	movhi	r2,1
    cdd8:	10802a04 	addi	r2,r2,168
    cddc:	1885883a 	add	r2,r3,r2
    cde0:	00000106 	br	cde8 <close+0x38>
    cde4:	0005883a 	mov	r2,zero
    cde8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    cdec:	e0bffd17 	ldw	r2,-12(fp)
    cdf0:	10001926 	beq	r2,zero,ce58 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    cdf4:	e0bffd17 	ldw	r2,-12(fp)
    cdf8:	10800017 	ldw	r2,0(r2)
    cdfc:	10800417 	ldw	r2,16(r2)
    ce00:	10000626 	beq	r2,zero,ce1c <close+0x6c>
    ce04:	e0bffd17 	ldw	r2,-12(fp)
    ce08:	10800017 	ldw	r2,0(r2)
    ce0c:	10800417 	ldw	r2,16(r2)
    ce10:	e13ffd17 	ldw	r4,-12(fp)
    ce14:	103ee83a 	callr	r2
    ce18:	00000106 	br	ce20 <close+0x70>
    ce1c:	0005883a 	mov	r2,zero
    ce20:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    ce24:	e13fff17 	ldw	r4,-4(fp)
    ce28:	000d4700 	call	d470 <alt_release_fd>
    if (rval < 0)
    ce2c:	e0bffe17 	ldw	r2,-8(fp)
    ce30:	1000070e 	bge	r2,zero,ce50 <close+0xa0>
    {
      ALT_ERRNO = -rval;
    ce34:	000cd740 	call	cd74 <alt_get_errno>
    ce38:	1007883a 	mov	r3,r2
    ce3c:	e0bffe17 	ldw	r2,-8(fp)
    ce40:	0085c83a 	sub	r2,zero,r2
    ce44:	18800015 	stw	r2,0(r3)
      return -1;
    ce48:	00bfffc4 	movi	r2,-1
    ce4c:	00000706 	br	ce6c <close+0xbc>
    }
    return 0;
    ce50:	0005883a 	mov	r2,zero
    ce54:	00000506 	br	ce6c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    ce58:	000cd740 	call	cd74 <alt_get_errno>
    ce5c:	1007883a 	mov	r3,r2
    ce60:	00801444 	movi	r2,81
    ce64:	18800015 	stw	r2,0(r3)
    return -1;
    ce68:	00bfffc4 	movi	r2,-1
  }
}
    ce6c:	e037883a 	mov	sp,fp
    ce70:	dfc00117 	ldw	ra,4(sp)
    ce74:	df000017 	ldw	fp,0(sp)
    ce78:	dec00204 	addi	sp,sp,8
    ce7c:	f800283a 	ret

0000ce80 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    ce80:	defffc04 	addi	sp,sp,-16
    ce84:	df000315 	stw	fp,12(sp)
    ce88:	df000304 	addi	fp,sp,12
    ce8c:	e13ffd15 	stw	r4,-12(fp)
    ce90:	e17ffe15 	stw	r5,-8(fp)
    ce94:	e1bfff15 	stw	r6,-4(fp)
  return len;
    ce98:	e0bfff17 	ldw	r2,-4(fp)
}
    ce9c:	e037883a 	mov	sp,fp
    cea0:	df000017 	ldw	fp,0(sp)
    cea4:	dec00104 	addi	sp,sp,4
    cea8:	f800283a 	ret

0000ceac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ceac:	defffe04 	addi	sp,sp,-8
    ceb0:	dfc00115 	stw	ra,4(sp)
    ceb4:	df000015 	stw	fp,0(sp)
    ceb8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cebc:	d0a00b17 	ldw	r2,-32724(gp)
    cec0:	10000326 	beq	r2,zero,ced0 <alt_get_errno+0x24>
    cec4:	d0a00b17 	ldw	r2,-32724(gp)
    cec8:	103ee83a 	callr	r2
    cecc:	00000106 	br	ced4 <alt_get_errno+0x28>
    ced0:	d0a6d104 	addi	r2,gp,-25788
}
    ced4:	e037883a 	mov	sp,fp
    ced8:	dfc00117 	ldw	ra,4(sp)
    cedc:	df000017 	ldw	fp,0(sp)
    cee0:	dec00204 	addi	sp,sp,8
    cee4:	f800283a 	ret

0000cee8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    cee8:	defffb04 	addi	sp,sp,-20
    ceec:	dfc00415 	stw	ra,16(sp)
    cef0:	df000315 	stw	fp,12(sp)
    cef4:	df000304 	addi	fp,sp,12
    cef8:	e13ffe15 	stw	r4,-8(fp)
    cefc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    cf00:	e0bffe17 	ldw	r2,-8(fp)
    cf04:	10000616 	blt	r2,zero,cf20 <fstat+0x38>
    cf08:	e0bffe17 	ldw	r2,-8(fp)
    cf0c:	10c00324 	muli	r3,r2,12
    cf10:	00800074 	movhi	r2,1
    cf14:	10802a04 	addi	r2,r2,168
    cf18:	1885883a 	add	r2,r3,r2
    cf1c:	00000106 	br	cf24 <fstat+0x3c>
    cf20:	0005883a 	mov	r2,zero
    cf24:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    cf28:	e0bffd17 	ldw	r2,-12(fp)
    cf2c:	10001026 	beq	r2,zero,cf70 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    cf30:	e0bffd17 	ldw	r2,-12(fp)
    cf34:	10800017 	ldw	r2,0(r2)
    cf38:	10800817 	ldw	r2,32(r2)
    cf3c:	10000726 	beq	r2,zero,cf5c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
    cf40:	e0bffd17 	ldw	r2,-12(fp)
    cf44:	10800017 	ldw	r2,0(r2)
    cf48:	10800817 	ldw	r2,32(r2)
    cf4c:	e17fff17 	ldw	r5,-4(fp)
    cf50:	e13ffd17 	ldw	r4,-12(fp)
    cf54:	103ee83a 	callr	r2
    cf58:	00000a06 	br	cf84 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    cf5c:	e0bfff17 	ldw	r2,-4(fp)
    cf60:	00c80004 	movi	r3,8192
    cf64:	10c00115 	stw	r3,4(r2)
      return 0;
    cf68:	0005883a 	mov	r2,zero
    cf6c:	00000506 	br	cf84 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    cf70:	000ceac0 	call	ceac <alt_get_errno>
    cf74:	1007883a 	mov	r3,r2
    cf78:	00801444 	movi	r2,81
    cf7c:	18800015 	stw	r2,0(r3)
    return -1;
    cf80:	00bfffc4 	movi	r2,-1
  }
}
    cf84:	e037883a 	mov	sp,fp
    cf88:	dfc00117 	ldw	ra,4(sp)
    cf8c:	df000017 	ldw	fp,0(sp)
    cf90:	dec00204 	addi	sp,sp,8
    cf94:	f800283a 	ret

0000cf98 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cf98:	defffe04 	addi	sp,sp,-8
    cf9c:	dfc00115 	stw	ra,4(sp)
    cfa0:	df000015 	stw	fp,0(sp)
    cfa4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cfa8:	d0a00b17 	ldw	r2,-32724(gp)
    cfac:	10000326 	beq	r2,zero,cfbc <alt_get_errno+0x24>
    cfb0:	d0a00b17 	ldw	r2,-32724(gp)
    cfb4:	103ee83a 	callr	r2
    cfb8:	00000106 	br	cfc0 <alt_get_errno+0x28>
    cfbc:	d0a6d104 	addi	r2,gp,-25788
}
    cfc0:	e037883a 	mov	sp,fp
    cfc4:	dfc00117 	ldw	ra,4(sp)
    cfc8:	df000017 	ldw	fp,0(sp)
    cfcc:	dec00204 	addi	sp,sp,8
    cfd0:	f800283a 	ret

0000cfd4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    cfd4:	deffed04 	addi	sp,sp,-76
    cfd8:	dfc01215 	stw	ra,72(sp)
    cfdc:	df001115 	stw	fp,68(sp)
    cfe0:	df001104 	addi	fp,sp,68
    cfe4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    cfe8:	e0bfff17 	ldw	r2,-4(fp)
    cfec:	10000616 	blt	r2,zero,d008 <isatty+0x34>
    cff0:	e0bfff17 	ldw	r2,-4(fp)
    cff4:	10c00324 	muli	r3,r2,12
    cff8:	00800074 	movhi	r2,1
    cffc:	10802a04 	addi	r2,r2,168
    d000:	1885883a 	add	r2,r3,r2
    d004:	00000106 	br	d00c <isatty+0x38>
    d008:	0005883a 	mov	r2,zero
    d00c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d010:	e0bfef17 	ldw	r2,-68(fp)
    d014:	10000e26 	beq	r2,zero,d050 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d018:	e0bfef17 	ldw	r2,-68(fp)
    d01c:	10800017 	ldw	r2,0(r2)
    d020:	10800817 	ldw	r2,32(r2)
    d024:	1000021e 	bne	r2,zero,d030 <isatty+0x5c>
    {
      return 1;
    d028:	00800044 	movi	r2,1
    d02c:	00000d06 	br	d064 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d030:	e0bff004 	addi	r2,fp,-64
    d034:	100b883a 	mov	r5,r2
    d038:	e13fff17 	ldw	r4,-4(fp)
    d03c:	000cee80 	call	cee8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d040:	e0bff117 	ldw	r2,-60(fp)
    d044:	10880020 	cmpeqi	r2,r2,8192
    d048:	10803fcc 	andi	r2,r2,255
    d04c:	00000506 	br	d064 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d050:	000cf980 	call	cf98 <alt_get_errno>
    d054:	1007883a 	mov	r3,r2
    d058:	00801444 	movi	r2,81
    d05c:	18800015 	stw	r2,0(r3)
    return 0;
    d060:	0005883a 	mov	r2,zero
  }
}
    d064:	e037883a 	mov	sp,fp
    d068:	dfc00117 	ldw	ra,4(sp)
    d06c:	df000017 	ldw	fp,0(sp)
    d070:	dec00204 	addi	sp,sp,8
    d074:	f800283a 	ret

0000d078 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d078:	defffc04 	addi	sp,sp,-16
    d07c:	df000315 	stw	fp,12(sp)
    d080:	df000304 	addi	fp,sp,12
    d084:	e13ffd15 	stw	r4,-12(fp)
    d088:	e17ffe15 	stw	r5,-8(fp)
    d08c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d090:	e0fffe17 	ldw	r3,-8(fp)
    d094:	e0bffd17 	ldw	r2,-12(fp)
    d098:	18800c26 	beq	r3,r2,d0cc <alt_load_section+0x54>
  {
    while( to != end )
    d09c:	00000806 	br	d0c0 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d0a0:	e0bffe17 	ldw	r2,-8(fp)
    d0a4:	10c00104 	addi	r3,r2,4
    d0a8:	e0fffe15 	stw	r3,-8(fp)
    d0ac:	e0fffd17 	ldw	r3,-12(fp)
    d0b0:	19000104 	addi	r4,r3,4
    d0b4:	e13ffd15 	stw	r4,-12(fp)
    d0b8:	18c00017 	ldw	r3,0(r3)
    d0bc:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d0c0:	e0fffe17 	ldw	r3,-8(fp)
    d0c4:	e0bfff17 	ldw	r2,-4(fp)
    d0c8:	18bff51e 	bne	r3,r2,d0a0 <__alt_data_end+0xfffed0a0>
    {
      *to++ = *from++;
    }
  }
}
    d0cc:	0001883a 	nop
    d0d0:	e037883a 	mov	sp,fp
    d0d4:	df000017 	ldw	fp,0(sp)
    d0d8:	dec00104 	addi	sp,sp,4
    d0dc:	f800283a 	ret

0000d0e0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d0e0:	defffe04 	addi	sp,sp,-8
    d0e4:	dfc00115 	stw	ra,4(sp)
    d0e8:	df000015 	stw	fp,0(sp)
    d0ec:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d0f0:	01800074 	movhi	r6,1
    d0f4:	3184b204 	addi	r6,r6,4808
    d0f8:	01400074 	movhi	r5,1
    d0fc:	297df704 	addi	r5,r5,-2084
    d100:	01000074 	movhi	r4,1
    d104:	2104b204 	addi	r4,r4,4808
    d108:	000d0780 	call	d078 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d10c:	01800034 	movhi	r6,0
    d110:	31809104 	addi	r6,r6,580
    d114:	01400034 	movhi	r5,0
    d118:	29400804 	addi	r5,r5,32
    d11c:	01000034 	movhi	r4,0
    d120:	21000804 	addi	r4,r4,32
    d124:	000d0780 	call	d078 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d128:	01800074 	movhi	r6,1
    d12c:	31bdf704 	addi	r6,r6,-2084
    d130:	01400074 	movhi	r5,1
    d134:	297d0504 	addi	r5,r5,-3052
    d138:	01000074 	movhi	r4,1
    d13c:	213d0504 	addi	r4,r4,-3052
    d140:	000d0780 	call	d078 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d144:	000e3000 	call	e300 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d148:	000e4e80 	call	e4e8 <alt_icache_flush_all>
}
    d14c:	0001883a 	nop
    d150:	e037883a 	mov	sp,fp
    d154:	dfc00117 	ldw	ra,4(sp)
    d158:	df000017 	ldw	fp,0(sp)
    d15c:	dec00204 	addi	sp,sp,8
    d160:	f800283a 	ret

0000d164 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d164:	defffe04 	addi	sp,sp,-8
    d168:	dfc00115 	stw	ra,4(sp)
    d16c:	df000015 	stw	fp,0(sp)
    d170:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d174:	d0a00b17 	ldw	r2,-32724(gp)
    d178:	10000326 	beq	r2,zero,d188 <alt_get_errno+0x24>
    d17c:	d0a00b17 	ldw	r2,-32724(gp)
    d180:	103ee83a 	callr	r2
    d184:	00000106 	br	d18c <alt_get_errno+0x28>
    d188:	d0a6d104 	addi	r2,gp,-25788
}
    d18c:	e037883a 	mov	sp,fp
    d190:	dfc00117 	ldw	ra,4(sp)
    d194:	df000017 	ldw	fp,0(sp)
    d198:	dec00204 	addi	sp,sp,8
    d19c:	f800283a 	ret

0000d1a0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d1a0:	defff904 	addi	sp,sp,-28
    d1a4:	dfc00615 	stw	ra,24(sp)
    d1a8:	df000515 	stw	fp,20(sp)
    d1ac:	df000504 	addi	fp,sp,20
    d1b0:	e13ffd15 	stw	r4,-12(fp)
    d1b4:	e17ffe15 	stw	r5,-8(fp)
    d1b8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d1bc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d1c0:	e0bffd17 	ldw	r2,-12(fp)
    d1c4:	10000616 	blt	r2,zero,d1e0 <lseek+0x40>
    d1c8:	e0bffd17 	ldw	r2,-12(fp)
    d1cc:	10c00324 	muli	r3,r2,12
    d1d0:	00800074 	movhi	r2,1
    d1d4:	10802a04 	addi	r2,r2,168
    d1d8:	1885883a 	add	r2,r3,r2
    d1dc:	00000106 	br	d1e4 <lseek+0x44>
    d1e0:	0005883a 	mov	r2,zero
    d1e4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d1e8:	e0bffc17 	ldw	r2,-16(fp)
    d1ec:	10001026 	beq	r2,zero,d230 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d1f0:	e0bffc17 	ldw	r2,-16(fp)
    d1f4:	10800017 	ldw	r2,0(r2)
    d1f8:	10800717 	ldw	r2,28(r2)
    d1fc:	10000926 	beq	r2,zero,d224 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d200:	e0bffc17 	ldw	r2,-16(fp)
    d204:	10800017 	ldw	r2,0(r2)
    d208:	10800717 	ldw	r2,28(r2)
    d20c:	e1bfff17 	ldw	r6,-4(fp)
    d210:	e17ffe17 	ldw	r5,-8(fp)
    d214:	e13ffc17 	ldw	r4,-16(fp)
    d218:	103ee83a 	callr	r2
    d21c:	e0bffb15 	stw	r2,-20(fp)
    d220:	00000506 	br	d238 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d224:	00bfde84 	movi	r2,-134
    d228:	e0bffb15 	stw	r2,-20(fp)
    d22c:	00000206 	br	d238 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
    d230:	00bfebc4 	movi	r2,-81
    d234:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d238:	e0bffb17 	ldw	r2,-20(fp)
    d23c:	1000070e 	bge	r2,zero,d25c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
    d240:	000d1640 	call	d164 <alt_get_errno>
    d244:	1007883a 	mov	r3,r2
    d248:	e0bffb17 	ldw	r2,-20(fp)
    d24c:	0085c83a 	sub	r2,zero,r2
    d250:	18800015 	stw	r2,0(r3)
    rc = -1;
    d254:	00bfffc4 	movi	r2,-1
    d258:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d25c:	e0bffb17 	ldw	r2,-20(fp)
}
    d260:	e037883a 	mov	sp,fp
    d264:	dfc00117 	ldw	ra,4(sp)
    d268:	df000017 	ldw	fp,0(sp)
    d26c:	dec00204 	addi	sp,sp,8
    d270:	f800283a 	ret

0000d274 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d274:	defffd04 	addi	sp,sp,-12
    d278:	dfc00215 	stw	ra,8(sp)
    d27c:	df000115 	stw	fp,4(sp)
    d280:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d284:	0009883a 	mov	r4,zero
    d288:	000d6ec0 	call	d6ec <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d28c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d290:	000d7240 	call	d724 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d294:	01800074 	movhi	r6,1
    d298:	31bded04 	addi	r6,r6,-2124
    d29c:	01400074 	movhi	r5,1
    d2a0:	297ded04 	addi	r5,r5,-2124
    d2a4:	01000074 	movhi	r4,1
    d2a8:	213ded04 	addi	r4,r4,-2124
    d2ac:	000e8800 	call	e880 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d2b0:	000e4280 	call	e428 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d2b4:	01000074 	movhi	r4,1
    d2b8:	21392204 	addi	r4,r4,-7032
    d2bc:	000f0800 	call	f080 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d2c0:	d0a6d217 	ldw	r2,-25784(gp)
    d2c4:	d0e6d317 	ldw	r3,-25780(gp)
    d2c8:	d126d417 	ldw	r4,-25776(gp)
    d2cc:	200d883a 	mov	r6,r4
    d2d0:	180b883a 	mov	r5,r3
    d2d4:	1009883a 	mov	r4,r2
    d2d8:	00002900 	call	290 <main>
    d2dc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d2e0:	01000044 	movi	r4,1
    d2e4:	000cdb00 	call	cdb0 <close>
  exit (result);
    d2e8:	e13fff17 	ldw	r4,-4(fp)
    d2ec:	000f0940 	call	f094 <exit>

0000d2f0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d2f0:	defffe04 	addi	sp,sp,-8
    d2f4:	df000115 	stw	fp,4(sp)
    d2f8:	df000104 	addi	fp,sp,4
    d2fc:	e13fff15 	stw	r4,-4(fp)
}
    d300:	0001883a 	nop
    d304:	e037883a 	mov	sp,fp
    d308:	df000017 	ldw	fp,0(sp)
    d30c:	dec00104 	addi	sp,sp,4
    d310:	f800283a 	ret

0000d314 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d314:	defffe04 	addi	sp,sp,-8
    d318:	df000115 	stw	fp,4(sp)
    d31c:	df000104 	addi	fp,sp,4
    d320:	e13fff15 	stw	r4,-4(fp)
}
    d324:	0001883a 	nop
    d328:	e037883a 	mov	sp,fp
    d32c:	df000017 	ldw	fp,0(sp)
    d330:	dec00104 	addi	sp,sp,4
    d334:	f800283a 	ret

0000d338 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d338:	defffe04 	addi	sp,sp,-8
    d33c:	dfc00115 	stw	ra,4(sp)
    d340:	df000015 	stw	fp,0(sp)
    d344:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d348:	d0a00b17 	ldw	r2,-32724(gp)
    d34c:	10000326 	beq	r2,zero,d35c <alt_get_errno+0x24>
    d350:	d0a00b17 	ldw	r2,-32724(gp)
    d354:	103ee83a 	callr	r2
    d358:	00000106 	br	d360 <alt_get_errno+0x28>
    d35c:	d0a6d104 	addi	r2,gp,-25788
}
    d360:	e037883a 	mov	sp,fp
    d364:	dfc00117 	ldw	ra,4(sp)
    d368:	df000017 	ldw	fp,0(sp)
    d36c:	dec00204 	addi	sp,sp,8
    d370:	f800283a 	ret

0000d374 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d374:	defff904 	addi	sp,sp,-28
    d378:	dfc00615 	stw	ra,24(sp)
    d37c:	df000515 	stw	fp,20(sp)
    d380:	df000504 	addi	fp,sp,20
    d384:	e13ffd15 	stw	r4,-12(fp)
    d388:	e17ffe15 	stw	r5,-8(fp)
    d38c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d390:	e0bffd17 	ldw	r2,-12(fp)
    d394:	10000616 	blt	r2,zero,d3b0 <read+0x3c>
    d398:	e0bffd17 	ldw	r2,-12(fp)
    d39c:	10c00324 	muli	r3,r2,12
    d3a0:	00800074 	movhi	r2,1
    d3a4:	10802a04 	addi	r2,r2,168
    d3a8:	1885883a 	add	r2,r3,r2
    d3ac:	00000106 	br	d3b4 <read+0x40>
    d3b0:	0005883a 	mov	r2,zero
    d3b4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d3b8:	e0bffb17 	ldw	r2,-20(fp)
    d3bc:	10002226 	beq	r2,zero,d448 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d3c0:	e0bffb17 	ldw	r2,-20(fp)
    d3c4:	10800217 	ldw	r2,8(r2)
    d3c8:	108000cc 	andi	r2,r2,3
    d3cc:	10800060 	cmpeqi	r2,r2,1
    d3d0:	1000181e 	bne	r2,zero,d434 <read+0xc0>
        (fd->dev->read))
    d3d4:	e0bffb17 	ldw	r2,-20(fp)
    d3d8:	10800017 	ldw	r2,0(r2)
    d3dc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d3e0:	10001426 	beq	r2,zero,d434 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d3e4:	e0bffb17 	ldw	r2,-20(fp)
    d3e8:	10800017 	ldw	r2,0(r2)
    d3ec:	10800517 	ldw	r2,20(r2)
    d3f0:	e0ffff17 	ldw	r3,-4(fp)
    d3f4:	180d883a 	mov	r6,r3
    d3f8:	e17ffe17 	ldw	r5,-8(fp)
    d3fc:	e13ffb17 	ldw	r4,-20(fp)
    d400:	103ee83a 	callr	r2
    d404:	e0bffc15 	stw	r2,-16(fp)
    d408:	e0bffc17 	ldw	r2,-16(fp)
    d40c:	1000070e 	bge	r2,zero,d42c <read+0xb8>
        {
          ALT_ERRNO = -rval;
    d410:	000d3380 	call	d338 <alt_get_errno>
    d414:	1007883a 	mov	r3,r2
    d418:	e0bffc17 	ldw	r2,-16(fp)
    d41c:	0085c83a 	sub	r2,zero,r2
    d420:	18800015 	stw	r2,0(r3)
          return -1;
    d424:	00bfffc4 	movi	r2,-1
    d428:	00000c06 	br	d45c <read+0xe8>
        }
        return rval;
    d42c:	e0bffc17 	ldw	r2,-16(fp)
    d430:	00000a06 	br	d45c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d434:	000d3380 	call	d338 <alt_get_errno>
    d438:	1007883a 	mov	r3,r2
    d43c:	00800344 	movi	r2,13
    d440:	18800015 	stw	r2,0(r3)
    d444:	00000406 	br	d458 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d448:	000d3380 	call	d338 <alt_get_errno>
    d44c:	1007883a 	mov	r3,r2
    d450:	00801444 	movi	r2,81
    d454:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d458:	00bfffc4 	movi	r2,-1
}
    d45c:	e037883a 	mov	sp,fp
    d460:	dfc00117 	ldw	ra,4(sp)
    d464:	df000017 	ldw	fp,0(sp)
    d468:	dec00204 	addi	sp,sp,8
    d46c:	f800283a 	ret

0000d470 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d470:	defffe04 	addi	sp,sp,-8
    d474:	df000115 	stw	fp,4(sp)
    d478:	df000104 	addi	fp,sp,4
    d47c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    d480:	e0bfff17 	ldw	r2,-4(fp)
    d484:	108000d0 	cmplti	r2,r2,3
    d488:	10000d1e 	bne	r2,zero,d4c0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    d48c:	00800074 	movhi	r2,1
    d490:	10802a04 	addi	r2,r2,168
    d494:	e0ffff17 	ldw	r3,-4(fp)
    d498:	18c00324 	muli	r3,r3,12
    d49c:	10c5883a 	add	r2,r2,r3
    d4a0:	10800204 	addi	r2,r2,8
    d4a4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d4a8:	00800074 	movhi	r2,1
    d4ac:	10802a04 	addi	r2,r2,168
    d4b0:	e0ffff17 	ldw	r3,-4(fp)
    d4b4:	18c00324 	muli	r3,r3,12
    d4b8:	10c5883a 	add	r2,r2,r3
    d4bc:	10000015 	stw	zero,0(r2)
  }
}
    d4c0:	0001883a 	nop
    d4c4:	e037883a 	mov	sp,fp
    d4c8:	df000017 	ldw	fp,0(sp)
    d4cc:	dec00104 	addi	sp,sp,4
    d4d0:	f800283a 	ret

0000d4d4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d4d4:	defff904 	addi	sp,sp,-28
    d4d8:	df000615 	stw	fp,24(sp)
    d4dc:	df000604 	addi	fp,sp,24
    d4e0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d4e4:	0005303a 	rdctl	r2,status
    d4e8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d4ec:	e0fffe17 	ldw	r3,-8(fp)
    d4f0:	00bfff84 	movi	r2,-2
    d4f4:	1884703a 	and	r2,r3,r2
    d4f8:	1001703a 	wrctl	status,r2
  
  return context;
    d4fc:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d500:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d504:	d0a00c17 	ldw	r2,-32720(gp)
    d508:	10c000c4 	addi	r3,r2,3
    d50c:	00bfff04 	movi	r2,-4
    d510:	1884703a 	and	r2,r3,r2
    d514:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d518:	d0e00c17 	ldw	r3,-32720(gp)
    d51c:	e0bfff17 	ldw	r2,-4(fp)
    d520:	1887883a 	add	r3,r3,r2
    d524:	008000b4 	movhi	r2,2
    d528:	10800004 	addi	r2,r2,0
    d52c:	10c0062e 	bgeu	r2,r3,d548 <sbrk+0x74>
    d530:	e0bffb17 	ldw	r2,-20(fp)
    d534:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d538:	e0bffa17 	ldw	r2,-24(fp)
    d53c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d540:	00bfffc4 	movi	r2,-1
    d544:	00000b06 	br	d574 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d548:	d0a00c17 	ldw	r2,-32720(gp)
    d54c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    d550:	d0e00c17 	ldw	r3,-32720(gp)
    d554:	e0bfff17 	ldw	r2,-4(fp)
    d558:	1885883a 	add	r2,r3,r2
    d55c:	d0a00c15 	stw	r2,-32720(gp)
    d560:	e0bffb17 	ldw	r2,-20(fp)
    d564:	e0bffc15 	stw	r2,-16(fp)
    d568:	e0bffc17 	ldw	r2,-16(fp)
    d56c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d570:	e0bffd17 	ldw	r2,-12(fp)
} 
    d574:	e037883a 	mov	sp,fp
    d578:	df000017 	ldw	fp,0(sp)
    d57c:	dec00104 	addi	sp,sp,4
    d580:	f800283a 	ret

0000d584 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d584:	defffe04 	addi	sp,sp,-8
    d588:	dfc00115 	stw	ra,4(sp)
    d58c:	df000015 	stw	fp,0(sp)
    d590:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d594:	d0a00b17 	ldw	r2,-32724(gp)
    d598:	10000326 	beq	r2,zero,d5a8 <alt_get_errno+0x24>
    d59c:	d0a00b17 	ldw	r2,-32724(gp)
    d5a0:	103ee83a 	callr	r2
    d5a4:	00000106 	br	d5ac <alt_get_errno+0x28>
    d5a8:	d0a6d104 	addi	r2,gp,-25788
}
    d5ac:	e037883a 	mov	sp,fp
    d5b0:	dfc00117 	ldw	ra,4(sp)
    d5b4:	df000017 	ldw	fp,0(sp)
    d5b8:	dec00204 	addi	sp,sp,8
    d5bc:	f800283a 	ret

0000d5c0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    d5c0:	defff904 	addi	sp,sp,-28
    d5c4:	dfc00615 	stw	ra,24(sp)
    d5c8:	df000515 	stw	fp,20(sp)
    d5cc:	df000504 	addi	fp,sp,20
    d5d0:	e13ffd15 	stw	r4,-12(fp)
    d5d4:	e17ffe15 	stw	r5,-8(fp)
    d5d8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d5dc:	e0bffd17 	ldw	r2,-12(fp)
    d5e0:	10000616 	blt	r2,zero,d5fc <write+0x3c>
    d5e4:	e0bffd17 	ldw	r2,-12(fp)
    d5e8:	10c00324 	muli	r3,r2,12
    d5ec:	00800074 	movhi	r2,1
    d5f0:	10802a04 	addi	r2,r2,168
    d5f4:	1885883a 	add	r2,r3,r2
    d5f8:	00000106 	br	d600 <write+0x40>
    d5fc:	0005883a 	mov	r2,zero
    d600:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d604:	e0bffb17 	ldw	r2,-20(fp)
    d608:	10002126 	beq	r2,zero,d690 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    d60c:	e0bffb17 	ldw	r2,-20(fp)
    d610:	10800217 	ldw	r2,8(r2)
    d614:	108000cc 	andi	r2,r2,3
    d618:	10001826 	beq	r2,zero,d67c <write+0xbc>
    d61c:	e0bffb17 	ldw	r2,-20(fp)
    d620:	10800017 	ldw	r2,0(r2)
    d624:	10800617 	ldw	r2,24(r2)
    d628:	10001426 	beq	r2,zero,d67c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    d62c:	e0bffb17 	ldw	r2,-20(fp)
    d630:	10800017 	ldw	r2,0(r2)
    d634:	10800617 	ldw	r2,24(r2)
    d638:	e0ffff17 	ldw	r3,-4(fp)
    d63c:	180d883a 	mov	r6,r3
    d640:	e17ffe17 	ldw	r5,-8(fp)
    d644:	e13ffb17 	ldw	r4,-20(fp)
    d648:	103ee83a 	callr	r2
    d64c:	e0bffc15 	stw	r2,-16(fp)
    d650:	e0bffc17 	ldw	r2,-16(fp)
    d654:	1000070e 	bge	r2,zero,d674 <write+0xb4>
      {
        ALT_ERRNO = -rval;
    d658:	000d5840 	call	d584 <alt_get_errno>
    d65c:	1007883a 	mov	r3,r2
    d660:	e0bffc17 	ldw	r2,-16(fp)
    d664:	0085c83a 	sub	r2,zero,r2
    d668:	18800015 	stw	r2,0(r3)
        return -1;
    d66c:	00bfffc4 	movi	r2,-1
    d670:	00000c06 	br	d6a4 <write+0xe4>
      }
      return rval;
    d674:	e0bffc17 	ldw	r2,-16(fp)
    d678:	00000a06 	br	d6a4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
    d67c:	000d5840 	call	d584 <alt_get_errno>
    d680:	1007883a 	mov	r3,r2
    d684:	00800344 	movi	r2,13
    d688:	18800015 	stw	r2,0(r3)
    d68c:	00000406 	br	d6a0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    d690:	000d5840 	call	d584 <alt_get_errno>
    d694:	1007883a 	mov	r3,r2
    d698:	00801444 	movi	r2,81
    d69c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d6a0:	00bfffc4 	movi	r2,-1
}
    d6a4:	e037883a 	mov	sp,fp
    d6a8:	dfc00117 	ldw	ra,4(sp)
    d6ac:	df000017 	ldw	fp,0(sp)
    d6b0:	dec00204 	addi	sp,sp,8
    d6b4:	f800283a 	ret

0000d6b8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    d6b8:	defffd04 	addi	sp,sp,-12
    d6bc:	dfc00215 	stw	ra,8(sp)
    d6c0:	df000115 	stw	fp,4(sp)
    d6c4:	df000104 	addi	fp,sp,4
    d6c8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    d6cc:	d1600804 	addi	r5,gp,-32736
    d6d0:	e13fff17 	ldw	r4,-4(fp)
    d6d4:	000e3840 	call	e384 <alt_dev_llist_insert>
}
    d6d8:	e037883a 	mov	sp,fp
    d6dc:	dfc00117 	ldw	ra,4(sp)
    d6e0:	df000017 	ldw	fp,0(sp)
    d6e4:	dec00204 	addi	sp,sp,8
    d6e8:	f800283a 	ret

0000d6ec <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    d6ec:	defffd04 	addi	sp,sp,-12
    d6f0:	dfc00215 	stw	ra,8(sp)
    d6f4:	df000115 	stw	fp,4(sp)
    d6f8:	df000104 	addi	fp,sp,4
    d6fc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    d700:	000ecf40 	call	ecf4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    d704:	00800044 	movi	r2,1
    d708:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    d70c:	0001883a 	nop
    d710:	e037883a 	mov	sp,fp
    d714:	dfc00117 	ldw	ra,4(sp)
    d718:	df000017 	ldw	fp,0(sp)
    d71c:	dec00204 	addi	sp,sp,8
    d720:	f800283a 	ret

0000d724 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    d724:	defffe04 	addi	sp,sp,-8
    d728:	dfc00115 	stw	ra,4(sp)
    d72c:	df000015 	stw	fp,0(sp)
    d730:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    d734:	01800144 	movi	r6,5
    d738:	000b883a 	mov	r5,zero
    d73c:	01000074 	movhi	r4,1
    d740:	21009404 	addi	r4,r4,592
    d744:	000d8d00 	call	d8d0 <altera_avalon_jtag_uart_init>
    d748:	01000074 	movhi	r4,1
    d74c:	21008a04 	addi	r4,r4,552
    d750:	000d6b80 	call	d6b8 <alt_dev_reg>
}
    d754:	0001883a 	nop
    d758:	e037883a 	mov	sp,fp
    d75c:	dfc00117 	ldw	ra,4(sp)
    d760:	df000017 	ldw	fp,0(sp)
    d764:	dec00204 	addi	sp,sp,8
    d768:	f800283a 	ret

0000d76c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    d76c:	defffa04 	addi	sp,sp,-24
    d770:	dfc00515 	stw	ra,20(sp)
    d774:	df000415 	stw	fp,16(sp)
    d778:	df000404 	addi	fp,sp,16
    d77c:	e13ffd15 	stw	r4,-12(fp)
    d780:	e17ffe15 	stw	r5,-8(fp)
    d784:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d788:	e0bffd17 	ldw	r2,-12(fp)
    d78c:	10800017 	ldw	r2,0(r2)
    d790:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    d794:	e0bffc17 	ldw	r2,-16(fp)
    d798:	10c00a04 	addi	r3,r2,40
    d79c:	e0bffd17 	ldw	r2,-12(fp)
    d7a0:	10800217 	ldw	r2,8(r2)
    d7a4:	100f883a 	mov	r7,r2
    d7a8:	e1bfff17 	ldw	r6,-4(fp)
    d7ac:	e17ffe17 	ldw	r5,-8(fp)
    d7b0:	1809883a 	mov	r4,r3
    d7b4:	000dd940 	call	dd94 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    d7b8:	e037883a 	mov	sp,fp
    d7bc:	dfc00117 	ldw	ra,4(sp)
    d7c0:	df000017 	ldw	fp,0(sp)
    d7c4:	dec00204 	addi	sp,sp,8
    d7c8:	f800283a 	ret

0000d7cc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    d7cc:	defffa04 	addi	sp,sp,-24
    d7d0:	dfc00515 	stw	ra,20(sp)
    d7d4:	df000415 	stw	fp,16(sp)
    d7d8:	df000404 	addi	fp,sp,16
    d7dc:	e13ffd15 	stw	r4,-12(fp)
    d7e0:	e17ffe15 	stw	r5,-8(fp)
    d7e4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d7e8:	e0bffd17 	ldw	r2,-12(fp)
    d7ec:	10800017 	ldw	r2,0(r2)
    d7f0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    d7f4:	e0bffc17 	ldw	r2,-16(fp)
    d7f8:	10c00a04 	addi	r3,r2,40
    d7fc:	e0bffd17 	ldw	r2,-12(fp)
    d800:	10800217 	ldw	r2,8(r2)
    d804:	100f883a 	mov	r7,r2
    d808:	e1bfff17 	ldw	r6,-4(fp)
    d80c:	e17ffe17 	ldw	r5,-8(fp)
    d810:	1809883a 	mov	r4,r3
    d814:	000dfb00 	call	dfb0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    d818:	e037883a 	mov	sp,fp
    d81c:	dfc00117 	ldw	ra,4(sp)
    d820:	df000017 	ldw	fp,0(sp)
    d824:	dec00204 	addi	sp,sp,8
    d828:	f800283a 	ret

0000d82c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    d82c:	defffc04 	addi	sp,sp,-16
    d830:	dfc00315 	stw	ra,12(sp)
    d834:	df000215 	stw	fp,8(sp)
    d838:	df000204 	addi	fp,sp,8
    d83c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d840:	e0bfff17 	ldw	r2,-4(fp)
    d844:	10800017 	ldw	r2,0(r2)
    d848:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    d84c:	e0bffe17 	ldw	r2,-8(fp)
    d850:	10c00a04 	addi	r3,r2,40
    d854:	e0bfff17 	ldw	r2,-4(fp)
    d858:	10800217 	ldw	r2,8(r2)
    d85c:	100b883a 	mov	r5,r2
    d860:	1809883a 	mov	r4,r3
    d864:	000dc3c0 	call	dc3c <altera_avalon_jtag_uart_close>
}
    d868:	e037883a 	mov	sp,fp
    d86c:	dfc00117 	ldw	ra,4(sp)
    d870:	df000017 	ldw	fp,0(sp)
    d874:	dec00204 	addi	sp,sp,8
    d878:	f800283a 	ret

0000d87c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    d87c:	defffa04 	addi	sp,sp,-24
    d880:	dfc00515 	stw	ra,20(sp)
    d884:	df000415 	stw	fp,16(sp)
    d888:	df000404 	addi	fp,sp,16
    d88c:	e13ffd15 	stw	r4,-12(fp)
    d890:	e17ffe15 	stw	r5,-8(fp)
    d894:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    d898:	e0bffd17 	ldw	r2,-12(fp)
    d89c:	10800017 	ldw	r2,0(r2)
    d8a0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    d8a4:	e0bffc17 	ldw	r2,-16(fp)
    d8a8:	10800a04 	addi	r2,r2,40
    d8ac:	e1bfff17 	ldw	r6,-4(fp)
    d8b0:	e17ffe17 	ldw	r5,-8(fp)
    d8b4:	1009883a 	mov	r4,r2
    d8b8:	000dca40 	call	dca4 <altera_avalon_jtag_uart_ioctl>
}
    d8bc:	e037883a 	mov	sp,fp
    d8c0:	dfc00117 	ldw	ra,4(sp)
    d8c4:	df000017 	ldw	fp,0(sp)
    d8c8:	dec00204 	addi	sp,sp,8
    d8cc:	f800283a 	ret

0000d8d0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    d8d0:	defffa04 	addi	sp,sp,-24
    d8d4:	dfc00515 	stw	ra,20(sp)
    d8d8:	df000415 	stw	fp,16(sp)
    d8dc:	df000404 	addi	fp,sp,16
    d8e0:	e13ffd15 	stw	r4,-12(fp)
    d8e4:	e17ffe15 	stw	r5,-8(fp)
    d8e8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    d8ec:	e0bffd17 	ldw	r2,-12(fp)
    d8f0:	00c00044 	movi	r3,1
    d8f4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    d8f8:	e0bffd17 	ldw	r2,-12(fp)
    d8fc:	10800017 	ldw	r2,0(r2)
    d900:	10800104 	addi	r2,r2,4
    d904:	1007883a 	mov	r3,r2
    d908:	e0bffd17 	ldw	r2,-12(fp)
    d90c:	10800817 	ldw	r2,32(r2)
    d910:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    d914:	e0bffe17 	ldw	r2,-8(fp)
    d918:	e0ffff17 	ldw	r3,-4(fp)
    d91c:	d8000015 	stw	zero,0(sp)
    d920:	e1fffd17 	ldw	r7,-12(fp)
    d924:	01800074 	movhi	r6,1
    d928:	31b66404 	addi	r6,r6,-9840
    d92c:	180b883a 	mov	r5,r3
    d930:	1009883a 	mov	r4,r2
    d934:	000e51c0 	call	e51c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    d938:	e0bffd17 	ldw	r2,-12(fp)
    d93c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    d940:	e0bffd17 	ldw	r2,-12(fp)
    d944:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    d948:	d0e6d617 	ldw	r3,-25768(gp)
    d94c:	e1fffd17 	ldw	r7,-12(fp)
    d950:	01800074 	movhi	r6,1
    d954:	31b6e704 	addi	r6,r6,-9316
    d958:	180b883a 	mov	r5,r3
    d95c:	1009883a 	mov	r4,r2
    d960:	000e1d40 	call	e1d4 <alt_alarm_start>
    d964:	1000040e 	bge	r2,zero,d978 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    d968:	e0fffd17 	ldw	r3,-12(fp)
    d96c:	00a00034 	movhi	r2,32768
    d970:	10bfffc4 	addi	r2,r2,-1
    d974:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    d978:	0001883a 	nop
    d97c:	e037883a 	mov	sp,fp
    d980:	dfc00117 	ldw	ra,4(sp)
    d984:	df000017 	ldw	fp,0(sp)
    d988:	dec00204 	addi	sp,sp,8
    d98c:	f800283a 	ret

0000d990 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    d990:	defff804 	addi	sp,sp,-32
    d994:	df000715 	stw	fp,28(sp)
    d998:	df000704 	addi	fp,sp,28
    d99c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    d9a0:	e0bfff17 	ldw	r2,-4(fp)
    d9a4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    d9a8:	e0bffb17 	ldw	r2,-20(fp)
    d9ac:	10800017 	ldw	r2,0(r2)
    d9b0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    d9b4:	e0bffc17 	ldw	r2,-16(fp)
    d9b8:	10800104 	addi	r2,r2,4
    d9bc:	10800037 	ldwio	r2,0(r2)
    d9c0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    d9c4:	e0bffd17 	ldw	r2,-12(fp)
    d9c8:	1080c00c 	andi	r2,r2,768
    d9cc:	10006d26 	beq	r2,zero,db84 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    d9d0:	e0bffd17 	ldw	r2,-12(fp)
    d9d4:	1080400c 	andi	r2,r2,256
    d9d8:	10003526 	beq	r2,zero,dab0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    d9dc:	00800074 	movhi	r2,1
    d9e0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    d9e4:	e0bffb17 	ldw	r2,-20(fp)
    d9e8:	10800a17 	ldw	r2,40(r2)
    d9ec:	10800044 	addi	r2,r2,1
    d9f0:	1081ffcc 	andi	r2,r2,2047
    d9f4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    d9f8:	e0bffb17 	ldw	r2,-20(fp)
    d9fc:	10c00b17 	ldw	r3,44(r2)
    da00:	e0bffe17 	ldw	r2,-8(fp)
    da04:	18801526 	beq	r3,r2,da5c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    da08:	e0bffc17 	ldw	r2,-16(fp)
    da0c:	10800037 	ldwio	r2,0(r2)
    da10:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    da14:	e0bff917 	ldw	r2,-28(fp)
    da18:	10a0000c 	andi	r2,r2,32768
    da1c:	10001126 	beq	r2,zero,da64 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    da20:	e0bffb17 	ldw	r2,-20(fp)
    da24:	10800a17 	ldw	r2,40(r2)
    da28:	e0fff917 	ldw	r3,-28(fp)
    da2c:	1809883a 	mov	r4,r3
    da30:	e0fffb17 	ldw	r3,-20(fp)
    da34:	1885883a 	add	r2,r3,r2
    da38:	10800e04 	addi	r2,r2,56
    da3c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    da40:	e0bffb17 	ldw	r2,-20(fp)
    da44:	10800a17 	ldw	r2,40(r2)
    da48:	10800044 	addi	r2,r2,1
    da4c:	10c1ffcc 	andi	r3,r2,2047
    da50:	e0bffb17 	ldw	r2,-20(fp)
    da54:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    da58:	003fe206 	br	d9e4 <__alt_data_end+0xfffed9e4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    da5c:	0001883a 	nop
    da60:	00000106 	br	da68 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    da64:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    da68:	e0bff917 	ldw	r2,-28(fp)
    da6c:	10bfffec 	andhi	r2,r2,65535
    da70:	10000f26 	beq	r2,zero,dab0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    da74:	e0bffb17 	ldw	r2,-20(fp)
    da78:	10c00817 	ldw	r3,32(r2)
    da7c:	00bfff84 	movi	r2,-2
    da80:	1886703a 	and	r3,r3,r2
    da84:	e0bffb17 	ldw	r2,-20(fp)
    da88:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    da8c:	e0bffc17 	ldw	r2,-16(fp)
    da90:	10800104 	addi	r2,r2,4
    da94:	1007883a 	mov	r3,r2
    da98:	e0bffb17 	ldw	r2,-20(fp)
    da9c:	10800817 	ldw	r2,32(r2)
    daa0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    daa4:	e0bffc17 	ldw	r2,-16(fp)
    daa8:	10800104 	addi	r2,r2,4
    daac:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    dab0:	e0bffd17 	ldw	r2,-12(fp)
    dab4:	1080800c 	andi	r2,r2,512
    dab8:	103fbe26 	beq	r2,zero,d9b4 <__alt_data_end+0xfffed9b4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    dabc:	e0bffd17 	ldw	r2,-12(fp)
    dac0:	1004d43a 	srli	r2,r2,16
    dac4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    dac8:	00001406 	br	db1c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    dacc:	e0bffc17 	ldw	r2,-16(fp)
    dad0:	e0fffb17 	ldw	r3,-20(fp)
    dad4:	18c00d17 	ldw	r3,52(r3)
    dad8:	e13ffb17 	ldw	r4,-20(fp)
    dadc:	20c7883a 	add	r3,r4,r3
    dae0:	18c20e04 	addi	r3,r3,2104
    dae4:	18c00003 	ldbu	r3,0(r3)
    dae8:	18c03fcc 	andi	r3,r3,255
    daec:	18c0201c 	xori	r3,r3,128
    daf0:	18ffe004 	addi	r3,r3,-128
    daf4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    daf8:	e0bffb17 	ldw	r2,-20(fp)
    dafc:	10800d17 	ldw	r2,52(r2)
    db00:	10800044 	addi	r2,r2,1
    db04:	10c1ffcc 	andi	r3,r2,2047
    db08:	e0bffb17 	ldw	r2,-20(fp)
    db0c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    db10:	e0bffa17 	ldw	r2,-24(fp)
    db14:	10bfffc4 	addi	r2,r2,-1
    db18:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    db1c:	e0bffa17 	ldw	r2,-24(fp)
    db20:	10000526 	beq	r2,zero,db38 <altera_avalon_jtag_uart_irq+0x1a8>
    db24:	e0bffb17 	ldw	r2,-20(fp)
    db28:	10c00d17 	ldw	r3,52(r2)
    db2c:	e0bffb17 	ldw	r2,-20(fp)
    db30:	10800c17 	ldw	r2,48(r2)
    db34:	18bfe51e 	bne	r3,r2,dacc <__alt_data_end+0xfffedacc>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    db38:	e0bffa17 	ldw	r2,-24(fp)
    db3c:	103f9d26 	beq	r2,zero,d9b4 <__alt_data_end+0xfffed9b4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    db40:	e0bffb17 	ldw	r2,-20(fp)
    db44:	10c00817 	ldw	r3,32(r2)
    db48:	00bfff44 	movi	r2,-3
    db4c:	1886703a 	and	r3,r3,r2
    db50:	e0bffb17 	ldw	r2,-20(fp)
    db54:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    db58:	e0bffb17 	ldw	r2,-20(fp)
    db5c:	10800017 	ldw	r2,0(r2)
    db60:	10800104 	addi	r2,r2,4
    db64:	1007883a 	mov	r3,r2
    db68:	e0bffb17 	ldw	r2,-20(fp)
    db6c:	10800817 	ldw	r2,32(r2)
    db70:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    db74:	e0bffc17 	ldw	r2,-16(fp)
    db78:	10800104 	addi	r2,r2,4
    db7c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    db80:	003f8c06 	br	d9b4 <__alt_data_end+0xfffed9b4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    db84:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    db88:	0001883a 	nop
    db8c:	e037883a 	mov	sp,fp
    db90:	df000017 	ldw	fp,0(sp)
    db94:	dec00104 	addi	sp,sp,4
    db98:	f800283a 	ret

0000db9c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    db9c:	defff804 	addi	sp,sp,-32
    dba0:	df000715 	stw	fp,28(sp)
    dba4:	df000704 	addi	fp,sp,28
    dba8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    dbac:	e0bffb17 	ldw	r2,-20(fp)
    dbb0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    dbb4:	e0bff917 	ldw	r2,-28(fp)
    dbb8:	10800017 	ldw	r2,0(r2)
    dbbc:	10800104 	addi	r2,r2,4
    dbc0:	10800037 	ldwio	r2,0(r2)
    dbc4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    dbc8:	e0bffa17 	ldw	r2,-24(fp)
    dbcc:	1081000c 	andi	r2,r2,1024
    dbd0:	10000b26 	beq	r2,zero,dc00 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    dbd4:	e0bff917 	ldw	r2,-28(fp)
    dbd8:	10800017 	ldw	r2,0(r2)
    dbdc:	10800104 	addi	r2,r2,4
    dbe0:	1007883a 	mov	r3,r2
    dbe4:	e0bff917 	ldw	r2,-28(fp)
    dbe8:	10800817 	ldw	r2,32(r2)
    dbec:	10810014 	ori	r2,r2,1024
    dbf0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    dbf4:	e0bff917 	ldw	r2,-28(fp)
    dbf8:	10000915 	stw	zero,36(r2)
    dbfc:	00000a06 	br	dc28 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    dc00:	e0bff917 	ldw	r2,-28(fp)
    dc04:	10c00917 	ldw	r3,36(r2)
    dc08:	00a00034 	movhi	r2,32768
    dc0c:	10bfff04 	addi	r2,r2,-4
    dc10:	10c00536 	bltu	r2,r3,dc28 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    dc14:	e0bff917 	ldw	r2,-28(fp)
    dc18:	10800917 	ldw	r2,36(r2)
    dc1c:	10c00044 	addi	r3,r2,1
    dc20:	e0bff917 	ldw	r2,-28(fp)
    dc24:	10c00915 	stw	r3,36(r2)
    dc28:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    dc2c:	e037883a 	mov	sp,fp
    dc30:	df000017 	ldw	fp,0(sp)
    dc34:	dec00104 	addi	sp,sp,4
    dc38:	f800283a 	ret

0000dc3c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    dc3c:	defffd04 	addi	sp,sp,-12
    dc40:	df000215 	stw	fp,8(sp)
    dc44:	df000204 	addi	fp,sp,8
    dc48:	e13ffe15 	stw	r4,-8(fp)
    dc4c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dc50:	00000506 	br	dc68 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    dc54:	e0bfff17 	ldw	r2,-4(fp)
    dc58:	1090000c 	andi	r2,r2,16384
    dc5c:	10000226 	beq	r2,zero,dc68 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    dc60:	00bffd44 	movi	r2,-11
    dc64:	00000b06 	br	dc94 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dc68:	e0bffe17 	ldw	r2,-8(fp)
    dc6c:	10c00d17 	ldw	r3,52(r2)
    dc70:	e0bffe17 	ldw	r2,-8(fp)
    dc74:	10800c17 	ldw	r2,48(r2)
    dc78:	18800526 	beq	r3,r2,dc90 <altera_avalon_jtag_uart_close+0x54>
    dc7c:	e0bffe17 	ldw	r2,-8(fp)
    dc80:	10c00917 	ldw	r3,36(r2)
    dc84:	e0bffe17 	ldw	r2,-8(fp)
    dc88:	10800117 	ldw	r2,4(r2)
    dc8c:	18bff136 	bltu	r3,r2,dc54 <__alt_data_end+0xfffedc54>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    dc90:	0005883a 	mov	r2,zero
}
    dc94:	e037883a 	mov	sp,fp
    dc98:	df000017 	ldw	fp,0(sp)
    dc9c:	dec00104 	addi	sp,sp,4
    dca0:	f800283a 	ret

0000dca4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    dca4:	defffa04 	addi	sp,sp,-24
    dca8:	df000515 	stw	fp,20(sp)
    dcac:	df000504 	addi	fp,sp,20
    dcb0:	e13ffd15 	stw	r4,-12(fp)
    dcb4:	e17ffe15 	stw	r5,-8(fp)
    dcb8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    dcbc:	00bff9c4 	movi	r2,-25
    dcc0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    dcc4:	e0bffe17 	ldw	r2,-8(fp)
    dcc8:	10da8060 	cmpeqi	r3,r2,27137
    dccc:	1800031e 	bne	r3,zero,dcdc <altera_avalon_jtag_uart_ioctl+0x38>
    dcd0:	109a80a0 	cmpeqi	r2,r2,27138
    dcd4:	1000181e 	bne	r2,zero,dd38 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    dcd8:	00002906 	br	dd80 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    dcdc:	e0bffd17 	ldw	r2,-12(fp)
    dce0:	10c00117 	ldw	r3,4(r2)
    dce4:	00a00034 	movhi	r2,32768
    dce8:	10bfffc4 	addi	r2,r2,-1
    dcec:	18802126 	beq	r3,r2,dd74 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    dcf0:	e0bfff17 	ldw	r2,-4(fp)
    dcf4:	10800017 	ldw	r2,0(r2)
    dcf8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    dcfc:	e0bffc17 	ldw	r2,-16(fp)
    dd00:	10800090 	cmplti	r2,r2,2
    dd04:	1000061e 	bne	r2,zero,dd20 <altera_avalon_jtag_uart_ioctl+0x7c>
    dd08:	e0fffc17 	ldw	r3,-16(fp)
    dd0c:	00a00034 	movhi	r2,32768
    dd10:	10bfffc4 	addi	r2,r2,-1
    dd14:	18800226 	beq	r3,r2,dd20 <altera_avalon_jtag_uart_ioctl+0x7c>
    dd18:	e0bffc17 	ldw	r2,-16(fp)
    dd1c:	00000206 	br	dd28 <altera_avalon_jtag_uart_ioctl+0x84>
    dd20:	00a00034 	movhi	r2,32768
    dd24:	10bfff84 	addi	r2,r2,-2
    dd28:	e0fffd17 	ldw	r3,-12(fp)
    dd2c:	18800115 	stw	r2,4(r3)
      rc = 0;
    dd30:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    dd34:	00000f06 	br	dd74 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    dd38:	e0bffd17 	ldw	r2,-12(fp)
    dd3c:	10c00117 	ldw	r3,4(r2)
    dd40:	00a00034 	movhi	r2,32768
    dd44:	10bfffc4 	addi	r2,r2,-1
    dd48:	18800c26 	beq	r3,r2,dd7c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    dd4c:	e0bffd17 	ldw	r2,-12(fp)
    dd50:	10c00917 	ldw	r3,36(r2)
    dd54:	e0bffd17 	ldw	r2,-12(fp)
    dd58:	10800117 	ldw	r2,4(r2)
    dd5c:	1885803a 	cmpltu	r2,r3,r2
    dd60:	10c03fcc 	andi	r3,r2,255
    dd64:	e0bfff17 	ldw	r2,-4(fp)
    dd68:	10c00015 	stw	r3,0(r2)
      rc = 0;
    dd6c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    dd70:	00000206 	br	dd7c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    dd74:	0001883a 	nop
    dd78:	00000106 	br	dd80 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    dd7c:	0001883a 	nop

  default:
    break;
  }

  return rc;
    dd80:	e0bffb17 	ldw	r2,-20(fp)
}
    dd84:	e037883a 	mov	sp,fp
    dd88:	df000017 	ldw	fp,0(sp)
    dd8c:	dec00104 	addi	sp,sp,4
    dd90:	f800283a 	ret

0000dd94 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    dd94:	defff304 	addi	sp,sp,-52
    dd98:	dfc00c15 	stw	ra,48(sp)
    dd9c:	df000b15 	stw	fp,44(sp)
    dda0:	df000b04 	addi	fp,sp,44
    dda4:	e13ffc15 	stw	r4,-16(fp)
    dda8:	e17ffd15 	stw	r5,-12(fp)
    ddac:	e1bffe15 	stw	r6,-8(fp)
    ddb0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    ddb4:	e0bffd17 	ldw	r2,-12(fp)
    ddb8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    ddbc:	00004706 	br	dedc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    ddc0:	e0bffc17 	ldw	r2,-16(fp)
    ddc4:	10800a17 	ldw	r2,40(r2)
    ddc8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    ddcc:	e0bffc17 	ldw	r2,-16(fp)
    ddd0:	10800b17 	ldw	r2,44(r2)
    ddd4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    ddd8:	e0fff717 	ldw	r3,-36(fp)
    dddc:	e0bff817 	ldw	r2,-32(fp)
    dde0:	18800536 	bltu	r3,r2,ddf8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    dde4:	e0fff717 	ldw	r3,-36(fp)
    dde8:	e0bff817 	ldw	r2,-32(fp)
    ddec:	1885c83a 	sub	r2,r3,r2
    ddf0:	e0bff615 	stw	r2,-40(fp)
    ddf4:	00000406 	br	de08 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    ddf8:	00c20004 	movi	r3,2048
    ddfc:	e0bff817 	ldw	r2,-32(fp)
    de00:	1885c83a 	sub	r2,r3,r2
    de04:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    de08:	e0bff617 	ldw	r2,-40(fp)
    de0c:	10001e26 	beq	r2,zero,de88 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    de10:	e0fffe17 	ldw	r3,-8(fp)
    de14:	e0bff617 	ldw	r2,-40(fp)
    de18:	1880022e 	bgeu	r3,r2,de24 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    de1c:	e0bffe17 	ldw	r2,-8(fp)
    de20:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    de24:	e0bffc17 	ldw	r2,-16(fp)
    de28:	10c00e04 	addi	r3,r2,56
    de2c:	e0bff817 	ldw	r2,-32(fp)
    de30:	1885883a 	add	r2,r3,r2
    de34:	e1bff617 	ldw	r6,-40(fp)
    de38:	100b883a 	mov	r5,r2
    de3c:	e13ff517 	ldw	r4,-44(fp)
    de40:	0005b800 	call	5b80 <memcpy>
      ptr   += n;
    de44:	e0fff517 	ldw	r3,-44(fp)
    de48:	e0bff617 	ldw	r2,-40(fp)
    de4c:	1885883a 	add	r2,r3,r2
    de50:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    de54:	e0fffe17 	ldw	r3,-8(fp)
    de58:	e0bff617 	ldw	r2,-40(fp)
    de5c:	1885c83a 	sub	r2,r3,r2
    de60:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    de64:	e0fff817 	ldw	r3,-32(fp)
    de68:	e0bff617 	ldw	r2,-40(fp)
    de6c:	1885883a 	add	r2,r3,r2
    de70:	10c1ffcc 	andi	r3,r2,2047
    de74:	e0bffc17 	ldw	r2,-16(fp)
    de78:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    de7c:	e0bffe17 	ldw	r2,-8(fp)
    de80:	00bfcf16 	blt	zero,r2,ddc0 <__alt_data_end+0xfffeddc0>
    de84:	00000106 	br	de8c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    de88:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    de8c:	e0fff517 	ldw	r3,-44(fp)
    de90:	e0bffd17 	ldw	r2,-12(fp)
    de94:	1880141e 	bne	r3,r2,dee8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    de98:	e0bfff17 	ldw	r2,-4(fp)
    de9c:	1090000c 	andi	r2,r2,16384
    dea0:	1000131e 	bne	r2,zero,def0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    dea4:	0001883a 	nop
    dea8:	e0bffc17 	ldw	r2,-16(fp)
    deac:	10c00a17 	ldw	r3,40(r2)
    deb0:	e0bff717 	ldw	r2,-36(fp)
    deb4:	1880051e 	bne	r3,r2,decc <altera_avalon_jtag_uart_read+0x138>
    deb8:	e0bffc17 	ldw	r2,-16(fp)
    debc:	10c00917 	ldw	r3,36(r2)
    dec0:	e0bffc17 	ldw	r2,-16(fp)
    dec4:	10800117 	ldw	r2,4(r2)
    dec8:	18bff736 	bltu	r3,r2,dea8 <__alt_data_end+0xfffedea8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    decc:	e0bffc17 	ldw	r2,-16(fp)
    ded0:	10c00a17 	ldw	r3,40(r2)
    ded4:	e0bff717 	ldw	r2,-36(fp)
    ded8:	18800726 	beq	r3,r2,def8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    dedc:	e0bffe17 	ldw	r2,-8(fp)
    dee0:	00bfb716 	blt	zero,r2,ddc0 <__alt_data_end+0xfffeddc0>
    dee4:	00000506 	br	defc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    dee8:	0001883a 	nop
    deec:	00000306 	br	defc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    def0:	0001883a 	nop
    def4:	00000106 	br	defc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    def8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    defc:	e0fff517 	ldw	r3,-44(fp)
    df00:	e0bffd17 	ldw	r2,-12(fp)
    df04:	18801826 	beq	r3,r2,df68 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    df08:	0005303a 	rdctl	r2,status
    df0c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    df10:	e0fffb17 	ldw	r3,-20(fp)
    df14:	00bfff84 	movi	r2,-2
    df18:	1884703a 	and	r2,r3,r2
    df1c:	1001703a 	wrctl	status,r2
  
  return context;
    df20:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    df24:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    df28:	e0bffc17 	ldw	r2,-16(fp)
    df2c:	10800817 	ldw	r2,32(r2)
    df30:	10c00054 	ori	r3,r2,1
    df34:	e0bffc17 	ldw	r2,-16(fp)
    df38:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    df3c:	e0bffc17 	ldw	r2,-16(fp)
    df40:	10800017 	ldw	r2,0(r2)
    df44:	10800104 	addi	r2,r2,4
    df48:	1007883a 	mov	r3,r2
    df4c:	e0bffc17 	ldw	r2,-16(fp)
    df50:	10800817 	ldw	r2,32(r2)
    df54:	18800035 	stwio	r2,0(r3)
    df58:	e0bffa17 	ldw	r2,-24(fp)
    df5c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    df60:	e0bff917 	ldw	r2,-28(fp)
    df64:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    df68:	e0fff517 	ldw	r3,-44(fp)
    df6c:	e0bffd17 	ldw	r2,-12(fp)
    df70:	18800426 	beq	r3,r2,df84 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    df74:	e0fff517 	ldw	r3,-44(fp)
    df78:	e0bffd17 	ldw	r2,-12(fp)
    df7c:	1885c83a 	sub	r2,r3,r2
    df80:	00000606 	br	df9c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    df84:	e0bfff17 	ldw	r2,-4(fp)
    df88:	1090000c 	andi	r2,r2,16384
    df8c:	10000226 	beq	r2,zero,df98 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    df90:	00bffd44 	movi	r2,-11
    df94:	00000106 	br	df9c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    df98:	00bffec4 	movi	r2,-5
}
    df9c:	e037883a 	mov	sp,fp
    dfa0:	dfc00117 	ldw	ra,4(sp)
    dfa4:	df000017 	ldw	fp,0(sp)
    dfa8:	dec00204 	addi	sp,sp,8
    dfac:	f800283a 	ret

0000dfb0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    dfb0:	defff304 	addi	sp,sp,-52
    dfb4:	dfc00c15 	stw	ra,48(sp)
    dfb8:	df000b15 	stw	fp,44(sp)
    dfbc:	df000b04 	addi	fp,sp,44
    dfc0:	e13ffc15 	stw	r4,-16(fp)
    dfc4:	e17ffd15 	stw	r5,-12(fp)
    dfc8:	e1bffe15 	stw	r6,-8(fp)
    dfcc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    dfd0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    dfd4:	e0bffd17 	ldw	r2,-12(fp)
    dfd8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    dfdc:	00003706 	br	e0bc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    dfe0:	e0bffc17 	ldw	r2,-16(fp)
    dfe4:	10800c17 	ldw	r2,48(r2)
    dfe8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    dfec:	e0bffc17 	ldw	r2,-16(fp)
    dff0:	10800d17 	ldw	r2,52(r2)
    dff4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    dff8:	e0fff917 	ldw	r3,-28(fp)
    dffc:	e0bff517 	ldw	r2,-44(fp)
    e000:	1880062e 	bgeu	r3,r2,e01c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e004:	e0fff517 	ldw	r3,-44(fp)
    e008:	e0bff917 	ldw	r2,-28(fp)
    e00c:	1885c83a 	sub	r2,r3,r2
    e010:	10bfffc4 	addi	r2,r2,-1
    e014:	e0bff615 	stw	r2,-40(fp)
    e018:	00000b06 	br	e048 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e01c:	e0bff517 	ldw	r2,-44(fp)
    e020:	10000526 	beq	r2,zero,e038 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e024:	00c20004 	movi	r3,2048
    e028:	e0bff917 	ldw	r2,-28(fp)
    e02c:	1885c83a 	sub	r2,r3,r2
    e030:	e0bff615 	stw	r2,-40(fp)
    e034:	00000406 	br	e048 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e038:	00c1ffc4 	movi	r3,2047
    e03c:	e0bff917 	ldw	r2,-28(fp)
    e040:	1885c83a 	sub	r2,r3,r2
    e044:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e048:	e0bff617 	ldw	r2,-40(fp)
    e04c:	10001e26 	beq	r2,zero,e0c8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e050:	e0fffe17 	ldw	r3,-8(fp)
    e054:	e0bff617 	ldw	r2,-40(fp)
    e058:	1880022e 	bgeu	r3,r2,e064 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e05c:	e0bffe17 	ldw	r2,-8(fp)
    e060:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e064:	e0bffc17 	ldw	r2,-16(fp)
    e068:	10c20e04 	addi	r3,r2,2104
    e06c:	e0bff917 	ldw	r2,-28(fp)
    e070:	1885883a 	add	r2,r3,r2
    e074:	e1bff617 	ldw	r6,-40(fp)
    e078:	e17ffd17 	ldw	r5,-12(fp)
    e07c:	1009883a 	mov	r4,r2
    e080:	0005b800 	call	5b80 <memcpy>
      ptr   += n;
    e084:	e0fffd17 	ldw	r3,-12(fp)
    e088:	e0bff617 	ldw	r2,-40(fp)
    e08c:	1885883a 	add	r2,r3,r2
    e090:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e094:	e0fffe17 	ldw	r3,-8(fp)
    e098:	e0bff617 	ldw	r2,-40(fp)
    e09c:	1885c83a 	sub	r2,r3,r2
    e0a0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e0a4:	e0fff917 	ldw	r3,-28(fp)
    e0a8:	e0bff617 	ldw	r2,-40(fp)
    e0ac:	1885883a 	add	r2,r3,r2
    e0b0:	10c1ffcc 	andi	r3,r2,2047
    e0b4:	e0bffc17 	ldw	r2,-16(fp)
    e0b8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e0bc:	e0bffe17 	ldw	r2,-8(fp)
    e0c0:	00bfc716 	blt	zero,r2,dfe0 <__alt_data_end+0xfffedfe0>
    e0c4:	00000106 	br	e0cc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    e0c8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e0cc:	0005303a 	rdctl	r2,status
    e0d0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e0d4:	e0fffb17 	ldw	r3,-20(fp)
    e0d8:	00bfff84 	movi	r2,-2
    e0dc:	1884703a 	and	r2,r3,r2
    e0e0:	1001703a 	wrctl	status,r2
  
  return context;
    e0e4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e0e8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e0ec:	e0bffc17 	ldw	r2,-16(fp)
    e0f0:	10800817 	ldw	r2,32(r2)
    e0f4:	10c00094 	ori	r3,r2,2
    e0f8:	e0bffc17 	ldw	r2,-16(fp)
    e0fc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e100:	e0bffc17 	ldw	r2,-16(fp)
    e104:	10800017 	ldw	r2,0(r2)
    e108:	10800104 	addi	r2,r2,4
    e10c:	1007883a 	mov	r3,r2
    e110:	e0bffc17 	ldw	r2,-16(fp)
    e114:	10800817 	ldw	r2,32(r2)
    e118:	18800035 	stwio	r2,0(r3)
    e11c:	e0bffa17 	ldw	r2,-24(fp)
    e120:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e124:	e0bff817 	ldw	r2,-32(fp)
    e128:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e12c:	e0bffe17 	ldw	r2,-8(fp)
    e130:	0080100e 	bge	zero,r2,e174 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e134:	e0bfff17 	ldw	r2,-4(fp)
    e138:	1090000c 	andi	r2,r2,16384
    e13c:	1000101e 	bne	r2,zero,e180 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e140:	0001883a 	nop
    e144:	e0bffc17 	ldw	r2,-16(fp)
    e148:	10c00d17 	ldw	r3,52(r2)
    e14c:	e0bff517 	ldw	r2,-44(fp)
    e150:	1880051e 	bne	r3,r2,e168 <altera_avalon_jtag_uart_write+0x1b8>
    e154:	e0bffc17 	ldw	r2,-16(fp)
    e158:	10c00917 	ldw	r3,36(r2)
    e15c:	e0bffc17 	ldw	r2,-16(fp)
    e160:	10800117 	ldw	r2,4(r2)
    e164:	18bff736 	bltu	r3,r2,e144 <__alt_data_end+0xfffee144>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e168:	e0bffc17 	ldw	r2,-16(fp)
    e16c:	10800917 	ldw	r2,36(r2)
    e170:	1000051e 	bne	r2,zero,e188 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e174:	e0bffe17 	ldw	r2,-8(fp)
    e178:	00bfd016 	blt	zero,r2,e0bc <__alt_data_end+0xfffee0bc>
    e17c:	00000306 	br	e18c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    e180:	0001883a 	nop
    e184:	00000106 	br	e18c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    e188:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e18c:	e0fffd17 	ldw	r3,-12(fp)
    e190:	e0bff717 	ldw	r2,-36(fp)
    e194:	18800426 	beq	r3,r2,e1a8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e198:	e0fffd17 	ldw	r3,-12(fp)
    e19c:	e0bff717 	ldw	r2,-36(fp)
    e1a0:	1885c83a 	sub	r2,r3,r2
    e1a4:	00000606 	br	e1c0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e1a8:	e0bfff17 	ldw	r2,-4(fp)
    e1ac:	1090000c 	andi	r2,r2,16384
    e1b0:	10000226 	beq	r2,zero,e1bc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e1b4:	00bffd44 	movi	r2,-11
    e1b8:	00000106 	br	e1c0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e1bc:	00bffec4 	movi	r2,-5
}
    e1c0:	e037883a 	mov	sp,fp
    e1c4:	dfc00117 	ldw	ra,4(sp)
    e1c8:	df000017 	ldw	fp,0(sp)
    e1cc:	dec00204 	addi	sp,sp,8
    e1d0:	f800283a 	ret

0000e1d4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e1d4:	defff504 	addi	sp,sp,-44
    e1d8:	df000a15 	stw	fp,40(sp)
    e1dc:	df000a04 	addi	fp,sp,40
    e1e0:	e13ffc15 	stw	r4,-16(fp)
    e1e4:	e17ffd15 	stw	r5,-12(fp)
    e1e8:	e1bffe15 	stw	r6,-8(fp)
    e1ec:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e1f0:	e03ff615 	stw	zero,-40(fp)
    e1f4:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
    e1f8:	10003c26 	beq	r2,zero,e2ec <alt_alarm_start+0x118>
  {
    if (alarm)
    e1fc:	e0bffc17 	ldw	r2,-16(fp)
    e200:	10003826 	beq	r2,zero,e2e4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    e204:	e0bffc17 	ldw	r2,-16(fp)
    e208:	e0fffe17 	ldw	r3,-8(fp)
    e20c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e210:	e0bffc17 	ldw	r2,-16(fp)
    e214:	e0ffff17 	ldw	r3,-4(fp)
    e218:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e21c:	0005303a 	rdctl	r2,status
    e220:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e224:	e0fff917 	ldw	r3,-28(fp)
    e228:	00bfff84 	movi	r2,-2
    e22c:	1884703a 	and	r2,r3,r2
    e230:	1001703a 	wrctl	status,r2
  
  return context;
    e234:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    e238:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e23c:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
    e240:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e244:	e0fffd17 	ldw	r3,-12(fp)
    e248:	e0bff617 	ldw	r2,-40(fp)
    e24c:	1885883a 	add	r2,r3,r2
    e250:	10c00044 	addi	r3,r2,1
    e254:	e0bffc17 	ldw	r2,-16(fp)
    e258:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e25c:	e0bffc17 	ldw	r2,-16(fp)
    e260:	10c00217 	ldw	r3,8(r2)
    e264:	e0bff617 	ldw	r2,-40(fp)
    e268:	1880042e 	bgeu	r3,r2,e27c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    e26c:	e0bffc17 	ldw	r2,-16(fp)
    e270:	00c00044 	movi	r3,1
    e274:	10c00405 	stb	r3,16(r2)
    e278:	00000206 	br	e284 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    e27c:	e0bffc17 	ldw	r2,-16(fp)
    e280:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e284:	e0bffc17 	ldw	r2,-16(fp)
    e288:	d0e00e04 	addi	r3,gp,-32712
    e28c:	e0fffa15 	stw	r3,-24(fp)
    e290:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e294:	e0bffb17 	ldw	r2,-20(fp)
    e298:	e0fffa17 	ldw	r3,-24(fp)
    e29c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e2a0:	e0bffa17 	ldw	r2,-24(fp)
    e2a4:	10c00017 	ldw	r3,0(r2)
    e2a8:	e0bffb17 	ldw	r2,-20(fp)
    e2ac:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e2b0:	e0bffa17 	ldw	r2,-24(fp)
    e2b4:	10800017 	ldw	r2,0(r2)
    e2b8:	e0fffb17 	ldw	r3,-20(fp)
    e2bc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e2c0:	e0bffa17 	ldw	r2,-24(fp)
    e2c4:	e0fffb17 	ldw	r3,-20(fp)
    e2c8:	10c00015 	stw	r3,0(r2)
    e2cc:	e0bff817 	ldw	r2,-32(fp)
    e2d0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e2d4:	e0bff717 	ldw	r2,-36(fp)
    e2d8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e2dc:	0005883a 	mov	r2,zero
    e2e0:	00000306 	br	e2f0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    e2e4:	00bffa84 	movi	r2,-22
    e2e8:	00000106 	br	e2f0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    e2ec:	00bfde84 	movi	r2,-134
  }
}
    e2f0:	e037883a 	mov	sp,fp
    e2f4:	df000017 	ldw	fp,0(sp)
    e2f8:	dec00104 	addi	sp,sp,4
    e2fc:	f800283a 	ret

0000e300 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e300:	defffe04 	addi	sp,sp,-8
    e304:	df000115 	stw	fp,4(sp)
    e308:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
    e30c:	e03fff15 	stw	zero,-4(fp)
    e310:	00000506 	br	e328 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
    e314:	e0bfff17 	ldw	r2,-4(fp)
    e318:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
    e31c:	e0bfff17 	ldw	r2,-4(fp)
    e320:	10800804 	addi	r2,r2,32
    e324:	e0bfff15 	stw	r2,-4(fp)
    e328:	e0bfff17 	ldw	r2,-4(fp)
    e32c:	10820030 	cmpltui	r2,r2,2048
    e330:	103ff81e 	bne	r2,zero,e314 <__alt_data_end+0xfffee314>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e334:	0001883a 	nop
    e338:	e037883a 	mov	sp,fp
    e33c:	df000017 	ldw	fp,0(sp)
    e340:	dec00104 	addi	sp,sp,4
    e344:	f800283a 	ret

0000e348 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e348:	defffe04 	addi	sp,sp,-8
    e34c:	dfc00115 	stw	ra,4(sp)
    e350:	df000015 	stw	fp,0(sp)
    e354:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e358:	d0a00b17 	ldw	r2,-32724(gp)
    e35c:	10000326 	beq	r2,zero,e36c <alt_get_errno+0x24>
    e360:	d0a00b17 	ldw	r2,-32724(gp)
    e364:	103ee83a 	callr	r2
    e368:	00000106 	br	e370 <alt_get_errno+0x28>
    e36c:	d0a6d104 	addi	r2,gp,-25788
}
    e370:	e037883a 	mov	sp,fp
    e374:	dfc00117 	ldw	ra,4(sp)
    e378:	df000017 	ldw	fp,0(sp)
    e37c:	dec00204 	addi	sp,sp,8
    e380:	f800283a 	ret

0000e384 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e384:	defffa04 	addi	sp,sp,-24
    e388:	dfc00515 	stw	ra,20(sp)
    e38c:	df000415 	stw	fp,16(sp)
    e390:	df000404 	addi	fp,sp,16
    e394:	e13ffe15 	stw	r4,-8(fp)
    e398:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e39c:	e0bffe17 	ldw	r2,-8(fp)
    e3a0:	10000326 	beq	r2,zero,e3b0 <alt_dev_llist_insert+0x2c>
    e3a4:	e0bffe17 	ldw	r2,-8(fp)
    e3a8:	10800217 	ldw	r2,8(r2)
    e3ac:	1000061e 	bne	r2,zero,e3c8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e3b0:	000e3480 	call	e348 <alt_get_errno>
    e3b4:	1007883a 	mov	r3,r2
    e3b8:	00800584 	movi	r2,22
    e3bc:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e3c0:	00bffa84 	movi	r2,-22
    e3c4:	00001306 	br	e414 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e3c8:	e0bffe17 	ldw	r2,-8(fp)
    e3cc:	e0ffff17 	ldw	r3,-4(fp)
    e3d0:	e0fffc15 	stw	r3,-16(fp)
    e3d4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e3d8:	e0bffd17 	ldw	r2,-12(fp)
    e3dc:	e0fffc17 	ldw	r3,-16(fp)
    e3e0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e3e4:	e0bffc17 	ldw	r2,-16(fp)
    e3e8:	10c00017 	ldw	r3,0(r2)
    e3ec:	e0bffd17 	ldw	r2,-12(fp)
    e3f0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e3f4:	e0bffc17 	ldw	r2,-16(fp)
    e3f8:	10800017 	ldw	r2,0(r2)
    e3fc:	e0fffd17 	ldw	r3,-12(fp)
    e400:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e404:	e0bffc17 	ldw	r2,-16(fp)
    e408:	e0fffd17 	ldw	r3,-12(fp)
    e40c:	10c00015 	stw	r3,0(r2)

  return 0;  
    e410:	0005883a 	mov	r2,zero
}
    e414:	e037883a 	mov	sp,fp
    e418:	dfc00117 	ldw	ra,4(sp)
    e41c:	df000017 	ldw	fp,0(sp)
    e420:	dec00204 	addi	sp,sp,8
    e424:	f800283a 	ret

0000e428 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e428:	defffd04 	addi	sp,sp,-12
    e42c:	dfc00215 	stw	ra,8(sp)
    e430:	df000115 	stw	fp,4(sp)
    e434:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e438:	00800074 	movhi	r2,1
    e43c:	10bd0404 	addi	r2,r2,-3056
    e440:	e0bfff15 	stw	r2,-4(fp)
    e444:	00000606 	br	e460 <_do_ctors+0x38>
        (*ctor) (); 
    e448:	e0bfff17 	ldw	r2,-4(fp)
    e44c:	10800017 	ldw	r2,0(r2)
    e450:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e454:	e0bfff17 	ldw	r2,-4(fp)
    e458:	10bfff04 	addi	r2,r2,-4
    e45c:	e0bfff15 	stw	r2,-4(fp)
    e460:	e0ffff17 	ldw	r3,-4(fp)
    e464:	00800074 	movhi	r2,1
    e468:	10bd0504 	addi	r2,r2,-3052
    e46c:	18bff62e 	bgeu	r3,r2,e448 <__alt_data_end+0xfffee448>
        (*ctor) (); 
}
    e470:	0001883a 	nop
    e474:	e037883a 	mov	sp,fp
    e478:	dfc00117 	ldw	ra,4(sp)
    e47c:	df000017 	ldw	fp,0(sp)
    e480:	dec00204 	addi	sp,sp,8
    e484:	f800283a 	ret

0000e488 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    e488:	defffd04 	addi	sp,sp,-12
    e48c:	dfc00215 	stw	ra,8(sp)
    e490:	df000115 	stw	fp,4(sp)
    e494:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e498:	00800074 	movhi	r2,1
    e49c:	10bd0404 	addi	r2,r2,-3056
    e4a0:	e0bfff15 	stw	r2,-4(fp)
    e4a4:	00000606 	br	e4c0 <_do_dtors+0x38>
        (*dtor) (); 
    e4a8:	e0bfff17 	ldw	r2,-4(fp)
    e4ac:	10800017 	ldw	r2,0(r2)
    e4b0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e4b4:	e0bfff17 	ldw	r2,-4(fp)
    e4b8:	10bfff04 	addi	r2,r2,-4
    e4bc:	e0bfff15 	stw	r2,-4(fp)
    e4c0:	e0ffff17 	ldw	r3,-4(fp)
    e4c4:	00800074 	movhi	r2,1
    e4c8:	10bd0504 	addi	r2,r2,-3052
    e4cc:	18bff62e 	bgeu	r3,r2,e4a8 <__alt_data_end+0xfffee4a8>
        (*dtor) (); 
}
    e4d0:	0001883a 	nop
    e4d4:	e037883a 	mov	sp,fp
    e4d8:	dfc00117 	ldw	ra,4(sp)
    e4dc:	df000017 	ldw	fp,0(sp)
    e4e0:	dec00204 	addi	sp,sp,8
    e4e4:	f800283a 	ret

0000e4e8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e4e8:	defffe04 	addi	sp,sp,-8
    e4ec:	dfc00115 	stw	ra,4(sp)
    e4f0:	df000015 	stw	fp,0(sp)
    e4f4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
    e4f8:	01440004 	movi	r5,4096
    e4fc:	0009883a 	mov	r4,zero
    e500:	000ef540 	call	ef54 <alt_icache_flush>
#endif
}
    e504:	0001883a 	nop
    e508:	e037883a 	mov	sp,fp
    e50c:	dfc00117 	ldw	ra,4(sp)
    e510:	df000017 	ldw	fp,0(sp)
    e514:	dec00204 	addi	sp,sp,8
    e518:	f800283a 	ret

0000e51c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e51c:	defff904 	addi	sp,sp,-28
    e520:	dfc00615 	stw	ra,24(sp)
    e524:	df000515 	stw	fp,20(sp)
    e528:	df000504 	addi	fp,sp,20
    e52c:	e13ffc15 	stw	r4,-16(fp)
    e530:	e17ffd15 	stw	r5,-12(fp)
    e534:	e1bffe15 	stw	r6,-8(fp)
    e538:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e53c:	e0800217 	ldw	r2,8(fp)
    e540:	d8800015 	stw	r2,0(sp)
    e544:	e1ffff17 	ldw	r7,-4(fp)
    e548:	e1bffe17 	ldw	r6,-8(fp)
    e54c:	e17ffd17 	ldw	r5,-12(fp)
    e550:	e13ffc17 	ldw	r4,-16(fp)
    e554:	000e6cc0 	call	e6cc <alt_iic_isr_register>
}  
    e558:	e037883a 	mov	sp,fp
    e55c:	dfc00117 	ldw	ra,4(sp)
    e560:	df000017 	ldw	fp,0(sp)
    e564:	dec00204 	addi	sp,sp,8
    e568:	f800283a 	ret

0000e56c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    e56c:	defff904 	addi	sp,sp,-28
    e570:	df000615 	stw	fp,24(sp)
    e574:	df000604 	addi	fp,sp,24
    e578:	e13ffe15 	stw	r4,-8(fp)
    e57c:	e17fff15 	stw	r5,-4(fp)
    e580:	e0bfff17 	ldw	r2,-4(fp)
    e584:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e588:	0005303a 	rdctl	r2,status
    e58c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e590:	e0fffb17 	ldw	r3,-20(fp)
    e594:	00bfff84 	movi	r2,-2
    e598:	1884703a 	and	r2,r3,r2
    e59c:	1001703a 	wrctl	status,r2
  
  return context;
    e5a0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e5a4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    e5a8:	00c00044 	movi	r3,1
    e5ac:	e0bffa17 	ldw	r2,-24(fp)
    e5b0:	1884983a 	sll	r2,r3,r2
    e5b4:	1007883a 	mov	r3,r2
    e5b8:	d0a6d517 	ldw	r2,-25772(gp)
    e5bc:	1884b03a 	or	r2,r3,r2
    e5c0:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e5c4:	d0a6d517 	ldw	r2,-25772(gp)
    e5c8:	100170fa 	wrctl	ienable,r2
    e5cc:	e0bffc17 	ldw	r2,-16(fp)
    e5d0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e5d4:	e0bffd17 	ldw	r2,-12(fp)
    e5d8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e5dc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    e5e0:	0001883a 	nop
}
    e5e4:	e037883a 	mov	sp,fp
    e5e8:	df000017 	ldw	fp,0(sp)
    e5ec:	dec00104 	addi	sp,sp,4
    e5f0:	f800283a 	ret

0000e5f4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    e5f4:	defff904 	addi	sp,sp,-28
    e5f8:	df000615 	stw	fp,24(sp)
    e5fc:	df000604 	addi	fp,sp,24
    e600:	e13ffe15 	stw	r4,-8(fp)
    e604:	e17fff15 	stw	r5,-4(fp)
    e608:	e0bfff17 	ldw	r2,-4(fp)
    e60c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e610:	0005303a 	rdctl	r2,status
    e614:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e618:	e0fffb17 	ldw	r3,-20(fp)
    e61c:	00bfff84 	movi	r2,-2
    e620:	1884703a 	and	r2,r3,r2
    e624:	1001703a 	wrctl	status,r2
  
  return context;
    e628:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e62c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    e630:	00c00044 	movi	r3,1
    e634:	e0bffa17 	ldw	r2,-24(fp)
    e638:	1884983a 	sll	r2,r3,r2
    e63c:	0084303a 	nor	r2,zero,r2
    e640:	1007883a 	mov	r3,r2
    e644:	d0a6d517 	ldw	r2,-25772(gp)
    e648:	1884703a 	and	r2,r3,r2
    e64c:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e650:	d0a6d517 	ldw	r2,-25772(gp)
    e654:	100170fa 	wrctl	ienable,r2
    e658:	e0bffc17 	ldw	r2,-16(fp)
    e65c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e660:	e0bffd17 	ldw	r2,-12(fp)
    e664:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e668:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    e66c:	0001883a 	nop
}
    e670:	e037883a 	mov	sp,fp
    e674:	df000017 	ldw	fp,0(sp)
    e678:	dec00104 	addi	sp,sp,4
    e67c:	f800283a 	ret

0000e680 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    e680:	defffc04 	addi	sp,sp,-16
    e684:	df000315 	stw	fp,12(sp)
    e688:	df000304 	addi	fp,sp,12
    e68c:	e13ffe15 	stw	r4,-8(fp)
    e690:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e694:	000530fa 	rdctl	r2,ienable
    e698:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    e69c:	00c00044 	movi	r3,1
    e6a0:	e0bfff17 	ldw	r2,-4(fp)
    e6a4:	1884983a 	sll	r2,r3,r2
    e6a8:	1007883a 	mov	r3,r2
    e6ac:	e0bffd17 	ldw	r2,-12(fp)
    e6b0:	1884703a 	and	r2,r3,r2
    e6b4:	1004c03a 	cmpne	r2,r2,zero
    e6b8:	10803fcc 	andi	r2,r2,255
}
    e6bc:	e037883a 	mov	sp,fp
    e6c0:	df000017 	ldw	fp,0(sp)
    e6c4:	dec00104 	addi	sp,sp,4
    e6c8:	f800283a 	ret

0000e6cc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e6cc:	defff504 	addi	sp,sp,-44
    e6d0:	dfc00a15 	stw	ra,40(sp)
    e6d4:	df000915 	stw	fp,36(sp)
    e6d8:	df000904 	addi	fp,sp,36
    e6dc:	e13ffc15 	stw	r4,-16(fp)
    e6e0:	e17ffd15 	stw	r5,-12(fp)
    e6e4:	e1bffe15 	stw	r6,-8(fp)
    e6e8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    e6ec:	00bffa84 	movi	r2,-22
    e6f0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    e6f4:	e0bffd17 	ldw	r2,-12(fp)
    e6f8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e6fc:	e0bff817 	ldw	r2,-32(fp)
    e700:	10800808 	cmpgei	r2,r2,32
    e704:	1000271e 	bne	r2,zero,e7a4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e708:	0005303a 	rdctl	r2,status
    e70c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e710:	e0fffb17 	ldw	r3,-20(fp)
    e714:	00bfff84 	movi	r2,-2
    e718:	1884703a 	and	r2,r3,r2
    e71c:	1001703a 	wrctl	status,r2
  
  return context;
    e720:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    e724:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    e728:	00800074 	movhi	r2,1
    e72c:	108b8504 	addi	r2,r2,11796
    e730:	e0fff817 	ldw	r3,-32(fp)
    e734:	180690fa 	slli	r3,r3,3
    e738:	10c5883a 	add	r2,r2,r3
    e73c:	e0fffe17 	ldw	r3,-8(fp)
    e740:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    e744:	00800074 	movhi	r2,1
    e748:	108b8504 	addi	r2,r2,11796
    e74c:	e0fff817 	ldw	r3,-32(fp)
    e750:	180690fa 	slli	r3,r3,3
    e754:	10c5883a 	add	r2,r2,r3
    e758:	10800104 	addi	r2,r2,4
    e75c:	e0ffff17 	ldw	r3,-4(fp)
    e760:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    e764:	e0bffe17 	ldw	r2,-8(fp)
    e768:	10000526 	beq	r2,zero,e780 <alt_iic_isr_register+0xb4>
    e76c:	e0bff817 	ldw	r2,-32(fp)
    e770:	100b883a 	mov	r5,r2
    e774:	e13ffc17 	ldw	r4,-16(fp)
    e778:	000e56c0 	call	e56c <alt_ic_irq_enable>
    e77c:	00000406 	br	e790 <alt_iic_isr_register+0xc4>
    e780:	e0bff817 	ldw	r2,-32(fp)
    e784:	100b883a 	mov	r5,r2
    e788:	e13ffc17 	ldw	r4,-16(fp)
    e78c:	000e5f40 	call	e5f4 <alt_ic_irq_disable>
    e790:	e0bff715 	stw	r2,-36(fp)
    e794:	e0bffa17 	ldw	r2,-24(fp)
    e798:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e79c:	e0bff917 	ldw	r2,-28(fp)
    e7a0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    e7a4:	e0bff717 	ldw	r2,-36(fp)
}
    e7a8:	e037883a 	mov	sp,fp
    e7ac:	dfc00117 	ldw	ra,4(sp)
    e7b0:	df000017 	ldw	fp,0(sp)
    e7b4:	dec00204 	addi	sp,sp,8
    e7b8:	f800283a 	ret

0000e7bc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e7bc:	defff904 	addi	sp,sp,-28
    e7c0:	dfc00615 	stw	ra,24(sp)
    e7c4:	df000515 	stw	fp,20(sp)
    e7c8:	df000504 	addi	fp,sp,20
    e7cc:	e13ffc15 	stw	r4,-16(fp)
    e7d0:	e17ffd15 	stw	r5,-12(fp)
    e7d4:	e1bffe15 	stw	r6,-8(fp)
    e7d8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
    e7dc:	e1bfff17 	ldw	r6,-4(fp)
    e7e0:	e17ffe17 	ldw	r5,-8(fp)
    e7e4:	e13ffd17 	ldw	r4,-12(fp)
    e7e8:	000e9fc0 	call	e9fc <open>
    e7ec:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
    e7f0:	e0bffb17 	ldw	r2,-20(fp)
    e7f4:	10001c16 	blt	r2,zero,e868 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
    e7f8:	00800074 	movhi	r2,1
    e7fc:	10802a04 	addi	r2,r2,168
    e800:	e0fffb17 	ldw	r3,-20(fp)
    e804:	18c00324 	muli	r3,r3,12
    e808:	10c5883a 	add	r2,r2,r3
    e80c:	10c00017 	ldw	r3,0(r2)
    e810:	e0bffc17 	ldw	r2,-16(fp)
    e814:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    e818:	00800074 	movhi	r2,1
    e81c:	10802a04 	addi	r2,r2,168
    e820:	e0fffb17 	ldw	r3,-20(fp)
    e824:	18c00324 	muli	r3,r3,12
    e828:	10c5883a 	add	r2,r2,r3
    e82c:	10800104 	addi	r2,r2,4
    e830:	10c00017 	ldw	r3,0(r2)
    e834:	e0bffc17 	ldw	r2,-16(fp)
    e838:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    e83c:	00800074 	movhi	r2,1
    e840:	10802a04 	addi	r2,r2,168
    e844:	e0fffb17 	ldw	r3,-20(fp)
    e848:	18c00324 	muli	r3,r3,12
    e84c:	10c5883a 	add	r2,r2,r3
    e850:	10800204 	addi	r2,r2,8
    e854:	10c00017 	ldw	r3,0(r2)
    e858:	e0bffc17 	ldw	r2,-16(fp)
    e85c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    e860:	e13ffb17 	ldw	r4,-20(fp)
    e864:	000d4700 	call	d470 <alt_release_fd>
  }
} 
    e868:	0001883a 	nop
    e86c:	e037883a 	mov	sp,fp
    e870:	dfc00117 	ldw	ra,4(sp)
    e874:	df000017 	ldw	fp,0(sp)
    e878:	dec00204 	addi	sp,sp,8
    e87c:	f800283a 	ret

0000e880 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    e880:	defffb04 	addi	sp,sp,-20
    e884:	dfc00415 	stw	ra,16(sp)
    e888:	df000315 	stw	fp,12(sp)
    e88c:	df000304 	addi	fp,sp,12
    e890:	e13ffd15 	stw	r4,-12(fp)
    e894:	e17ffe15 	stw	r5,-8(fp)
    e898:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    e89c:	01c07fc4 	movi	r7,511
    e8a0:	01800044 	movi	r6,1
    e8a4:	e17ffd17 	ldw	r5,-12(fp)
    e8a8:	01000074 	movhi	r4,1
    e8ac:	21002d04 	addi	r4,r4,180
    e8b0:	000e7bc0 	call	e7bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    e8b4:	01c07fc4 	movi	r7,511
    e8b8:	000d883a 	mov	r6,zero
    e8bc:	e17ffe17 	ldw	r5,-8(fp)
    e8c0:	01000074 	movhi	r4,1
    e8c4:	21002a04 	addi	r4,r4,168
    e8c8:	000e7bc0 	call	e7bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    e8cc:	01c07fc4 	movi	r7,511
    e8d0:	01800044 	movi	r6,1
    e8d4:	e17fff17 	ldw	r5,-4(fp)
    e8d8:	01000074 	movhi	r4,1
    e8dc:	21003004 	addi	r4,r4,192
    e8e0:	000e7bc0 	call	e7bc <alt_open_fd>
}  
    e8e4:	0001883a 	nop
    e8e8:	e037883a 	mov	sp,fp
    e8ec:	dfc00117 	ldw	ra,4(sp)
    e8f0:	df000017 	ldw	fp,0(sp)
    e8f4:	dec00204 	addi	sp,sp,8
    e8f8:	f800283a 	ret

0000e8fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e8fc:	defffe04 	addi	sp,sp,-8
    e900:	dfc00115 	stw	ra,4(sp)
    e904:	df000015 	stw	fp,0(sp)
    e908:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e90c:	d0a00b17 	ldw	r2,-32724(gp)
    e910:	10000326 	beq	r2,zero,e920 <alt_get_errno+0x24>
    e914:	d0a00b17 	ldw	r2,-32724(gp)
    e918:	103ee83a 	callr	r2
    e91c:	00000106 	br	e924 <alt_get_errno+0x28>
    e920:	d0a6d104 	addi	r2,gp,-25788
}
    e924:	e037883a 	mov	sp,fp
    e928:	dfc00117 	ldw	ra,4(sp)
    e92c:	df000017 	ldw	fp,0(sp)
    e930:	dec00204 	addi	sp,sp,8
    e934:	f800283a 	ret

0000e938 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    e938:	defffd04 	addi	sp,sp,-12
    e93c:	df000215 	stw	fp,8(sp)
    e940:	df000204 	addi	fp,sp,8
    e944:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    e948:	e0bfff17 	ldw	r2,-4(fp)
    e94c:	10800217 	ldw	r2,8(r2)
    e950:	10d00034 	orhi	r3,r2,16384
    e954:	e0bfff17 	ldw	r2,-4(fp)
    e958:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e95c:	e03ffe15 	stw	zero,-8(fp)
    e960:	00001d06 	br	e9d8 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e964:	00800074 	movhi	r2,1
    e968:	10802a04 	addi	r2,r2,168
    e96c:	e0fffe17 	ldw	r3,-8(fp)
    e970:	18c00324 	muli	r3,r3,12
    e974:	10c5883a 	add	r2,r2,r3
    e978:	10c00017 	ldw	r3,0(r2)
    e97c:	e0bfff17 	ldw	r2,-4(fp)
    e980:	10800017 	ldw	r2,0(r2)
    e984:	1880111e 	bne	r3,r2,e9cc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    e988:	00800074 	movhi	r2,1
    e98c:	10802a04 	addi	r2,r2,168
    e990:	e0fffe17 	ldw	r3,-8(fp)
    e994:	18c00324 	muli	r3,r3,12
    e998:	10c5883a 	add	r2,r2,r3
    e99c:	10800204 	addi	r2,r2,8
    e9a0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e9a4:	1000090e 	bge	r2,zero,e9cc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    e9a8:	e0bffe17 	ldw	r2,-8(fp)
    e9ac:	10c00324 	muli	r3,r2,12
    e9b0:	00800074 	movhi	r2,1
    e9b4:	10802a04 	addi	r2,r2,168
    e9b8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    e9bc:	e0bfff17 	ldw	r2,-4(fp)
    e9c0:	18800226 	beq	r3,r2,e9cc <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    e9c4:	00bffcc4 	movi	r2,-13
    e9c8:	00000806 	br	e9ec <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e9cc:	e0bffe17 	ldw	r2,-8(fp)
    e9d0:	10800044 	addi	r2,r2,1
    e9d4:	e0bffe15 	stw	r2,-8(fp)
    e9d8:	d0a00a17 	ldw	r2,-32728(gp)
    e9dc:	1007883a 	mov	r3,r2
    e9e0:	e0bffe17 	ldw	r2,-8(fp)
    e9e4:	18bfdf2e 	bgeu	r3,r2,e964 <__alt_data_end+0xfffee964>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    e9e8:	0005883a 	mov	r2,zero
}
    e9ec:	e037883a 	mov	sp,fp
    e9f0:	df000017 	ldw	fp,0(sp)
    e9f4:	dec00104 	addi	sp,sp,4
    e9f8:	f800283a 	ret

0000e9fc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    e9fc:	defff604 	addi	sp,sp,-40
    ea00:	dfc00915 	stw	ra,36(sp)
    ea04:	df000815 	stw	fp,32(sp)
    ea08:	df000804 	addi	fp,sp,32
    ea0c:	e13ffd15 	stw	r4,-12(fp)
    ea10:	e17ffe15 	stw	r5,-8(fp)
    ea14:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    ea18:	00bfffc4 	movi	r2,-1
    ea1c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    ea20:	00bffb44 	movi	r2,-19
    ea24:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    ea28:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    ea2c:	d1600804 	addi	r5,gp,-32736
    ea30:	e13ffd17 	ldw	r4,-12(fp)
    ea34:	000ed180 	call	ed18 <alt_find_dev>
    ea38:	e0bff815 	stw	r2,-32(fp)
    ea3c:	e0bff817 	ldw	r2,-32(fp)
    ea40:	1000051e 	bne	r2,zero,ea58 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    ea44:	e13ffd17 	ldw	r4,-12(fp)
    ea48:	000eda80 	call	eda8 <alt_find_file>
    ea4c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    ea50:	00800044 	movi	r2,1
    ea54:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    ea58:	e0bff817 	ldw	r2,-32(fp)
    ea5c:	10002926 	beq	r2,zero,eb04 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
    ea60:	e13ff817 	ldw	r4,-32(fp)
    ea64:	000eeb00 	call	eeb0 <alt_get_fd>
    ea68:	e0bff915 	stw	r2,-28(fp)
    ea6c:	e0bff917 	ldw	r2,-28(fp)
    ea70:	1000030e 	bge	r2,zero,ea80 <open+0x84>
    {
      status = index;
    ea74:	e0bff917 	ldw	r2,-28(fp)
    ea78:	e0bffa15 	stw	r2,-24(fp)
    ea7c:	00002306 	br	eb0c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
    ea80:	e0bff917 	ldw	r2,-28(fp)
    ea84:	10c00324 	muli	r3,r2,12
    ea88:	00800074 	movhi	r2,1
    ea8c:	10802a04 	addi	r2,r2,168
    ea90:	1885883a 	add	r2,r3,r2
    ea94:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    ea98:	e0fffe17 	ldw	r3,-8(fp)
    ea9c:	00900034 	movhi	r2,16384
    eaa0:	10bfffc4 	addi	r2,r2,-1
    eaa4:	1886703a 	and	r3,r3,r2
    eaa8:	e0bffc17 	ldw	r2,-16(fp)
    eaac:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    eab0:	e0bffb17 	ldw	r2,-20(fp)
    eab4:	1000051e 	bne	r2,zero,eacc <open+0xd0>
    eab8:	e13ffc17 	ldw	r4,-16(fp)
    eabc:	000e9380 	call	e938 <alt_file_locked>
    eac0:	e0bffa15 	stw	r2,-24(fp)
    eac4:	e0bffa17 	ldw	r2,-24(fp)
    eac8:	10001016 	blt	r2,zero,eb0c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    eacc:	e0bff817 	ldw	r2,-32(fp)
    ead0:	10800317 	ldw	r2,12(r2)
    ead4:	10000826 	beq	r2,zero,eaf8 <open+0xfc>
    ead8:	e0bff817 	ldw	r2,-32(fp)
    eadc:	10800317 	ldw	r2,12(r2)
    eae0:	e1ffff17 	ldw	r7,-4(fp)
    eae4:	e1bffe17 	ldw	r6,-8(fp)
    eae8:	e17ffd17 	ldw	r5,-12(fp)
    eaec:	e13ffc17 	ldw	r4,-16(fp)
    eaf0:	103ee83a 	callr	r2
    eaf4:	00000106 	br	eafc <open+0x100>
    eaf8:	0005883a 	mov	r2,zero
    eafc:	e0bffa15 	stw	r2,-24(fp)
    eb00:	00000206 	br	eb0c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
    eb04:	00bffb44 	movi	r2,-19
    eb08:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    eb0c:	e0bffa17 	ldw	r2,-24(fp)
    eb10:	1000090e 	bge	r2,zero,eb38 <open+0x13c>
  {
    alt_release_fd (index);  
    eb14:	e13ff917 	ldw	r4,-28(fp)
    eb18:	000d4700 	call	d470 <alt_release_fd>
    ALT_ERRNO = -status;
    eb1c:	000e8fc0 	call	e8fc <alt_get_errno>
    eb20:	1007883a 	mov	r3,r2
    eb24:	e0bffa17 	ldw	r2,-24(fp)
    eb28:	0085c83a 	sub	r2,zero,r2
    eb2c:	18800015 	stw	r2,0(r3)
    return -1;
    eb30:	00bfffc4 	movi	r2,-1
    eb34:	00000106 	br	eb3c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
    eb38:	e0bff917 	ldw	r2,-28(fp)
}
    eb3c:	e037883a 	mov	sp,fp
    eb40:	dfc00117 	ldw	ra,4(sp)
    eb44:	df000017 	ldw	fp,0(sp)
    eb48:	dec00204 	addi	sp,sp,8
    eb4c:	f800283a 	ret

0000eb50 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    eb50:	defffa04 	addi	sp,sp,-24
    eb54:	df000515 	stw	fp,20(sp)
    eb58:	df000504 	addi	fp,sp,20
    eb5c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eb60:	0005303a 	rdctl	r2,status
    eb64:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb68:	e0fffc17 	ldw	r3,-16(fp)
    eb6c:	00bfff84 	movi	r2,-2
    eb70:	1884703a 	and	r2,r3,r2
    eb74:	1001703a 	wrctl	status,r2
  
  return context;
    eb78:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    eb7c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    eb80:	e0bfff17 	ldw	r2,-4(fp)
    eb84:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    eb88:	e0bffd17 	ldw	r2,-12(fp)
    eb8c:	10800017 	ldw	r2,0(r2)
    eb90:	e0fffd17 	ldw	r3,-12(fp)
    eb94:	18c00117 	ldw	r3,4(r3)
    eb98:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    eb9c:	e0bffd17 	ldw	r2,-12(fp)
    eba0:	10800117 	ldw	r2,4(r2)
    eba4:	e0fffd17 	ldw	r3,-12(fp)
    eba8:	18c00017 	ldw	r3,0(r3)
    ebac:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    ebb0:	e0bffd17 	ldw	r2,-12(fp)
    ebb4:	e0fffd17 	ldw	r3,-12(fp)
    ebb8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    ebbc:	e0bffd17 	ldw	r2,-12(fp)
    ebc0:	e0fffd17 	ldw	r3,-12(fp)
    ebc4:	10c00015 	stw	r3,0(r2)
    ebc8:	e0bffb17 	ldw	r2,-20(fp)
    ebcc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ebd0:	e0bffe17 	ldw	r2,-8(fp)
    ebd4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    ebd8:	0001883a 	nop
    ebdc:	e037883a 	mov	sp,fp
    ebe0:	df000017 	ldw	fp,0(sp)
    ebe4:	dec00104 	addi	sp,sp,4
    ebe8:	f800283a 	ret

0000ebec <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    ebec:	defffb04 	addi	sp,sp,-20
    ebf0:	dfc00415 	stw	ra,16(sp)
    ebf4:	df000315 	stw	fp,12(sp)
    ebf8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    ebfc:	d0a00e17 	ldw	r2,-32712(gp)
    ec00:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    ec04:	d0a6d717 	ldw	r2,-25764(gp)
    ec08:	10800044 	addi	r2,r2,1
    ec0c:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ec10:	00002e06 	br	eccc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    ec14:	e0bffd17 	ldw	r2,-12(fp)
    ec18:	10800017 	ldw	r2,0(r2)
    ec1c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    ec20:	e0bffd17 	ldw	r2,-12(fp)
    ec24:	10800403 	ldbu	r2,16(r2)
    ec28:	10803fcc 	andi	r2,r2,255
    ec2c:	10000426 	beq	r2,zero,ec40 <alt_tick+0x54>
    ec30:	d0a6d717 	ldw	r2,-25764(gp)
    ec34:	1000021e 	bne	r2,zero,ec40 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    ec38:	e0bffd17 	ldw	r2,-12(fp)
    ec3c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    ec40:	e0bffd17 	ldw	r2,-12(fp)
    ec44:	10800217 	ldw	r2,8(r2)
    ec48:	d0e6d717 	ldw	r3,-25764(gp)
    ec4c:	18801d36 	bltu	r3,r2,ecc4 <alt_tick+0xd8>
    ec50:	e0bffd17 	ldw	r2,-12(fp)
    ec54:	10800403 	ldbu	r2,16(r2)
    ec58:	10803fcc 	andi	r2,r2,255
    ec5c:	1000191e 	bne	r2,zero,ecc4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    ec60:	e0bffd17 	ldw	r2,-12(fp)
    ec64:	10800317 	ldw	r2,12(r2)
    ec68:	e0fffd17 	ldw	r3,-12(fp)
    ec6c:	18c00517 	ldw	r3,20(r3)
    ec70:	1809883a 	mov	r4,r3
    ec74:	103ee83a 	callr	r2
    ec78:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    ec7c:	e0bfff17 	ldw	r2,-4(fp)
    ec80:	1000031e 	bne	r2,zero,ec90 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    ec84:	e13ffd17 	ldw	r4,-12(fp)
    ec88:	000eb500 	call	eb50 <alt_alarm_stop>
    ec8c:	00000d06 	br	ecc4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    ec90:	e0bffd17 	ldw	r2,-12(fp)
    ec94:	10c00217 	ldw	r3,8(r2)
    ec98:	e0bfff17 	ldw	r2,-4(fp)
    ec9c:	1887883a 	add	r3,r3,r2
    eca0:	e0bffd17 	ldw	r2,-12(fp)
    eca4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    eca8:	e0bffd17 	ldw	r2,-12(fp)
    ecac:	10c00217 	ldw	r3,8(r2)
    ecb0:	d0a6d717 	ldw	r2,-25764(gp)
    ecb4:	1880032e 	bgeu	r3,r2,ecc4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    ecb8:	e0bffd17 	ldw	r2,-12(fp)
    ecbc:	00c00044 	movi	r3,1
    ecc0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    ecc4:	e0bffe17 	ldw	r2,-8(fp)
    ecc8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    eccc:	e0fffd17 	ldw	r3,-12(fp)
    ecd0:	d0a00e04 	addi	r2,gp,-32712
    ecd4:	18bfcf1e 	bne	r3,r2,ec14 <__alt_data_end+0xfffeec14>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    ecd8:	0001883a 	nop
}
    ecdc:	0001883a 	nop
    ece0:	e037883a 	mov	sp,fp
    ece4:	dfc00117 	ldw	ra,4(sp)
    ece8:	df000017 	ldw	fp,0(sp)
    ecec:	dec00204 	addi	sp,sp,8
    ecf0:	f800283a 	ret

0000ecf4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    ecf4:	deffff04 	addi	sp,sp,-4
    ecf8:	df000015 	stw	fp,0(sp)
    ecfc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    ed00:	000170fa 	wrctl	ienable,zero
}
    ed04:	0001883a 	nop
    ed08:	e037883a 	mov	sp,fp
    ed0c:	df000017 	ldw	fp,0(sp)
    ed10:	dec00104 	addi	sp,sp,4
    ed14:	f800283a 	ret

0000ed18 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    ed18:	defffa04 	addi	sp,sp,-24
    ed1c:	dfc00515 	stw	ra,20(sp)
    ed20:	df000415 	stw	fp,16(sp)
    ed24:	df000404 	addi	fp,sp,16
    ed28:	e13ffe15 	stw	r4,-8(fp)
    ed2c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    ed30:	e0bfff17 	ldw	r2,-4(fp)
    ed34:	10800017 	ldw	r2,0(r2)
    ed38:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    ed3c:	e13ffe17 	ldw	r4,-8(fp)
    ed40:	00070cc0 	call	70cc <strlen>
    ed44:	10800044 	addi	r2,r2,1
    ed48:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    ed4c:	00000d06 	br	ed84 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    ed50:	e0bffc17 	ldw	r2,-16(fp)
    ed54:	10800217 	ldw	r2,8(r2)
    ed58:	e0fffd17 	ldw	r3,-12(fp)
    ed5c:	180d883a 	mov	r6,r3
    ed60:	e17ffe17 	ldw	r5,-8(fp)
    ed64:	1009883a 	mov	r4,r2
    ed68:	000f0cc0 	call	f0cc <memcmp>
    ed6c:	1000021e 	bne	r2,zero,ed78 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    ed70:	e0bffc17 	ldw	r2,-16(fp)
    ed74:	00000706 	br	ed94 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    ed78:	e0bffc17 	ldw	r2,-16(fp)
    ed7c:	10800017 	ldw	r2,0(r2)
    ed80:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    ed84:	e0fffc17 	ldw	r3,-16(fp)
    ed88:	e0bfff17 	ldw	r2,-4(fp)
    ed8c:	18bff01e 	bne	r3,r2,ed50 <__alt_data_end+0xfffeed50>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    ed90:	0005883a 	mov	r2,zero
}
    ed94:	e037883a 	mov	sp,fp
    ed98:	dfc00117 	ldw	ra,4(sp)
    ed9c:	df000017 	ldw	fp,0(sp)
    eda0:	dec00204 	addi	sp,sp,8
    eda4:	f800283a 	ret

0000eda8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    eda8:	defffb04 	addi	sp,sp,-20
    edac:	dfc00415 	stw	ra,16(sp)
    edb0:	df000315 	stw	fp,12(sp)
    edb4:	df000304 	addi	fp,sp,12
    edb8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    edbc:	d0a00617 	ldw	r2,-32744(gp)
    edc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    edc4:	00003106 	br	ee8c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    edc8:	e0bffd17 	ldw	r2,-12(fp)
    edcc:	10800217 	ldw	r2,8(r2)
    edd0:	1009883a 	mov	r4,r2
    edd4:	00070cc0 	call	70cc <strlen>
    edd8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    eddc:	e0bffd17 	ldw	r2,-12(fp)
    ede0:	10c00217 	ldw	r3,8(r2)
    ede4:	e0bffe17 	ldw	r2,-8(fp)
    ede8:	10bfffc4 	addi	r2,r2,-1
    edec:	1885883a 	add	r2,r3,r2
    edf0:	10800003 	ldbu	r2,0(r2)
    edf4:	10803fcc 	andi	r2,r2,255
    edf8:	1080201c 	xori	r2,r2,128
    edfc:	10bfe004 	addi	r2,r2,-128
    ee00:	10800bd8 	cmpnei	r2,r2,47
    ee04:	1000031e 	bne	r2,zero,ee14 <alt_find_file+0x6c>
    {
      len -= 1;
    ee08:	e0bffe17 	ldw	r2,-8(fp)
    ee0c:	10bfffc4 	addi	r2,r2,-1
    ee10:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    ee14:	e0bffe17 	ldw	r2,-8(fp)
    ee18:	e0ffff17 	ldw	r3,-4(fp)
    ee1c:	1885883a 	add	r2,r3,r2
    ee20:	10800003 	ldbu	r2,0(r2)
    ee24:	10803fcc 	andi	r2,r2,255
    ee28:	1080201c 	xori	r2,r2,128
    ee2c:	10bfe004 	addi	r2,r2,-128
    ee30:	10800be0 	cmpeqi	r2,r2,47
    ee34:	1000081e 	bne	r2,zero,ee58 <alt_find_file+0xb0>
    ee38:	e0bffe17 	ldw	r2,-8(fp)
    ee3c:	e0ffff17 	ldw	r3,-4(fp)
    ee40:	1885883a 	add	r2,r3,r2
    ee44:	10800003 	ldbu	r2,0(r2)
    ee48:	10803fcc 	andi	r2,r2,255
    ee4c:	1080201c 	xori	r2,r2,128
    ee50:	10bfe004 	addi	r2,r2,-128
    ee54:	10000a1e 	bne	r2,zero,ee80 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    ee58:	e0bffd17 	ldw	r2,-12(fp)
    ee5c:	10800217 	ldw	r2,8(r2)
    ee60:	e0fffe17 	ldw	r3,-8(fp)
    ee64:	180d883a 	mov	r6,r3
    ee68:	e17fff17 	ldw	r5,-4(fp)
    ee6c:	1009883a 	mov	r4,r2
    ee70:	000f0cc0 	call	f0cc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    ee74:	1000021e 	bne	r2,zero,ee80 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    ee78:	e0bffd17 	ldw	r2,-12(fp)
    ee7c:	00000706 	br	ee9c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    ee80:	e0bffd17 	ldw	r2,-12(fp)
    ee84:	10800017 	ldw	r2,0(r2)
    ee88:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    ee8c:	e0fffd17 	ldw	r3,-12(fp)
    ee90:	d0a00604 	addi	r2,gp,-32744
    ee94:	18bfcc1e 	bne	r3,r2,edc8 <__alt_data_end+0xfffeedc8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    ee98:	0005883a 	mov	r2,zero
}
    ee9c:	e037883a 	mov	sp,fp
    eea0:	dfc00117 	ldw	ra,4(sp)
    eea4:	df000017 	ldw	fp,0(sp)
    eea8:	dec00204 	addi	sp,sp,8
    eeac:	f800283a 	ret

0000eeb0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    eeb0:	defffc04 	addi	sp,sp,-16
    eeb4:	df000315 	stw	fp,12(sp)
    eeb8:	df000304 	addi	fp,sp,12
    eebc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
    eec0:	00bffa04 	movi	r2,-24
    eec4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    eec8:	e03ffd15 	stw	zero,-12(fp)
    eecc:	00001906 	br	ef34 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
    eed0:	00800074 	movhi	r2,1
    eed4:	10802a04 	addi	r2,r2,168
    eed8:	e0fffd17 	ldw	r3,-12(fp)
    eedc:	18c00324 	muli	r3,r3,12
    eee0:	10c5883a 	add	r2,r2,r3
    eee4:	10800017 	ldw	r2,0(r2)
    eee8:	10000f1e 	bne	r2,zero,ef28 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
    eeec:	00800074 	movhi	r2,1
    eef0:	10802a04 	addi	r2,r2,168
    eef4:	e0fffd17 	ldw	r3,-12(fp)
    eef8:	18c00324 	muli	r3,r3,12
    eefc:	10c5883a 	add	r2,r2,r3
    ef00:	e0ffff17 	ldw	r3,-4(fp)
    ef04:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    ef08:	d0e00a17 	ldw	r3,-32728(gp)
    ef0c:	e0bffd17 	ldw	r2,-12(fp)
    ef10:	1880020e 	bge	r3,r2,ef1c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
    ef14:	e0bffd17 	ldw	r2,-12(fp)
    ef18:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
    ef1c:	e0bffd17 	ldw	r2,-12(fp)
    ef20:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
    ef24:	00000606 	br	ef40 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ef28:	e0bffd17 	ldw	r2,-12(fp)
    ef2c:	10800044 	addi	r2,r2,1
    ef30:	e0bffd15 	stw	r2,-12(fp)
    ef34:	e0bffd17 	ldw	r2,-12(fp)
    ef38:	10800810 	cmplti	r2,r2,32
    ef3c:	103fe41e 	bne	r2,zero,eed0 <__alt_data_end+0xfffeeed0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    ef40:	e0bffe17 	ldw	r2,-8(fp)
}
    ef44:	e037883a 	mov	sp,fp
    ef48:	df000017 	ldw	fp,0(sp)
    ef4c:	dec00104 	addi	sp,sp,4
    ef50:	f800283a 	ret

0000ef54 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
    ef54:	defffb04 	addi	sp,sp,-20
    ef58:	df000415 	stw	fp,16(sp)
    ef5c:	df000404 	addi	fp,sp,16
    ef60:	e13ffe15 	stw	r4,-8(fp)
    ef64:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
    ef68:	e0bfff17 	ldw	r2,-4(fp)
    ef6c:	10840070 	cmpltui	r2,r2,4097
    ef70:	1000021e 	bne	r2,zero,ef7c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
    ef74:	00840004 	movi	r2,4096
    ef78:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
    ef7c:	e0fffe17 	ldw	r3,-8(fp)
    ef80:	e0bfff17 	ldw	r2,-4(fp)
    ef84:	1885883a 	add	r2,r3,r2
    ef88:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
    ef8c:	e0bffe17 	ldw	r2,-8(fp)
    ef90:	e0bffc15 	stw	r2,-16(fp)
    ef94:	00000506 	br	efac <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
    ef98:	e0bffc17 	ldw	r2,-16(fp)
    ef9c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
    efa0:	e0bffc17 	ldw	r2,-16(fp)
    efa4:	10800804 	addi	r2,r2,32
    efa8:	e0bffc15 	stw	r2,-16(fp)
    efac:	e0fffc17 	ldw	r3,-16(fp)
    efb0:	e0bffd17 	ldw	r2,-12(fp)
    efb4:	18bff836 	bltu	r3,r2,ef98 <__alt_data_end+0xfffeef98>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
    efb8:	e0bffe17 	ldw	r2,-8(fp)
    efbc:	108007cc 	andi	r2,r2,31
    efc0:	10000226 	beq	r2,zero,efcc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
    efc4:	e0bffc17 	ldw	r2,-16(fp)
    efc8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
    efcc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
    efd0:	0001883a 	nop
    efd4:	e037883a 	mov	sp,fp
    efd8:	df000017 	ldw	fp,0(sp)
    efdc:	dec00104 	addi	sp,sp,4
    efe0:	f800283a 	ret

0000efe4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    efe4:	defffe04 	addi	sp,sp,-8
    efe8:	df000115 	stw	fp,4(sp)
    efec:	df000104 	addi	fp,sp,4
    eff0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    eff4:	e0bfff17 	ldw	r2,-4(fp)
    eff8:	10bffe84 	addi	r2,r2,-6
    effc:	10c00428 	cmpgeui	r3,r2,16
    f000:	18001a1e 	bne	r3,zero,f06c <alt_exception_cause_generated_bad_addr+0x88>
    f004:	100690ba 	slli	r3,r2,2
    f008:	00800074 	movhi	r2,1
    f00c:	10bc0704 	addi	r2,r2,-4068
    f010:	1885883a 	add	r2,r3,r2
    f014:	10800017 	ldw	r2,0(r2)
    f018:	1000683a 	jmp	r2
    f01c:	0000f05c 	xori	zero,zero,961
    f020:	0000f05c 	xori	zero,zero,961
    f024:	0000f06c 	andhi	zero,zero,961
    f028:	0000f06c 	andhi	zero,zero,961
    f02c:	0000f06c 	andhi	zero,zero,961
    f030:	0000f05c 	xori	zero,zero,961
    f034:	0000f064 	muli	zero,zero,961
    f038:	0000f06c 	andhi	zero,zero,961
    f03c:	0000f05c 	xori	zero,zero,961
    f040:	0000f05c 	xori	zero,zero,961
    f044:	0000f06c 	andhi	zero,zero,961
    f048:	0000f05c 	xori	zero,zero,961
    f04c:	0000f064 	muli	zero,zero,961
    f050:	0000f06c 	andhi	zero,zero,961
    f054:	0000f06c 	andhi	zero,zero,961
    f058:	0000f05c 	xori	zero,zero,961
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f05c:	00800044 	movi	r2,1
    f060:	00000306 	br	f070 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f064:	0005883a 	mov	r2,zero
    f068:	00000106 	br	f070 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    f06c:	0005883a 	mov	r2,zero
  }
}
    f070:	e037883a 	mov	sp,fp
    f074:	df000017 	ldw	fp,0(sp)
    f078:	dec00104 	addi	sp,sp,4
    f07c:	f800283a 	ret

0000f080 <atexit>:
    f080:	200b883a 	mov	r5,r4
    f084:	000f883a 	mov	r7,zero
    f088:	000d883a 	mov	r6,zero
    f08c:	0009883a 	mov	r4,zero
    f090:	000f1481 	jmpi	f148 <__register_exitproc>

0000f094 <exit>:
    f094:	defffe04 	addi	sp,sp,-8
    f098:	000b883a 	mov	r5,zero
    f09c:	dc000015 	stw	r16,0(sp)
    f0a0:	dfc00115 	stw	ra,4(sp)
    f0a4:	2021883a 	mov	r16,r4
    f0a8:	000f2600 	call	f260 <__call_exitprocs>
    f0ac:	00800074 	movhi	r2,1
    f0b0:	1084a204 	addi	r2,r2,4744
    f0b4:	11000017 	ldw	r4,0(r2)
    f0b8:	20800f17 	ldw	r2,60(r4)
    f0bc:	10000126 	beq	r2,zero,f0c4 <exit+0x30>
    f0c0:	103ee83a 	callr	r2
    f0c4:	8009883a 	mov	r4,r16
    f0c8:	000f3e00 	call	f3e0 <_exit>

0000f0cc <memcmp>:
    f0cc:	01c000c4 	movi	r7,3
    f0d0:	3980192e 	bgeu	r7,r6,f138 <memcmp+0x6c>
    f0d4:	2144b03a 	or	r2,r4,r5
    f0d8:	11c4703a 	and	r2,r2,r7
    f0dc:	10000f26 	beq	r2,zero,f11c <memcmp+0x50>
    f0e0:	20800003 	ldbu	r2,0(r4)
    f0e4:	28c00003 	ldbu	r3,0(r5)
    f0e8:	10c0151e 	bne	r2,r3,f140 <memcmp+0x74>
    f0ec:	31bfff84 	addi	r6,r6,-2
    f0f0:	01ffffc4 	movi	r7,-1
    f0f4:	00000406 	br	f108 <memcmp+0x3c>
    f0f8:	20800003 	ldbu	r2,0(r4)
    f0fc:	28c00003 	ldbu	r3,0(r5)
    f100:	31bfffc4 	addi	r6,r6,-1
    f104:	10c00e1e 	bne	r2,r3,f140 <memcmp+0x74>
    f108:	21000044 	addi	r4,r4,1
    f10c:	29400044 	addi	r5,r5,1
    f110:	31fff91e 	bne	r6,r7,f0f8 <__alt_data_end+0xfffef0f8>
    f114:	0005883a 	mov	r2,zero
    f118:	f800283a 	ret
    f11c:	20c00017 	ldw	r3,0(r4)
    f120:	28800017 	ldw	r2,0(r5)
    f124:	18bfee1e 	bne	r3,r2,f0e0 <__alt_data_end+0xfffef0e0>
    f128:	31bfff04 	addi	r6,r6,-4
    f12c:	21000104 	addi	r4,r4,4
    f130:	29400104 	addi	r5,r5,4
    f134:	39bff936 	bltu	r7,r6,f11c <__alt_data_end+0xfffef11c>
    f138:	303fe91e 	bne	r6,zero,f0e0 <__alt_data_end+0xfffef0e0>
    f13c:	003ff506 	br	f114 <__alt_data_end+0xfffef114>
    f140:	10c5c83a 	sub	r2,r2,r3
    f144:	f800283a 	ret

0000f148 <__register_exitproc>:
    f148:	defffa04 	addi	sp,sp,-24
    f14c:	dc000315 	stw	r16,12(sp)
    f150:	04000074 	movhi	r16,1
    f154:	8404a204 	addi	r16,r16,4744
    f158:	80c00017 	ldw	r3,0(r16)
    f15c:	dc400415 	stw	r17,16(sp)
    f160:	dfc00515 	stw	ra,20(sp)
    f164:	18805217 	ldw	r2,328(r3)
    f168:	2023883a 	mov	r17,r4
    f16c:	10003726 	beq	r2,zero,f24c <__register_exitproc+0x104>
    f170:	10c00117 	ldw	r3,4(r2)
    f174:	010007c4 	movi	r4,31
    f178:	20c00e16 	blt	r4,r3,f1b4 <__register_exitproc+0x6c>
    f17c:	1a000044 	addi	r8,r3,1
    f180:	8800221e 	bne	r17,zero,f20c <__register_exitproc+0xc4>
    f184:	18c00084 	addi	r3,r3,2
    f188:	18c7883a 	add	r3,r3,r3
    f18c:	18c7883a 	add	r3,r3,r3
    f190:	12000115 	stw	r8,4(r2)
    f194:	10c7883a 	add	r3,r2,r3
    f198:	19400015 	stw	r5,0(r3)
    f19c:	0005883a 	mov	r2,zero
    f1a0:	dfc00517 	ldw	ra,20(sp)
    f1a4:	dc400417 	ldw	r17,16(sp)
    f1a8:	dc000317 	ldw	r16,12(sp)
    f1ac:	dec00604 	addi	sp,sp,24
    f1b0:	f800283a 	ret
    f1b4:	00800034 	movhi	r2,0
    f1b8:	10800004 	addi	r2,r2,0
    f1bc:	10002626 	beq	r2,zero,f258 <__register_exitproc+0x110>
    f1c0:	01006404 	movi	r4,400
    f1c4:	d9400015 	stw	r5,0(sp)
    f1c8:	d9800115 	stw	r6,4(sp)
    f1cc:	d9c00215 	stw	r7,8(sp)
    f1d0:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f1d4:	d9400017 	ldw	r5,0(sp)
    f1d8:	d9800117 	ldw	r6,4(sp)
    f1dc:	d9c00217 	ldw	r7,8(sp)
    f1e0:	10001d26 	beq	r2,zero,f258 <__register_exitproc+0x110>
    f1e4:	81000017 	ldw	r4,0(r16)
    f1e8:	10000115 	stw	zero,4(r2)
    f1ec:	02000044 	movi	r8,1
    f1f0:	22405217 	ldw	r9,328(r4)
    f1f4:	0007883a 	mov	r3,zero
    f1f8:	12400015 	stw	r9,0(r2)
    f1fc:	20805215 	stw	r2,328(r4)
    f200:	10006215 	stw	zero,392(r2)
    f204:	10006315 	stw	zero,396(r2)
    f208:	883fde26 	beq	r17,zero,f184 <__alt_data_end+0xfffef184>
    f20c:	18c9883a 	add	r4,r3,r3
    f210:	2109883a 	add	r4,r4,r4
    f214:	1109883a 	add	r4,r2,r4
    f218:	21802215 	stw	r6,136(r4)
    f21c:	01800044 	movi	r6,1
    f220:	12406217 	ldw	r9,392(r2)
    f224:	30cc983a 	sll	r6,r6,r3
    f228:	4992b03a 	or	r9,r9,r6
    f22c:	12406215 	stw	r9,392(r2)
    f230:	21c04215 	stw	r7,264(r4)
    f234:	01000084 	movi	r4,2
    f238:	893fd21e 	bne	r17,r4,f184 <__alt_data_end+0xfffef184>
    f23c:	11006317 	ldw	r4,396(r2)
    f240:	218cb03a 	or	r6,r4,r6
    f244:	11806315 	stw	r6,396(r2)
    f248:	003fce06 	br	f184 <__alt_data_end+0xfffef184>
    f24c:	18805304 	addi	r2,r3,332
    f250:	18805215 	stw	r2,328(r3)
    f254:	003fc606 	br	f170 <__alt_data_end+0xfffef170>
    f258:	00bfffc4 	movi	r2,-1
    f25c:	003fd006 	br	f1a0 <__alt_data_end+0xfffef1a0>

0000f260 <__call_exitprocs>:
    f260:	defff504 	addi	sp,sp,-44
    f264:	df000915 	stw	fp,36(sp)
    f268:	dd400615 	stw	r21,24(sp)
    f26c:	dc800315 	stw	r18,12(sp)
    f270:	dfc00a15 	stw	ra,40(sp)
    f274:	ddc00815 	stw	r23,32(sp)
    f278:	dd800715 	stw	r22,28(sp)
    f27c:	dd000515 	stw	r20,20(sp)
    f280:	dcc00415 	stw	r19,16(sp)
    f284:	dc400215 	stw	r17,8(sp)
    f288:	dc000115 	stw	r16,4(sp)
    f28c:	d9000015 	stw	r4,0(sp)
    f290:	2839883a 	mov	fp,r5
    f294:	04800044 	movi	r18,1
    f298:	057fffc4 	movi	r21,-1
    f29c:	00800074 	movhi	r2,1
    f2a0:	1084a204 	addi	r2,r2,4744
    f2a4:	12000017 	ldw	r8,0(r2)
    f2a8:	45005217 	ldw	r20,328(r8)
    f2ac:	44c05204 	addi	r19,r8,328
    f2b0:	a0001c26 	beq	r20,zero,f324 <__call_exitprocs+0xc4>
    f2b4:	a0800117 	ldw	r2,4(r20)
    f2b8:	15ffffc4 	addi	r23,r2,-1
    f2bc:	b8000d16 	blt	r23,zero,f2f4 <__call_exitprocs+0x94>
    f2c0:	14000044 	addi	r16,r2,1
    f2c4:	8421883a 	add	r16,r16,r16
    f2c8:	8421883a 	add	r16,r16,r16
    f2cc:	84402004 	addi	r17,r16,128
    f2d0:	a463883a 	add	r17,r20,r17
    f2d4:	a421883a 	add	r16,r20,r16
    f2d8:	e0001e26 	beq	fp,zero,f354 <__call_exitprocs+0xf4>
    f2dc:	80804017 	ldw	r2,256(r16)
    f2e0:	e0801c26 	beq	fp,r2,f354 <__call_exitprocs+0xf4>
    f2e4:	bdffffc4 	addi	r23,r23,-1
    f2e8:	843fff04 	addi	r16,r16,-4
    f2ec:	8c7fff04 	addi	r17,r17,-4
    f2f0:	bd7ff91e 	bne	r23,r21,f2d8 <__alt_data_end+0xfffef2d8>
    f2f4:	00800034 	movhi	r2,0
    f2f8:	10800004 	addi	r2,r2,0
    f2fc:	10000926 	beq	r2,zero,f324 <__call_exitprocs+0xc4>
    f300:	a0800117 	ldw	r2,4(r20)
    f304:	1000301e 	bne	r2,zero,f3c8 <__call_exitprocs+0x168>
    f308:	a0800017 	ldw	r2,0(r20)
    f30c:	10003226 	beq	r2,zero,f3d8 <__call_exitprocs+0x178>
    f310:	a009883a 	mov	r4,r20
    f314:	98800015 	stw	r2,0(r19)
    f318:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f31c:	9d000017 	ldw	r20,0(r19)
    f320:	a03fe41e 	bne	r20,zero,f2b4 <__alt_data_end+0xfffef2b4>
    f324:	dfc00a17 	ldw	ra,40(sp)
    f328:	df000917 	ldw	fp,36(sp)
    f32c:	ddc00817 	ldw	r23,32(sp)
    f330:	dd800717 	ldw	r22,28(sp)
    f334:	dd400617 	ldw	r21,24(sp)
    f338:	dd000517 	ldw	r20,20(sp)
    f33c:	dcc00417 	ldw	r19,16(sp)
    f340:	dc800317 	ldw	r18,12(sp)
    f344:	dc400217 	ldw	r17,8(sp)
    f348:	dc000117 	ldw	r16,4(sp)
    f34c:	dec00b04 	addi	sp,sp,44
    f350:	f800283a 	ret
    f354:	a0800117 	ldw	r2,4(r20)
    f358:	80c00017 	ldw	r3,0(r16)
    f35c:	10bfffc4 	addi	r2,r2,-1
    f360:	15c01426 	beq	r2,r23,f3b4 <__call_exitprocs+0x154>
    f364:	80000015 	stw	zero,0(r16)
    f368:	183fde26 	beq	r3,zero,f2e4 <__alt_data_end+0xfffef2e4>
    f36c:	95c8983a 	sll	r4,r18,r23
    f370:	a0806217 	ldw	r2,392(r20)
    f374:	a5800117 	ldw	r22,4(r20)
    f378:	2084703a 	and	r2,r4,r2
    f37c:	10000b26 	beq	r2,zero,f3ac <__call_exitprocs+0x14c>
    f380:	a0806317 	ldw	r2,396(r20)
    f384:	2088703a 	and	r4,r4,r2
    f388:	20000c1e 	bne	r4,zero,f3bc <__call_exitprocs+0x15c>
    f38c:	89400017 	ldw	r5,0(r17)
    f390:	d9000017 	ldw	r4,0(sp)
    f394:	183ee83a 	callr	r3
    f398:	a0800117 	ldw	r2,4(r20)
    f39c:	15bfbf1e 	bne	r2,r22,f29c <__alt_data_end+0xfffef29c>
    f3a0:	98800017 	ldw	r2,0(r19)
    f3a4:	153fcf26 	beq	r2,r20,f2e4 <__alt_data_end+0xfffef2e4>
    f3a8:	003fbc06 	br	f29c <__alt_data_end+0xfffef29c>
    f3ac:	183ee83a 	callr	r3
    f3b0:	003ff906 	br	f398 <__alt_data_end+0xfffef398>
    f3b4:	a5c00115 	stw	r23,4(r20)
    f3b8:	003feb06 	br	f368 <__alt_data_end+0xfffef368>
    f3bc:	89000017 	ldw	r4,0(r17)
    f3c0:	183ee83a 	callr	r3
    f3c4:	003ff406 	br	f398 <__alt_data_end+0xfffef398>
    f3c8:	a0800017 	ldw	r2,0(r20)
    f3cc:	a027883a 	mov	r19,r20
    f3d0:	1029883a 	mov	r20,r2
    f3d4:	003fb606 	br	f2b0 <__alt_data_end+0xfffef2b0>
    f3d8:	0005883a 	mov	r2,zero
    f3dc:	003ffb06 	br	f3cc <__alt_data_end+0xfffef3cc>

0000f3e0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f3e0:	defffd04 	addi	sp,sp,-12
    f3e4:	df000215 	stw	fp,8(sp)
    f3e8:	df000204 	addi	fp,sp,8
    f3ec:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f3f0:	0001883a 	nop
    f3f4:	e0bfff17 	ldw	r2,-4(fp)
    f3f8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f3fc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f400:	10000226 	beq	r2,zero,f40c <_exit+0x2c>
    ALT_SIM_FAIL();
    f404:	002af070 	cmpltui	zero,zero,43969
    f408:	00000106 	br	f410 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f40c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f410:	003fff06 	br	f410 <__alt_data_end+0xfffef410>
